OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:27:12.589106-03:00' ],		#prior : OmReference [ 'Pharo7.0.4-0-32bit-ccd1f64.4qt3v3z6q8qz2d0grsluqxzqu', '36' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WAImagenes class',				#isMetaSide : true			},			#name : #'owner:model:',			#protocol : #accessing,			#sourceCode : 'owner: ownerComponent model: imagenesAMostrar\r\t^ self new initializeOwner: ownerComponent onModel: nil',			#stamp : 'LucasGomez 3/21/2020 18:28',			#package : #Poemas-Gui		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'WAImagenes class',				#isMetaSide : true			},			#name : #'owner:model:',			#protocol : #accessing,			#sourceCode : 'owner: ownerComponent model: imagenesAMostrar\r\t^ self new initializeOwner: ownerComponent onModel: imagenesAMostrar',			#stamp : 'LucasGomez 3/21/2020 19:27',			#package : #Poemas-Gui		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:32:23.602106-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAPoema,				#isMetaSide : false			},			#name : #'renderPalabra:withRenderer:',			#protocol : #render,			#sourceCode : 'renderPalabra: unaPalabraReal withRenderer: html\r\thtml anchor\r\t\ttitle: unaPalabraReal autor;\r\t\tcallback: [ self agregarVersoConPalabra: unaPalabraReal ];\r\t\tscript: (html jQuery new draggable \r                  opacity: 0.75;\r                  revert: true);\r\t\twith: unaPalabraReal\r\t\t',			#stamp : 'LucasGomez 3/21/2020 17:02',			#package : #Poemas-Gui		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAPoema,				#isMetaSide : false			},			#name : #'renderPalabra:withRenderer:',			#protocol : #render,			#sourceCode : 'renderPalabra: unaPalabraReal withRenderer: html\r\thtml anchor\r\t\ttitle: unaPalabraReal autor;\r\t\tcallback: [ self agregarVersoConPalabra: unaPalabraReal ];\r\t\tscript: (html jQuery new draggable \r                  opacity: 0.75";\r                  revert: true");\r\t\twith: unaPalabraReal\r\t\t',			#stamp : 'LucasGomez 3/21/2020 19:32',			#package : #Poemas-Gui		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:44:43.377106-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAPoema,				#isMetaSide : false			},			#name : #'renderPalabra:withRenderer:',			#protocol : #render,			#sourceCode : 'renderPalabra: unaPalabraReal withRenderer: html\r\thtml anchor\r\t\ttitle: unaPalabraReal autor;\r\t\tcallback: [ self agregarVersoConPalabra: unaPalabraReal ];\r\t\tscript: (html jQuery new draggable \r                  opacity: 0.75";\r                  revert: true");\r\t\twith: unaPalabraReal\r\t\t',			#stamp : 'LucasGomez 3/21/2020 19:32',			#package : #Poemas-Gui		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAPoema,				#isMetaSide : false			},			#name : #'renderPalabra:withRenderer:',			#protocol : #render,			#sourceCode : 'renderPalabra: unaPalabraReal withRenderer: html\r\thtml anchor\r\t\ttitle: unaPalabraReal autor;\r\t\tcallback: [ self agregarVersoConPalabra: unaPalabraReal ];\r\t\tpassenger: unaPalabraReal;\r\t\tscript: (html jQuery new draggable \r                  opacity: 0.75";\r                  revert: true");\r\t\twith: unaPalabraReal\r\t\t',			#stamp : 'LucasGomez 3/21/2020 19:44',			#package : #Poemas-Gui		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:44:49.498106-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAPoema,				#isMetaSide : false			},			#name : #'renderPalabra:withRenderer:',			#protocol : #render,			#sourceCode : 'renderPalabra: unaPalabraReal withRenderer: html\r\thtml anchor\r\t\ttitle: unaPalabraReal autor;\r\t\tcallback: [ self agregarVersoConPalabra: unaPalabraReal ];\r\t\tpassenger: unaPalabraReal;\r\t\tscript: (html jQuery new draggable \r                  opacity: 0.75";\r                  revert: true");\r\t\twith: unaPalabraReal\r\t\t',			#stamp : 'LucasGomez 3/21/2020 19:44',			#package : #Poemas-Gui		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAPoema,				#isMetaSide : false			},			#name : #'renderPalabra:withRenderer:',			#protocol : #render,			#sourceCode : 'renderPalabra: unaPalabraReal withRenderer: html\r\thtml anchor\r\t\ttitle: unaPalabraReal autor;\r\t\tcallback: [ self agregarVersoConPalabra: unaPalabraReal ];\r\t\tpassenger: unaPalabraReal;\r\t\tscript: (html jQuery new draggable \r                  opacity: 0.75;\r                  revert: true);\r\t\twith: unaPalabraReal\r\t\t',			#stamp : 'LucasGomez 3/21/2020 19:44',			#package : #Poemas-Gui		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:46:02.446106-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: aPalabraReal \r\tself shouldBeImplemented.',			#stamp : 'LucasGomez 3/21/2020 19:46',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:46:44.959106-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAImagenes,				#isMetaSide : false			},			#name : #'renderForm:withRenderer:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderForm: formDeImagen withRenderer: html\r\r\thtml paragraph: [\r\t\thtml image\r\t\t\tdocument: formDeImagen\r\t\t\tmimeType: \'image/jpg\';\r\t\t\tscript: (html jQuery new droppable\r         \t\t\t\t\tonDrop: (html jQuery this load\r            \t\t\t\t\t\t\tcallbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ]))\r\t\t\t\r\r\t\t ]',			#stamp : 'LucasGomez 3/21/2020 19:30',			#package : #Poemas-Gui		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAImagenes,				#isMetaSide : false			},			#name : #'renderForm:withRenderer:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderForm: formDeImagen withRenderer: html\r\r\thtml paragraph: [\r\t\thtml image\r\t\t\tdocument: formDeImagen\r\t\t\tmimeType: \'image/jpg\';\r\t\t\tscript: (html jQuery new droppable\r         \t\t\t\t\tonDrop: (html jQuery this load\r            \t\t\t\t\t\t\tcallbackDroppable: [ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ]))\r\t\t\t\r\r\t\t ]',			#stamp : 'LucasGomez 3/21/2020 19:46',			#package : #Poemas-Gui		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:48:38.750106-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: aPalabraReal inForm: aForm \r\tself shouldBeImplemented.',			#stamp : 'LucasGomez 3/21/2020 19:48',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:49:21.274106-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: aPalabraReal inForm: aForm \r\tself shouldBeImplemented.',			#stamp : 'LucasGomez 3/21/2020 19:48',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\tforms detect: [ :each | each = unForm ]',			#stamp : 'LucasGomez 3/21/2020 19:49',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:51:29.145106-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\tforms detect: [ :each | each = unForm ]',			#stamp : 'LucasGomez 3/21/2020 19:49',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra |\r\tpoemaConPalabra := unaPalabraReal poema. \r\t(forms detect: [ :each | each = unForm ])\r\t',			#stamp : 'LucasGomez 3/21/2020 19:51',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:51:55.094106-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Palabra,				#isMetaSide : false			},			#name : #poema,			#protocol : #'as yet unclassified',			#sourceCode : 'poema\r\t^ poema',			#stamp : 'LucasGomez 3/21/2020 19:51',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:52:55.160106-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra |\r\tpoemaConPalabra := unaPalabraReal poema. \r\t(forms detect: [ :each | each = unForm ])\r\t',			#stamp : 'LucasGomez 3/21/2020 19:51',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema. \r\t(forms detect: [ :each | each = unForm ])\r\t',			#stamp : 'LucasGomez 3/21/2020 19:52',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T19:55:45.371106-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Poema,				#isMetaSide : false			},			#name : #textoDePoema,			#protocol : #'as yet unclassified',			#sourceCode : 'textoDePoema\r\t^ textoDePoema',			#stamp : 'LucasGomez 3/21/2020 19:55',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T20:02:07.083106-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema. \r\t(forms detect: [ :each | each = unForm ])\r\t',			#stamp : 'LucasGomez 3/21/2020 19:53',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema. \r\tbitmap := (forms detect: [ :each | each = unForm ]) bits\r\t',			#stamp : 'LucasGomez 3/21/2020 20:02',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T20:05:28.074106-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema. \r\tbitmap := (forms detect: [ :each | each = unForm ]) bits\r\t',			#stamp : 'LucasGomez 3/21/2020 20:02',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema. \r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\tbitmap\r\t',			#stamp : 'LucasGomez 3/21/2020 20:05',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T20:52:06.796106-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema. \r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\tbitmap\r\t',			#stamp : 'LucasGomez 3/21/2020 20:05',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema. \r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: offset \r\t',			#stamp : 'LucasGomez 3/21/2020 20:52',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:00:28.041106-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema. \r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: offset \r\t',			#stamp : 'LucasGomez 3/21/2020 20:52',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema collect: [ :char | char asInteger ].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 1 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:00',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:01:13.429106-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema collect: [ :char | char asInteger ].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 1 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:00',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema collect: [ :char | char asInteger].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 1 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:01',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:01:36.241106-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema collect: [ :char | char asInteger].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 1 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:01',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema collect: [ :char | char asciiValue].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 1 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:01',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:03:11.676106-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: aPalabraReal \r\tself shouldBeImplemented.',			#stamp : 'LucasGomez 3/21/2020 19:46',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:04:02.469106-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema collect: [ :char | char asciiValue].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 1 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:01',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema asOrderedCollection collect: [ :char | char asciiValue].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 1 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:04',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:05:47.276106-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema asOrderedCollection collect: [ :char | char asciiValue].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 1 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:04',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema asOrderedCollection collect: [ :char | char asciiValue].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 0 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:05',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:06:38.963106-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema asOrderedCollection collect: [ :char | char asciiValue].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 0 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:05',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema asOrderedCollection collect: [ :char | char asciiValue].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 2 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:06',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:06:56.127106-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema asOrderedCollection collect: [ :char | char asciiValue].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset with: poemaConPalabra startingAt: 2 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:06',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra bitmap offset |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema asOrderedCollection collect: [ :char | char asciiValue].\r\tbitmap := (forms detect: [ :each | each = unForm ]) bits.\r\toffset := (100 to: bitmap size) atRandom.\r\tbitmap replaceFrom: offset to: poemaConPalabra size + offset - 1 with: poemaConPalabra startingAt: 1 \r\t',			#stamp : 'LucasGomez 3/21/2020 21:06',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:16:18.345106-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAImagenes,				#isMetaSide : false			},			#name : #'renderForm:withRenderer:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderForm: formDeImagen withRenderer: html\r\r\thtml paragraph: [\r\t\thtml image\r\t\t\tdocument: formDeImagen\r\t\t\tmimeType: \'image/jpg\';\r\t\t\tscript: (html jQuery new droppable\r         \t\t\t\t\tonDrop: (html jQuery this load\r            \t\t\t\t\t\t\tcallbackDroppable: [ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ]))\r\t\t\t\r\r\t\t ]',			#stamp : 'LucasGomez 3/21/2020 19:46',			#package : #Poemas-Gui		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAImagenes,				#isMetaSide : false			},			#name : #'renderForm:withRenderer:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderForm: formDeImagen withRenderer: html\r\r\thtml paragraph: [\r\t\thtml image\r\t\t\tdocument: formDeImagen\r\t\t\tmimeType: \'image/jpg\';\r\t\t\tscript: (html jQuery new droppable\r         \t\t\t\t\tonDrop: (html jQuery this load\r            \t\t\t\t\t\t\tcallbackDroppable: [ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];\r\t\t\t\t\t\t\t\t\t\thtml: [ :r | self renderForm: formDeImagen withRenderer: r]))\r\t\t\t\r\r\t\t ]',			#stamp : 'LucasGomez 3/21/2020 21:16',			#package : #Poemas-Gui		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:19:56.566106-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAImagenes,				#isMetaSide : false			},			#name : #'renderForm:withRenderer:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderForm: formDeImagen withRenderer: html\r\r\thtml paragraph: [\r\t\thtml image\r\t\t\tdocument: formDeImagen\r\t\t\tmimeType: \'image/jpg\';\r\t\t\tscript: (html jQuery new droppable\r         \t\t\t\t\tonDrop: (html jQuery this load\r            \t\t\t\t\t\t\tcallbackDroppable: [ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];\r\t\t\t\t\t\t\t\t\t\thtml: [ :r | self renderForm: formDeImagen withRenderer: r]))\r\t\t\t\r\r\t\t ]',			#stamp : 'LucasGomez 3/21/2020 21:16',			#package : #Poemas-Gui		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAImagenes,				#isMetaSide : false			},			#name : #'renderForm:withRenderer:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderForm: formDeImagen withRenderer: html\r\r\thtml paragraph: [\r\t\thtml image\r\t\t\tdocument: formDeImagen\r\t\t\tmimeType: \'image/jpg\';\r\t\t\tscript: (html jQuery new droppable\r         \t\t\t\t\tonDrop: (html jQuery this load\r            \t\t\t\t\t\t\tcallbackDroppable: [ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];\r\t\t\t\t\t\t\t\t\t\thtml: [ :r | self renderForm: formDeImagen withRenderer: r]));\r\t\t\twith: [ :r | self renderForm: formDeImagen withRenderer: r]\r\r\t\t ]',			#stamp : 'LucasGomez 3/21/2020 21:19',			#package : #Poemas-Gui		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-21T21:20:34.795106-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAImagenes,				#isMetaSide : false			},			#name : #'renderForm:withRenderer:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderForm: formDeImagen withRenderer: html\r\r\thtml paragraph: [\r\t\thtml image\r\t\t\tdocument: formDeImagen\r\t\t\tmimeType: \'image/jpg\';\r\t\t\tscript: (html jQuery new droppable\r         \t\t\t\t\tonDrop: (html jQuery this load\r            \t\t\t\t\t\t\tcallbackDroppable: [ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];\r\t\t\t\t\t\t\t\t\t\thtml: [ :r | self renderForm: formDeImagen withRenderer: r]));\r\t\t\twith: [ :r | self renderForm: formDeImagen withRenderer: r]\r\r\t\t ]',			#stamp : 'LucasGomez 3/21/2020 21:19',			#package : #Poemas-Gui		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #WAImagenes,				#isMetaSide : false			},			#name : #'renderForm:withRenderer:',			#protocol : #'as yet unclassified',			#sourceCode : 'renderForm: formDeImagen withRenderer: html\r\r\thtml paragraph: [\r\t\thtml image\r\t\t\tdocument: formDeImagen\r\t\t\tmimeType: \'image/jpg\';\r\t\t\tscript: (html jQuery new droppable\r         \t\t\t\t\tonDrop: (html jQuery this load\r            \t\t\t\t\t\t\tcallbackDroppable: [ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];\r\t\t\t\t\t\t\t\t\t\thtml: [ :r | self renderForm: formDeImagen withRenderer: r]));\r\t\t\twith: [ :r | self renderForm: formDeImagen withRenderer: html]\r\r\t\t ]',			#stamp : 'LucasGomez 3/21/2020 21:20',			#package : #Poemas-Gui		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-22T10:55:14.073106-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #imageStreams,			#protocol : #'as yet unclassified',			#sourceCode : 'imageStreams\r\r \r\t| streams |\r\tstreams := (FileSystem disk childrenAt: path) collect: [:pathOfFile | File openForWriteFileNamed: (pathOfFile pathString trimLeft: [:char | char = $/])].\r\t^(1 to: 4) collect:[:numero | streams atRandom: Random new]\r\t',			#stamp : 'LucasGomez 3/21/2020 16:42',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #imageStreams,			#protocol : #'as yet unclassified',			#sourceCode : 'imageStreams\r\r \r\t| streams |\r\tstreams := (FileSystem disk childrenAt: path) collect: [:pathOfFile | File openForWriteFileNamed: (pathOfFile pathString trimLeft: [:char | char = $/])].\r\t^OrderedCollection with: (streams atRandom: Random new)\r\t',			#stamp : 'LucasGomez 3/22/2020 10:55',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-22T10:58:05.832106-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #imageStreams,			#protocol : #'as yet unclassified',			#sourceCode : 'imageStreams\r\r \r\t| streams |\r\tstreams := (FileSystem disk childrenAt: path) collect: [:pathOfFile | File openForWriteFileNamed: (pathOfFile pathString trimLeft: [:char | char = $/])].\r\t^OrderedCollection with: (streams atRandom: Random new)\r\t',			#stamp : 'LucasGomez 3/22/2020 10:55',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #imageStreams,			#protocol : #'as yet unclassified',			#sourceCode : 'imageStreams\r\r \r\t| stream pathOfFile |\r\tpathOfFile := (FileSystem disk childrenAt: path) atRandom: Random new.\r\tstream := File openForWriteFileNamed: (pathOfFile pathString trimLeft: [:char | char = $/]).\r\t^OrderedCollection with: stream\r\t',			#stamp : 'LucasGomez 3/22/2020 10:58',			#package : #Poemas-Core		}	}}