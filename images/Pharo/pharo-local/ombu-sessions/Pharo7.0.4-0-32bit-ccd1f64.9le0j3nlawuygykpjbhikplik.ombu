OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T22:08:58.672188-03:00' ],		#prior : OmReference [ 'Pharo7.0.4-0-32bit-ccd1f64.1fkz6ocrnbxfqcxeqzoj6ev1a', '10' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size).\r\tunForm bits: (Bitmap new fromByteStream: (ReadWriteStream on: byteString asByteArray))\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/24/2020 17:45',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new fromByteStream: (ReadWriteStream on: byteString asByteArray))\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 22:08',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T22:53:45.044188-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new fromByteStream: (ReadWriteStream on: byteString asByteArray))\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 22:08',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new copyFromByteArray: byteString asByteArray)\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 22:53',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T23:02:28.438188-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new copyFromByteArray: byteString asByteArray)\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 22:53',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Form new hackBits: byteString asByteArray) bits\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 23:02',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T23:11:50.870188-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Form new hackBits: byteString asByteArray) bits\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 23:02',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new decompressFromByteArray: byteString asByteArray)\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 23:11',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T23:12:50.834188-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new decompressFromByteArray: byteString asByteArray)\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 23:11',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap decompressFromByteArray: byteString asByteArray)\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 23:12',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T23:17:35.186188-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Model subclass: #Imagenes\r\tinstanceVariableNames: \'path forms\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Poemas-Core\'',				#superclassName : 'Model'			},			#name : #Imagenes,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Imagenes,						#isMetaSide : false					},					#name : #path,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Imagenes,						#isMetaSide : false					},					#name : #forms,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Imagenes class\r\tinstanceVariableNames: \'\''				},				#name : #'Imagenes class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Imagenes,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Poemas-Core,			#package : #Poemas-Core,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#traitCompositionSource : '{}',				#definitionSource : 'Model subclass: #Imagenes\r\tinstanceVariableNames: \'path forms paths\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Poemas-Core\'',				#superclassName : 'Model'			},			#name : #Imagenes,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Imagenes,						#isMetaSide : false					},					#name : #path,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Imagenes,						#isMetaSide : false					},					#name : #forms,					#parent : @25				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Imagenes,						#isMetaSide : false					},					#name : #paths,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Imagenes class\r\tinstanceVariableNames: \'\''				},				#name : #'Imagenes class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Imagenes,					#isMetaSide : false				},				#parent : @25,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Poemas-Core,			#package : #Poemas-Core,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T23:17:35.261188-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #initializeForms,			#protocol : #'as yet unclassified',			#sourceCode : 'initializeForms\r\r\t| paths  |\r\tpaths := (1 to: 4) collect:[:numero | (FileSystem disk childrenAt: path) atRandom: Random new].\r\tforms := paths collect: [:pathOfFile | Form fromFileNamed: pathOfFile ].\r\t',			#stamp : 'LucasGomez 3/23/2020 17:59',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #initializeForms,			#protocol : #'as yet unclassified',			#sourceCode : 'initializeForms\r\r\r\tpaths := (1 to: 4) collect:[:numero | (FileSystem disk childrenAt: path) atRandom: Random new].\r\tforms := paths collect: [:pathOfFile |  Form fromFileNamed: pathOfFile ].\r\t',			#stamp : 'LucasGomez 3/25/2020 23:17',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T23:23:21.559188-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap decompressFromByteArray: byteString asByteArray)\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 23:12',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new fromByteStream: (ReadWriteStream on: byteString asByteArray))\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 22:08',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T23:26:05.040188-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new fromByteStream: (ReadWriteStream on: byteString asByteArray))\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 22:08',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new fromByteStream: (ZnBufferedReadStream on: (ReadWriteStream on: byteString asByteArray)))\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 23:26',			#package : #Poemas-Core		}	}}OmEntry {	#tags : {		#author : 'LucasGomez',		#time : DateAndTime [ '2020-03-25T23:49:17.817188-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits asByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new fromByteStream: (ZnBufferedReadStream on: (ReadWriteStream on: byteString asByteArray)))\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 23:26',			#package : #Poemas-Core		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Imagenes,				#isMetaSide : false			},			#name : #'convertImageWith:inForm:',			#protocol : #'as yet unclassified',			#sourceCode : 'convertImageWith: unaPalabraReal inForm: unForm \r\t\r\t| poemaConPalabra byteString index |\r\tpoemaConPalabra := (unaPalabraReal poema) textoDePoema.\r\tbyteString := unForm bits compressToByteArray asString.\r\tindex := (100 to: byteString size) atRandom.\r\tbyteString := byteString , poemaConPalabra.\r\t"byteString := (byteString copyFrom: 1 to: index)  , poemaConPalabra , (unForm bits asByteArray asString copyFrom: index + 1 to: byteString size)."\r\tunForm bits: (Bitmap new fromByteStream: (ZnBufferedReadStream on: (ReadWriteStream on: byteString asByteArray)))\r\t\r\r\t\r\r\t\t',			#stamp : 'LucasGomez 3/25/2020 23:49',			#package : #Poemas-Core		}	}}