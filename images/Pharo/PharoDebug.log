THERE_BE_DRAGONS_HERE
Instance of Array did not understand #unionCollect:
12 March 2020 9:06:49.192668 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Array(Object)>>doesNotUnderstand: #unionCollect:
	Receiver: an Array(Y coincidimos en el terral Soy)
	Arguments and temporary variables: 
		aMessage: 	unionCollect: [ :poema | poema versosConPalabra: unaPalabra ]
		exception: 	MessageNotUnderstood: Array>>unionCollect:
		resumeValue: 	nil
	Receiver's instance variables: 
an Array(Y coincidimos en el terral Soy)

Poemas>>versosConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	y
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(Y coincidimos en el terral Soy)
		poemasQueNoSePuedenMostrar: 	an OrderedCollection()


PoemaTest>>testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 
		poemas: 	a Poemas
	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


PoemaTest(TestCase)>>performTest
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ self setUp.
self performTest ] in PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


BlockClosure>>ensure:
	Receiver: [ self setUp.
self performTest ]
	Arguments and temporary variables: 
		aBlock: 	[ self tearDown.
self cleanUpInstanceVariables ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	PoemaTest(TestCase)>>runCase
		startpc: 	57
		numArgs: 	0


PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ aTestCase runCase ] in [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ aTestCase runCase ]
	Arguments and temporary variables: 
		exception: 	Halt
		handlerAction: 	[ :halt | 
"if test was halted we should resume all background f...etc...
	Receiver's instance variables: 
		outerContext: 	[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was ...etc...
		startpc: 	63
		numArgs: 	0


[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume a...etc...
	Arguments and temporary variables: 
		exception: 	an ExceptionSet
		handlerAction: 	[ :err | 
"error here means that test is failed. So we should ch...etc...
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCaseSafelly:
		startpc: 	58
		numArgs: 	0


TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVerTHERE_BE_DRAGONS_HERE
Instance of OrderedCollection did not understand #unionCollect:
12 March 2020 9:07:35.655668 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

OrderedCollection(Object)>>doesNotUnderstand: #unionCollect:
	Receiver: an OrderedCollection(Y coincidimos en el terral Soy)
	Arguments and temporary variables: 
		aMessage: 	unionCollect: [ :poema | poema versosConPalabra: unaPalabra ]
		exception: 	MessageNotUnderstood: OrderedCollection>>unionCollect:
		resumeValue: 	nil
	Receiver's instance variables: 
		array: 	an Array(Y coincidimos en el terral Soy)
		firstIndex: 	1
		lastIndex: 	2


Poemas>>versosConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	y
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(Y coincidimos en el terral Soy)
		poemasQueNoSePuedenMostrar: 	an OrderedCollection()


PoemaTest>>testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 
		poemas: 	a Poemas
	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


PoemaTest(TestCase)>>performTest
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ self setUp.
self performTest ] in PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


BlockClosure>>ensure:
	Receiver: [ self setUp.
self performTest ]
	Arguments and temporary variables: 
		aBlock: 	[ self tearDown.
self cleanUpInstanceVariables ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	PoemaTest(TestCase)>>runCase
		startpc: 	57
		numArgs: 	0


PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ aTestCase runCase ] in [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ aTestCase runCase ]
	Arguments and temporary variables: 
		exception: 	Halt
		handlerAction: 	[ :halt | 
"if test was halted we should resume all background f...etc...
	Receiver's instance variables: 
		outerContext: 	[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was ...etc...
		startpc: 	63
		numArgs: 	0


[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume a...etc...
	Arguments and temporary variables: 
		exception: 	an ExceptionSet
		handlerAction: 	[ :err | 
"error here means that test is failed. So we should ch...etc...
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCaseSafelly:
		startpc: 	58
		numArgs: 	0


TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ self runTestCaseSafelly: aTestCase ] in [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ensure:
	Receiver: [ self runTestCaseSafelly: aTestCase ]
	Arguments and temporary variables: 
		aBlock: 	[ testCompleted := true.
watchDogSemaphore signal ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted...etc...
		startpc: 	61
		numArgs: 	0


[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ifCurtailed:
	Receiver: [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemap...etc...
	Arguments and temporary variables: 
		aBlock: 	[ forkedProcesses removeAll.
failedProcesses removeAll ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCase:
		startpc: 	56
		numArgs: 	0


TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ testEnv runTestCase: aTestCase ] in DefaultExecutionEnvironment>>runTestCase:
	Receiver: a DefaultExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
		testEnv: 	a TestExecutionEnvironment
	Receiver's instance variables: 
a DefaultExecutionEnvironment

[ self value: anExecutionEnvironment.
anExecutionEnvironment activated.
aBlock value ] in CurrentExecutionEnvironment class>>activate:for:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		anExecutionEnvironment: 	a TestExecutionEnvironment
		aBlock: 	[ testEnv runTestCase: aTestCase ]
		current: 	a DefaultExecutionEnvironment
	Receiver's instance variables: 
		superclass: 	ProcessLocalVariable
		methodDict: 	a MethodDictionary(#default->CurrentExecutionEnvironment>>#default ...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CurrentExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		soleInstance: 	a CurrentExecutionEnvironment


BlockClosure>>ensure:
	Receiver: [ self value: anExecutionEnvironment.
anExecutionEnvironment activated.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ self value: current.
anExecutionEnvironment deactivated ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	CurrentExecutionEnvironment class>>activate:for:
		startpc: 	55
		numArgs: 	0


CurrentExecutionEnvironment class>>activate:for:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		anExecutionEnvironment: 	a TestExecutionEnvironment
		aBlock: 	[ testEnv runTestCase: aTestCase ]
		current: 	a DefaultExecutionEnvironment
	Receiver's instance variables: 
		superclass: 	ProcessLocalVariable
		methodDict: 	a MethodDictionary(#default->CurrentExecutionEnvironment>>#default ...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CurrentExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		soleInstance: 	a CurrentExecutionEnvironment


TestExecutionEnvironment(ExecutionEnvironment)>>beActiveDuring:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aBlock: 	[ testEnv runTestCase: aTestCase ]
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


DefaultExecutionEnvironment>>runTestCase:
	Receiver: a DefaultExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
		testEnv: 	a TestExecutionEnvironment
	Receiver's instance variables: 
a DefaultExecutionEnvironment

CurrentExecutionEnvironment class>>runTestCase:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		superclass: 	ProcessLocalVariable
		methodDict: 	a MethodDictionary(#default->CurrentExecutionEnvironment>>#default ...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CurrentExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		soleInstance: 	a CurrentExecutionEnvironment


PoemaTest(TestCase)>>runCaseManaged
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ aTestCase announce: TestCaseStarted withResult: self.
aTestCase runCaseManaged.
aTestCase announce: TestCaseEnded withResult: self.
"To not affect performance of big test suites following logic is not inside addPass: method"
errors remove: aTestCase ifAbsent: [  ].
failures remove: aTestCase ifAbsent: [  ].
self addPass: aTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAPoemas>>versos
13 March 2020 5:50:50.099618 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAPoemas(Object)>>doesNotUnderstand: #versos
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aMessage: 	versos
		exception: 	MessageNotUnderstood: WAPoemas>>versos
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WADelegation
		model: 	a Poemas
		poemaConstruido: 	las moscas


WAPoemas(WAPharoInspector)>>DoItIn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		ThisContext: 	WAPharoInspector>>evaluate
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WADelegation
		model: 	a Poemas
		poemaConstruido: 	las moscas


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ self versos
		source: 	a ReadStream
		context: 	WAPharoInspector>>evaluate
		receiver: 	a WAPoemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


OpalCompiler>>evaluate:in:to:
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		aString: 	'self versos'
		aContext: 	WAPharoInspector>>evaluate
		aReceiver: 	a WAPoemas
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ self versos
		source: 	a ReadStream
		context: 	WAPharoInspector>>evaluate
		receiver: 	a WAPoemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


WAPharoInspector>>evaluate
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


WAPharoInspector(WAInspector)>>doIt
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


WAPharoInspector>>doIt
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 
		result: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


[ self perform: each ] in [ :each | 
html submitButton
	callback: [ self perform: each ];
	text: each ] in WAPharoInspector(WAInspector)>>renderEditAreaOn:
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 
		html: 	nil
		each: 	#doIt
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self perform: each ]
	Arguments and temporary variables: 
		anArray: 	#('doIt')
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	[ :each | 
html submitButton
	callback: [ self perform: each ];
	...etc...
		startpc: 	75
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self debug ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self debug ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&_s=dgPbDrEArkd3qi-p&_k=YfmE...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '10'->a WAActionCallback '11'->...etc...
		nextKey: 	14


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&_s=dgPbDrEArkd3qi-p&_k=YfmE...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '10'->a WAActionCallback '11'->...etc...
		nextKey: 	14


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&_s=dgPbDrEArkd3qi-p&_k=YfmEf...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapTHERE_BE_DRAGONS_HERE
Instance of WAPoemas did not understand #versos
13 March 2020 5:51:21.440618 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAPoemas(Object)>>doesNotUnderstand: #versos
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aMessage: 	versos
		exception: 	MessageNotUnderstood: WAPoemas>>versos
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WADelegation
		model: 	a Poemas
		poemaConstruido: 	las moscas


WAPoemas(WAPharoInspector)>>DoItIn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		ThisContext: 	WAPoemas(WAPharoInspector)>>DoItIn:
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WADelegation
		model: 	a Poemas
		poemaConstruido: 	las moscas


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ self versos
		source: 	a ReadStream
		context: 	WAPoemas(WAPharoInspector)>>DoItIn:
		receiver: 	a WAPoemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAPoemas
		ctxt: 	WAPoemas(WAPharoInspector)>>DoItIn:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(331884032)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(331884032)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(161777664)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(331884032)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (631@50)
		owner: 	a TransformWithLayoutMorph(962311936)
		submorphs: 	an Array(a RubCursor(397664512) a RubPrimarySelectionMorph(58784256)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (580760576) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(881388800)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(397664512)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(533854208))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(161777664)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(804516864))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	648020
		lastStepMessage: 	nil
		lastCycleTime: 	280179
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(397664512)))
		lastAlarmTime: 	280149
		menuBuilder: 	nil
		activeHand: 	a HandMorph(804516864)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (976@665)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (976@665)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (688245248) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(804516864))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	648020
		lastStepMessage: 	nil
		lastCycleTime: 	280179
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(397664512)))
		lastAlarmTime: 	280149
		menuBuilder: 	nil
		activeHand: 	a HandMorph(804516864)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(804516864))
		viewBox: 	(0@0) corner: (976@665)
		canvas: 	a FormCanvas on: DisplayScreen(976x665x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	648020
		lastStepMessage: 	nil
		lastCycleTime: 	280179
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(397664512)))
		lastAlarmTime: 	280149
		menuBuilder: 	nil
		activeHand: 	a HandMorph(804516864)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (976@665)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (976@665)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (688245248) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFilesTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAPoemas>>versos
13 March 2020 5:51:27.722618 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAPoemas(Object)>>doesNotUnderstand: #versos
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aMessage: 	versos
		exception: 	MessageNotUnderstood: WAPoemas>>versos
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WADelegation
		model: 	a Poemas
		poemaConstruido: 	las moscas


WAPoemas(WAPharoInspector)>>DoItIn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		ThisContext: 	WAPharoInspector>>evaluate
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WADelegation
		model: 	a Poemas
		poemaConstruido: 	las moscas


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ self versos
		source: 	a ReadStream
		context: 	WAPharoInspector>>evaluate
		receiver: 	a WAPoemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


OpalCompiler>>evaluate:in:to:
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		aString: 	'self versos'
		aContext: 	WAPharoInspector>>evaluate
		aReceiver: 	a WAPoemas
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ self versos
		source: 	a ReadStream
		context: 	WAPharoInspector>>evaluate
		receiver: 	a WAPoemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


WAPharoInspector>>evaluate
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


WAPharoInspector(WAInspector)>>doIt
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


WAPharoInspector>>doIt
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 
		result: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


[ self perform: each ] in [ :each | 
html submitButton
	callback: [ self perform: each ];
	text: each ] in WAPharoInspector(WAInspector)>>renderEditAreaOn:
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 
		html: 	nil
		each: 	#doIt
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self perform: each ]
	Arguments and temporary variables: 
		anArray: 	#('doIt')
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	[ :each | 
html submitButton
	callback: [ self perform: each ];
	...etc...
		startpc: 	75
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self debug ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self debug ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&_s=dgPbDrEArkd3qi-p&_k=YfmE...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '10'->a WAActionCallback '11'->...etc...
		nextKey: 	14


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAPoemas>>versos
13 March 2020 5:51:31.120618 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAPoemas(Object)>>doesNotUnderstand: #versos
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aMessage: 	versos
		exception: 	MessageNotUnderstood: WAPoemas>>versos
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WADelegation
		model: 	a Poemas
		poemaConstruido: 	las moscas


WAPoemas(WAPharoInspector)>>DoItIn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		ThisContext: 	WAPharoInspector>>evaluate
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WADelegation
		model: 	a Poemas
		poemaConstruido: 	las moscas


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ self versos
		source: 	a ReadStream
		context: 	WAPharoInspector>>evaluate
		receiver: 	a WAPoemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


OpalCompiler>>evaluate:in:to:
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		aString: 	'self versos'
		aContext: 	WAPharoInspector>>evaluate
		aReceiver: 	a WAPoemas
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ self versos
		source: 	a ReadStream
		context: 	WAPharoInspector>>evaluate
		receiver: 	a WAPoemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


WAPharoInspector>>evaluate
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


WAPharoInspector(WAInspector)>>doIt
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


WAPharoInspector>>doIt
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 
		result: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


[ self perform: each ] in [ :each | 
html submitButton
	callback: [ self perform: each ];
	text: each ] in WAPharoInspector(WAInspector)>>renderEditAreaOn:
	Receiver: a WAPharoInspector
	Arguments and temporary variables: 
		html: 	nil
		each: 	#doIt
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAWindowDecoration
		path: 	a WAPath
		selected: 	#model
		input: 	'self versos'


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self perform: each ]
	Arguments and temporary variables: 
		anArray: 	#('doIt')
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	[ :each | 
html submitButton
	callback: [ self perform: each ];
	...etc...
		startpc: 	75
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self debug ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'1'
		block: 	[ self debug ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&_s=dgPbDrEArkd3qi-p&_k=YfmE...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '10'->a WAActionCallback '11'->...etc...
		nextKey: 	14


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&_s=dgPbDrEArkd3qi-p&_k=YfmE...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('1'->a WAActionCallback '10'->a WAActionCallback '11'->...etc...
		nextKey: 	14


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&_s=dgPbDrEArkd3qi-p&_k=YfmEf...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Instance of Verso class did not understand #deTexto:poema:
14 March 2020 5:07:16.215863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso class(Object)>>doesNotUnderstand: #deTexto:poema:
	Receiver: Verso
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Verso
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


[ :verso | Verso deTexto: verso poema: self ] in Poema>>initializeWithPoemaTextual:ownedBy:autor:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		unPoemaComoString: 	'Y coincidimos en el terral
el heladero con su carretilla av...etc...
		poemas: 	a Poemas
		anObject: 	'Jose Watanabe'
		verso: 	'Y coincidimos en el terral'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	nil
		owner: 	a Poemas
		textoDePoema: 	'Y coincidimos en el terral
el heladero con su carretilla averiad...etc...


Array(SequenceableCollection)>>collect:
	Receiver: #('Y coincidimos en el terral' 'el heladero con su carretilla averiada' 'y yo' 'que corría...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | Verso deTexto: verso poema: self ]
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil ni...etc...
		index: 	1
	Receiver's instance variables: 
#('Y coincidimos en el terral' 'el heladero con su carretilla averiada' 'y yo' 'que corría...etc...

Poema>>initializeWithPoemaTextual:ownedBy:autor:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		unPoemaComoString: 	'Y coincidimos en el terral
el heladero con su carretilla av...etc...
		poemas: 	a Poemas
		anObject: 	'Jose Watanabe'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	nil
		owner: 	a Poemas
		textoDePoema: 	'Y coincidimos en el terral
el heladero con su carretilla averiad...etc...


Poema class>>dePoemaTextual:ownedBy:autor:
	Receiver: Poema
	Arguments and temporary variables: 
		unPoemaComoString: 	'Y coincidimos en el terral
el heladero con su carretilla av...etc...
		poemas: 	a Poemas
		autordelPoema: 	'Jose Watanabe'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#=->Poema>>#= #agregarVerso:->Poema>>#agregarVer...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Poema
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


[ :texto | Poema dePoemaTextual: texto ownedBy: self autor: autorDePoemas ] in Poemas>>initializeCon:autor:
	Receiver: a Poemas
	Arguments and temporary variables: 
		coleccionDeTextos: 	#('Y coincidimos en el terral
el heladero con su carretilla ...etc...
		autorDePoemas: 	'Jose Watanabe'
		texto: 	'Y coincidimos en el terral
el heladero con su carretilla averiada
y yo
...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	nil
		poemasQueNoSePuedenMostrar: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: #('Y coincidimos en el terral
el heladero con su carretilla averiada
y yo
que corría tras ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :texto | Poema dePoemaTextual: texto ownedBy: self autor: autorDePoem...etc...
		newCollection: 	#(nil nil)
		index: 	1
	Receiver's instance variables: 
#('Y coincidimos en el terral
el heladero con su carretilla averiada
y yo
que corría tras ...etc...

Poemas>>initializeCon:autor:
	Receiver: a Poemas
	Arguments and temporary variables: 
		coleccionDeTextos: 	#('Y coincidimos en el terral
el heladero con su carretilla ...etc...
		autorDePoemas: 	'Jose Watanabe'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	nil
		poemasQueNoSePuedenMostrar: 	nil


Poemas class>>con:autor:
	Receiver: Poemas
	Arguments and temporary variables: 
		coleccionDeTextosAMostrar: 	#('Y coincidimos en el terral
el heladero con su car...etc...
		autorDePoemas: 	'Jose Watanabe'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#initializeCon:autor:->Poemas>>#initializeCon:au...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


PoemaTest>>testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 
		poemas: 	nil
	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


PoemaTest(TestCase)>>performTest
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ self setUp.
self performTest ] in PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


BlockClosure>>ensure:
	Receiver: [ self setUp.
self performTest ]
	Arguments and temporary variables: 
		aBlock: 	[ self tearDown.
self cleanUpInstanceVariables ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	PoemaTest(TestCase)>>runCase
		startpc: 	57
		numArgs: 	0


PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ aTestCase runCase ] in [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ aTestCase runCase ]
	Arguments and temporary variables: 
		exception: 	Halt
		handlerAction: 	[ :halt | 
"if test was halted we should resume all background f...etc...
	Receiver's instance variables: 
		outerContext: 	[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was ...etc...
		startpc: 	63
		numArgs: 	0


[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	THERE_BE_DRAGONS_HERE
Instance of Verso did not understand #initializeDeTexto:poema:
14 March 2020 5:08:11.221863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #initializeDeTexto:poema:
	Receiver: a Verso
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil


Verso class>>deTexto:poema:
	Receiver: Verso
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Verso
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


[ :verso | Verso deTexto: verso poema: self ] in Poema>>initializeWithPoemaTextual:ownedBy:autor:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		unPoemaComoString: 	'Y coincidimos en el terral
el heladero con su carretilla av...etc...
		poemas: 	a Poemas
		anObject: 	'Jose Watanabe'
		verso: 	'Y coincidimos en el terral'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	nil
		owner: 	a Poemas
		textoDePoema: 	'Y coincidimos en el terral
el heladero con su carretilla averiad...etc...


Array(SequenceableCollection)>>collect:
	Receiver: #('Y coincidimos en el terral' 'el heladero con su carretilla averiada' 'y yo' 'que corría...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | Verso deTexto: verso poema: self ]
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil ni...etc...
		index: 	1
	Receiver's instance variables: 
#('Y coincidimos en el terral' 'el heladero con su carretilla averiada' 'y yo' 'que corría...etc...

Poema>>initializeWithPoemaTextual:ownedBy:autor:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		unPoemaComoString: 	'Y coincidimos en el terral
el heladero con su carretilla av...etc...
		poemas: 	a Poemas
		anObject: 	'Jose Watanabe'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	nil
		owner: 	a Poemas
		textoDePoema: 	'Y coincidimos en el terral
el heladero con su carretilla averiad...etc...


Poema class>>dePoemaTextual:ownedBy:autor:
	Receiver: Poema
	Arguments and temporary variables: 
		unPoemaComoString: 	'Y coincidimos en el terral
el heladero con su carretilla av...etc...
		poemas: 	a Poemas
		autordelPoema: 	'Jose Watanabe'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#=->Poema>>#= #agregarVerso:->Poema>>#agregarVer...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Poema
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


[ :texto | Poema dePoemaTextual: texto ownedBy: self autor: autorDePoemas ] in Poemas>>initializeCon:autor:
	Receiver: a Poemas
	Arguments and temporary variables: 
		coleccionDeTextos: 	#('Y coincidimos en el terral
el heladero con su carretilla ...etc...
		autorDePoemas: 	'Jose Watanabe'
		texto: 	'Y coincidimos en el terral
el heladero con su carretilla averiada
y yo
...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	nil
		poemasQueNoSePuedenMostrar: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: #('Y coincidimos en el terral
el heladero con su carretilla averiada
y yo
que corría tras ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :texto | Poema dePoemaTextual: texto ownedBy: self autor: autorDePoem...etc...
		newCollection: 	#(nil nil)
		index: 	1
	Receiver's instance variables: 
#('Y coincidimos en el terral
el heladero con su carretilla averiada
y yo
que corría tras ...etc...

Poemas>>initializeCon:autor:
	Receiver: a Poemas
	Arguments and temporary variables: 
		coleccionDeTextos: 	#('Y coincidimos en el terral
el heladero con su carretilla ...etc...
		autorDePoemas: 	'Jose Watanabe'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	nil
		poemasQueNoSePuedenMostrar: 	nil


Poemas class>>con:autor:
	Receiver: Poemas
	Arguments and temporary variables: 
		coleccionDeTextosAMostrar: 	#('Y coincidimos en el terral
el heladero con su car...etc...
		autorDePoemas: 	'Jose Watanabe'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#initializeCon:autor:->Poemas>>#initializeCon:au...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


PoemaTest>>testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 
		poemas: 	nil
	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


PoemaTest(TestCase)>>performTest
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ self setUp.
self performTest ] in PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


BlockClosure>>ensure:
	Receiver: [ self setUp.
self performTest ]
	Arguments and temporary variables: 
		aBlock: 	[ self tearDown.
self cleanUpInstanceVariables ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	PoemaTest(TestCase)>>runCase
		startpc: 	57
		numArgs: 	0


PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ aTestCase runCase ] in [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ aTestCase runCase ]
	Arguments and temporary variables: 
		exception: 	Halt
		handlerAction: 	[ :halt | 
"if test was halted we should resume all background f...etc...
	Receiver's instance variables: 
		outerContext: 	[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was ...etc...
		startpc: 	63
		numArgs: 	0


[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume a...etc...
	Arguments and temporary variables: 
		exception: 	an ExceptionSet
		handlerAction: 	[ :err | 
"error here means that test is failed. So we should ch...etc...
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCaseSafelly:
		startpc: 	58
		numArgs: 	0


TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ self runTestCaseSafelly: aTestCase ] in [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ensure:
	Receiver: [ self runTestCaseSafelly: aTestCase ]
	Arguments and temporary variables: 
		aBlock: 	[ testCompleted := true.
watchDogSemaphore signal ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted...etc...
		startpc: 	61
		numArgs: 	0


[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ifCurtailed:
	Receiver: [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemap...etc...
	Arguments and temporary variables: 
		aBlock: 	[ forkedProcesses removeAll.
failedProcesses removeAll ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCase:
		startpc: 	56
		numArgs: 	0


TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ testEnv runTestCase: aTestCase ] in DefaultExecutionEnvironment>>runTestCase:
	Receiver: a DefaultExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
		testEnv: 	a TestExecutionEnvironment
	Receiver's instance variables: 
a DefaultExecutionEnvironment

[ self value: anExecutionEnvironment.
anExecutionEnvironment activated.
aBlock value ] in CurrentExecutionEnvironment class>>activate:for:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		anExecutionEnvironment: 	a TestExecutionEnvironment
		aBlock: 	[ testEnv runTestCase: aTestCase ]
		current: 	a DefaultExecutionEnvironment
	Receiver's instance variables: 
		superclass: 	ProcessLocalVariable
		methodDict: 	a MethodDictionary(#default->CurrentExecutionEnvironment>>#default ...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CurrentExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		soleInstance: 	a CurrentExecutionEnvironment


BlockClosure>>ensure:
	Receiver:THERE_BE_DRAGONS_HERE
Error: Instances of UndefinedObject are not indexable
14 March 2020 5:11:27.585863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>error:
	Receiver: nil
	Arguments and temporary variables: 
		aString: 	'Instances of UndefinedObject are not indexable'
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>errorNotIndexable
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(Object)>>size
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

Array(SequenceableCollection)>>copyReplaceFrom:to:with:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		start: 	3
		stop: 	2
		replacementCollection: 	nil
		newSequenceableCollection: 	nil
		newSize: 	nil
		endReplacement: 	nil
	Receiver's instance variables: 
<<error during printing>>

Array(SequenceableCollection)>>,
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		otherCollection: 	nil
	Receiver's instance variables: 
<<error during printing>>

Poemas>>versosConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	y
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	<<error during printing>>

PoemaTest>>testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 
		poemas: 	a Poemas
	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


PoemaTest(TestCase)>>performTest
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ self setUp.
self performTest ] in PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


BlockClosure>>ensure:
	Receiver: [ self setUp.
self performTest ]
	Arguments and temporary variables: 
		aBlock: 	[ self tearDown.
self cleanUpInstanceVariables ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	PoemaTest(TestCase)>>runCase
		startpc: 	57
		numArgs: 	0


PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ aTestCase runCase ] in [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ aTestCase runCase ]
	Arguments and temporary variables: 
		exception: 	Halt
		handlerAction: 	[ :halt | 
"if test was halted we should resume all background f...etc...
	Receiver's instance variables: 
		outerContext: 	[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was ...etc...
		startpc: 	63
		numArgs: 	0


[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume a...etc...
	Arguments and temporary variables: 
		exception: 	an ExceptionSet
		handlerAction: 	[ :err | 
"error here means that test is failed. So we should ch...etc...
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCaseSafelly:
		startpc: 	58
		numArgs: 	0


TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ self runTestCaseSafelly: aTestCase ] in [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ensure:
	Receiver: [ self runTestCaseSafelly: aTestCase ]
	Arguments and temporary variables: 
		aBlock: 	[ testCompleted := true.
watchDogSemaphore signal ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted...etc...
		startpc: 	61
		numArgs: 	0


[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ifCurtailed:
	Receiver: [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemap...etc...
	Arguments and temporary variables: 
		aBlock: 	[ forkedProcesses removeAll.
failedProcesses removeAll ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCase:
		startpc: 	56
		numArgs: 	0


TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ testEnv runTestCase: aTestCase ] in DefaultExecutionEnvironment>>runTestCase:
	Receiver: a DefaultExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
		testEnv: 	a TestExecutionEnvironment
	Receiver's instance variables: 
a DefaultExecutionEnvironment

[ self value: anExecutionEnvironment.
anExecutionEnvironment activated.
aBlock value ] in CurrentExecutionEnvironment class>>activate:for:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		anExecutionEnvironment: 	a TestExecutionEnvironment
		aBlock: 	[ testEnv runTestCase: aTestCase ]
		current: 	a DefaultExecutionEnvironment
	Receiver's instance variables: 
		superclass: 	ProcessLocalVariable
		methodDict: 	a MethodDictionary(#default->CurrentExecutionEnvironment>>#default ...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CurrentExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		soleInstance: 	a CurrentExecutionEnvironment


BlockClosure>>ensure:
	Receiver: [ self value: anTHERE_BE_DRAGONS_HERE
Instance of Verso did not understand #anySatisfy:
14 March 2020 5:11:54.703863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #anySatisfy:
	Receiver: a Verso
	Arguments and temporary variables: 
		aMessage: 	anySatisfy: [ :palabra | palabra tieneMismoTextoQue: unaPalabra ]
		exception: 	MessageNotUnderstood: Verso>>anySatisfy:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'Y coincidimos en el terral'
		palabras: 	an OrderedCollection( Y coincidimos en el terral)
		poema: 	<<error during printing>>

[ :verso | 
verso
	anySatisfy: [ :palabra | palabra tieneMismoTextoQue: unaPalabra ] ] in Poema>>versosConPalabra:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		unaPalabra: 	y
		verso: 	a Verso
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso a Verso a ...etc...
		owner: 	a Poemas
		textoDePoema: 	'Y coincidimos en el terral
el heladero con su carretilla averiad...etc...


OrderedCollection>>select:
	Receiver: an OrderedCollection(a Verso a Verso a Verso a Verso a Verso a Verso a Verso a Verso a Ver...etc...
	Arguments and temporary variables: 
		selectBlock: 	[ :verso | 
verso
	anySatisfy: [ :palabra | palabra tieneMismoText...etc...
		newCollection: 	an OrderedCollection()
		element: 	a Verso
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a Verso a Verso a Verso a Verso a Verso a Verso a Verso a Verso...etc...
		firstIndex: 	1
		lastIndex: 	27


Poema>>versosConPalabra:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		unaPalabra: 	y
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso a Verso a ...etc...
		owner: 	a Poemas
		textoDePoema: 	'Y coincidimos en el terral
el heladero con su carretilla averiad...etc...


[ :poema | poema versosConPalabra: unaPalabra ] in Poemas>>versosConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	<<error during printing>>

[ :collection :each | 
collection
	addAll: (aBlockClosure value: each);
	yourself ] in OrderedCollection(SequenceableCollection)>>unionCollect:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		array: 	<<error during printing>>

[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		array: 	<<error during printing>>

OrderedCollection>>do:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	1
	Receiver's instance variables: 
		array: 	<<error during printing>>

OrderedCollection(Collection)>>inject:into:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		nextValue: 	an OrderedCollection()
		thisValue: 	an OrderedCollection()
		binaryBlock: 	[ :collection :each | 
collection
	addAll: (aBlockClosure value: e...etc...
	Receiver's instance variables: 
		array: 	<<error during printing>>

OrderedCollection(SequenceableCollection)>>unionCollect:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aBlockClosure: 	[ :poema | poema versosConPalabra: unaPalabra ]
	Receiver's instance variables: 
		array: 	<<error during printing>>

Poemas>>versosConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	y
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	<<error during printing>>

PoemaTest>>testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 
		poemas: 	a Poemas
	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


PoemaTest(TestCase)>>performTest
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ self setUp.
self performTest ] in PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


BlockClosure>>ensure:
	Receiver: [ self setUp.
self performTest ]
	Arguments and temporary variables: 
		aBlock: 	[ self tearDown.
self cleanUpInstanceVariables ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	PoemaTest(TestCase)>>runCase
		startpc: 	57
		numArgs: 	0


PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ aTestCase runCase ] in [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ aTestCase runCase ]
	Arguments and temporary variables: 
		exception: 	Halt
		handlerAction: 	[ :halt | 
"if test was halted we should resume all background f...etc...
	Receiver's instance variables: 
		outerContext: 	[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was ...etc...
		startpc: 	63
		numArgs: 	0


[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume a...etc...
	Arguments and temporary variables: 
		exception: 	an ExceptionSet
		handlerAction: 	[ :err | 
"error here means that test is failed. So we should ch...etc...
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCaseSafelly:
		startpc: 	58
		numArgs: 	0


TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ self runTestCaseSafelly: aTestCase ] in [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ensure:
	Receiver: [ self runTestCaseSafelly: aTestCase ]
	Arguments and temporary variables: 
		aBlock: 	[ testCompleted := true.
watchDogSemaphore signal ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted...etc...
		startpc: 	61
		numArgs: 	0


[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ifCurtailed:
	Receiver: [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemap...etc...
	Arguments and temporary variables: 
		aBlock: 	[ forkedProcesses removeAll.
failedProcesses removeAll ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCase:
		startpc: 	56
		numArgs: 	0


TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	THERE_BE_DRAGONS_HERE
Instance of Verso did not understand #contienePalabra:
14 March 2020 5:12:58.114863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #contienePalabra:
	Receiver: a Verso
	Arguments and temporary variables: 
		aMessage: 	contienePalabra: y
		exception: 	MessageNotUnderstood: Verso>>contienePalabra:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'Y coincidimos en el terral'
		palabras: 	an OrderedCollection( Y coincidimos en el terral)
		poema: 	<<error during printing>>

[ :verso | verso contienePalabra: unaPalabra ] in Poema>>versosConPalabra:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		unaPalabra: 	y
		verso: 	a Verso
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso a Verso a ...etc...
		owner: 	a Poemas
		textoDePoema: 	'Y coincidimos en el terral
el heladero con su carretilla averiad...etc...


OrderedCollection>>select:
	Receiver: an OrderedCollection(a Verso a Verso a Verso a Verso a Verso a Verso a Verso a Verso a Ver...etc...
	Arguments and temporary variables: 
		selectBlock: 	[ :verso | verso contienePalabra: unaPalabra ]
		newCollection: 	an OrderedCollection()
		element: 	a Verso
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a Verso a Verso a Verso a Verso a Verso a Verso a Verso a Verso...etc...
		firstIndex: 	1
		lastIndex: 	27


Poema>>versosConPalabra:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		unaPalabra: 	y
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso a Verso a ...etc...
		owner: 	a Poemas
		textoDePoema: 	'Y coincidimos en el terral
el heladero con su carretilla averiad...etc...


[ :poema | poema versosConPalabra: unaPalabra ] in Poemas>>versosConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	<<error during printing>>

[ :collection :each | 
collection
	addAll: (aBlockClosure value: each);
	yourself ] in OrderedCollection(SequenceableCollection)>>unionCollect:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		array: 	<<error during printing>>

[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		array: 	<<error during printing>>

OrderedCollection>>do:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	1
	Receiver's instance variables: 
		array: 	<<error during printing>>

OrderedCollection(Collection)>>inject:into:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		nextValue: 	an OrderedCollection()
		thisValue: 	an OrderedCollection()
		binaryBlock: 	[ :collection :each | 
collection
	addAll: (aBlockClosure value: e...etc...
	Receiver's instance variables: 
		array: 	<<error during printing>>

OrderedCollection(SequenceableCollection)>>unionCollect:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aBlockClosure: 	[ :poema | poema versosConPalabra: unaPalabra ]
	Receiver's instance variables: 
		array: 	<<error during printing>>

Poemas>>versosConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	y
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	<<error during printing>>

PoemaTest>>testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 
		poemas: 	a Poemas
	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


PoemaTest(TestCase)>>performTest
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ self setUp.
self performTest ] in PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


BlockClosure>>ensure:
	Receiver: [ self setUp.
self performTest ]
	Arguments and temporary variables: 
		aBlock: 	[ self tearDown.
self cleanUpInstanceVariables ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	PoemaTest(TestCase)>>runCase
		startpc: 	57
		numArgs: 	0


PoemaTest(TestCase)>>runCase
	Receiver: PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		testSelector: 	#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPoemas
		expectedFails: 	nil


[ aTestCase runCase ] in [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ aTestCase runCase ]
	Arguments and temporary variables: 
		exception: 	Halt
		handlerAction: 	[ :halt | 
"if test was halted we should resume all background f...etc...
	Receiver's instance variables: 
		outerContext: 	[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was ...etc...
		startpc: 	63
		numArgs: 	0


[ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume all background failures 
			to debug all of them together with test process"
		failedProcesses keysDo: #resume.
		halt pass ] ] in TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>on:do:
	Receiver: [ [ aTestCase runCase ]
	on: Halt
	do: [ :halt | 
		"if test was halted we should resume a...etc...
	Arguments and temporary variables: 
		exception: 	an ExceptionSet
		handlerAction: 	[ :err | 
"error here means that test is failed. So we should ch...etc...
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCaseSafelly:
		startpc: 	58
		numArgs: 	0


TestExecutionEnvironment>>runTestCaseSafelly:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ self runTestCaseSafelly: aTestCase ] in [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ensure:
	Receiver: [ self runTestCaseSafelly: aTestCase ]
	Arguments and temporary variables: 
		aBlock: 	[ testCompleted := true.
watchDogSemaphore signal ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted...etc...
		startpc: 	61
		numArgs: 	0


[ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemaphore signal ].	"signal that test case completes"
self checkForkedProcesses ] in TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


BlockClosure>>ifCurtailed:
	Receiver: [ [ self runTestCaseSafelly: aTestCase ]
	ensure: [ testCompleted := true.
		watchDogSemap...etc...
	Arguments and temporary variables: 
		aBlock: 	[ forkedProcesses removeAll.
failedProcesses removeAll ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	TestExecutionEnvironment>>runTestCase:
		startpc: 	56
		numArgs: 	0


TestExecutionEnvironment>>runTestCase:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
	Receiver's instance variables: 
		watchDogProcess: 	a Process in [ self schedule.
"It is critical that the followi...etc...
		watchDogSemaphore: 	a Semaphore(a Process in [ self schedule.
"It is critical th...etc...
		testCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosPo...etc...
		maxTimeForTest: 	0:00:00:10
		forkedProcesses: 	a WeakSet(a Process in [ delaySemaphore wait ] in Delay>>wait)...etc...
		failedProcesses: 	an OrderedIdentityDictionary()
		testCompleted: 	false


[ testEnv runTestCase: aTestCase ] in DefaultExecutionEnvironment>>runTestCase:
	Receiver: a DefaultExecutionEnvironment
	Arguments and temporary variables: 
		aTestCase: 	PoemaTest>>#testDevuelveCorrectamenteLosVersosConUnaPalabraEnVariosP...etc...
		testEnv: 	a TestExecutionEnvironment
	Receiver's instance variables: 
a DefaultExecutionEnvironment

[ self value: anExecutionEnvironment.
anExecutionEnvironment activated.
aBlock value ] in CurrentExecutionEnvironment class>>activate:for:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		anExecutionEnvironment: 	a TestExecutionEnvironment
		aBlock: 	[ testEnv runTestCase: aTestCase ]
		current: 	a DefaultExecutionEnvironment
	Receiver's instance variables: 
		superclass: 	ProcessLocalVariable
		methodDict: 	a MethodDictionary(#default->CurrentExecutionEnvironment>>#default ...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CurrentExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		soleInstance: 	a CurrentExecutionEnvironment


BlockClosure>>ensure:
	Receiver: [ self value: anExecutionEnvironment.
anExecutionEnvironment activated.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ self value: current.
anExecutionEnvironment deactivated ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	CurrentExecutionEnvironment class>>activate:for:
		startpc: 	55
		numArgs: 	0


CurrentExecutionEnvironment class>>activate:for:
	Receiver: CurrentExecutionEnvironment
	Arguments and temporary variables: 
		anExecutionEnvironment: 	a TestExecutionEnvironment
		aBlock: 	[ testEnv runTestCase: aTestCase ]
		current: 	a DefaultExecutionEnvironment
	Receiver's instance variables: 
		superclass: 	ProcessLocalVariable
		methodDict: 	a MethodDictionary(#default->CurrentExecutionEnvironment>>#default ...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#CurrentExecutionEnvironment
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Processes'
		soleInstance: 	a CurrentExecutionEnvironment


TestExecutionEnvironment(ExecutionEnvironment)>>beActiveDuring:
	Receiver: a TestExecutionEnvironment
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: MuestraDePoemas class>>con:
14 March 2020 5:29:37.403863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas class(Object)>>doesNotUnderstand: #con:
	Receiver: MuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	con: a Poemas
		exception: 	MessageNotUnderstood: MuestraDePoemas class>>con:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#MuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAPoemas>>initialize
	Receiver: a WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil


WAPoemas class(GRObject class)>>new
	Receiver: WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAPoemas>>#agregarVer...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAPoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: MuestraDePoemas>>initializeCon:
14 March 2020 5:30:36.545863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas(Object)>>doesNotUnderstand: #initializeCon:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	initializeCon: a Poemas
		exception: 	MessageNotUnderstood: MuestraDePoemas>>initializeCon:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil


MuestraDePoemas class>>con:
	Receiver: MuestraDePoemas
	Arguments and temporary variables: 
		poemasAMostrar: 	a Poemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#MuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAPoemas>>initialize
	Receiver: a WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil


WAPoemas class(GRObject class)>>new
	Receiver: WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAPoemas>>#agregarVer...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAPoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: MuestraDePoemas>>agregarPoemasExtras:
14 March 2020 5:31:39.012863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas(Object)>>doesNotUnderstand: #agregarPoemasExtras:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	agregarPoemasExtras: an OrderedCollection(a Poemas a Poemas a Poemas)...etc...
		exception: 	MessageNotUnderstood: MuestraDePoemas>>agregarPoemasExtras:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas)


WAPoemas>>initialize
	Receiver: a WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WAPoemas class(GRObject class)>>new
	Receiver: WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAPoemas>>#agregarVer...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAPoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'QF5lDFweArwB8VyE'


THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "acceptDecorated:" is nil
14 March 2020 5:31:39.546863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #acceptDecorated:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	acceptDecorated: a WAVisiblePresenterGuide
		exception: 	MessageNotUnderstood: receiver of "acceptDecorated:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	nil
	Receiver's instance variables: 
		client: 	a WATaskVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		client: 	a WATaskVisitor


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>startTasks
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2()
		documentHandlers: 	nil
		key: 	'QF5lDFweArwB8VyE'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2()
		documentHandlers: 	nil
		key: 	'QF5lDFweArwB8VyE'


WAMergedRequestFields>>at:ifAbsent:
	Receiver: a WAMergedRequestFields
	Arguments and temporary variables: 
		aKey: 	'_k'
		aBlock: 	[ ^ self start ]
	Receiver's instance variables: 
		delegates: 	an Array(a WARequestFields('_debugAction'->'_debug') a WARequestFiel...etc...


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2()
		documentHandlers: 	nil
		key: 	'QF5lDFweArwB8VyE'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	49
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
		aBlock: 	[ super handleFiltered: aRequestContext ]
		process: 	a Process in GRPharoPlatfTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: MuestraDePoemas>>agregarPoemasExtras:
14 March 2020 5:32:50.069863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas(Object)>>doesNotUnderstand: #agregarPoemasExtras:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	agregarPoemasExtras: an OrderedCollection(a Poemas a Poemas a Poemas)...etc...
		exception: 	MessageNotUnderstood: MuestraDePoemas>>agregarPoemasExtras:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas)


WAPoemas>>initialize
	Receiver: a WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WAPoemas class(GRObject class)>>new
	Receiver: WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAPoemas>>#agregarVer...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAPoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter:THERE_BE_DRAGONS_HERE
MessageNotUnderstood: MuestraDePoemas>>agregarPoemasExtras:
14 March 2020 5:32:57.650863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas(Object)>>doesNotUnderstand: #agregarPoemasExtras:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	agregarPoemasExtras: an OrderedCollection(a Poemas a Poemas a Poemas)...etc...
		exception: 	MessageNotUnderstood: MuestraDePoemas>>agregarPoemasExtras:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas)


WAPoemas>>initialize
	Receiver: a WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WAPoemas class(GRObject class)>>new
	Receiver: WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAPoemas>>#agregarVer...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAPoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'1Xs2QRExSP5qrn_d'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'1Xs2QRExSP5qrn_d'


WAMergedRequestFields>>at:ifAbsent:
	Receiver: a WAMergedRequestFields
	Arguments and temporary variables: 
		aKey: 	'_k'
		aBlock: 	[ ^ self start ]
	Receiver's instance variables: 
		delegates: 	an Array(a WARequestFields('_debugAction'->'_debug') a WARequestFiel...etc...


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: MuestraDePoemas>>renderOnComponent:withRenderer:
14 March 2020 5:33:38.677863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	renderOnComponent: a WAPoemas withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: MuestraDePoemas>>renderOnComponent:withRendere...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAPoemas(WAComponent)>>accept:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAPoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAPoemas(WAComponent)>>accept:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WAPoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAPoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAPoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAPoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAPoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAPoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAPoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAPoemas(WAPainter)>>renderWithContext:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil



--- The full stack ---
MuestraDePoemas(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAPoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAPoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAPoemas(WAComponent)>>accept:
WAPoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAPoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAPoemas(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Verso>>inject:into:
14 March 2020 5:34:37.003863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #inject:into:
	Receiver: a Verso
	Arguments and temporary variables: 
		aMessage: 	inject: '' into: [ :string :palabra | string , palabra displayString ...etc...
		exception: 	MessageNotUnderstood: Verso>>inject:into:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'no cambió el delirio '
		palabras: 	an OrderedCollection( no cambió el delirio)
		poema: 	<<error during printing>>

Poema>>printOn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aStream: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...


Poema(Object)>>displayStringOn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aStream: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...


[ :s | self displayStringOn: s ] in Poema(Object)>>displayStringLimitedTo:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
		s: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...


String class(SequenceableCollection class)>>streamContents:limitedTo:
	Receiver: String
	Arguments and temporary variables: 
		stream: 	a LimitedWriteStream
		blockWithArg: 	[ :s | self displayStringOn: s ]
		sizeLimit: 	50000
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 330)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


Poema(Object)>>printStringLimitedTo:using:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
		printBlock: 	[ :s | self displayStringOn: s ]
		limitedString: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...


Poema(Object)>>displayStringLimitedTo:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...


Poema(Object)>>displayString
	Receiver: <<error during printing>>
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...


Poema>>renderOn:withRenderer:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...


[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


OrderedCollection>>do:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aBlock: 	[ :poema | poema renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	<<error during printing>>

WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	<<error during printing>>

MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAPoemas(WAComponent)>>accept:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAPoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAPoemas(WAComponent)>>accept:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WAPoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAPoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAPoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Verso>>do:separatedBy:
14 March 2020 5:36:26.928863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #do:separatedBy:
	Receiver: a Verso
	Arguments and temporary variables: 
		aMessage: 	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ]...etc...
		exception: 	MessageNotUnderstood: Verso>>do:separatedBy:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'no cambió el delirio '
		palabras: 	an OrderedCollection( no cambió el delirio)
		poema: 	a Verso


[ :verso | 
verso
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ]
	separatedBy: [ html space ].
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra renderOnComponent: self withRenderer: html ]
			separatedBy: [ html space ].
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
		verso: 	a Verso
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a Verso
		owner: 	a WAPoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | 
verso
	do: [ :palabra | palabra renderOnComponent: self wit...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a Verso a Verso a Verso a Verso a Verso)
		firstIndex: 	1
		lastIndex: 	5


[ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra renderOnComponent: self withRenderer: html ]
			separatedBy: [ html space ].
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a Verso
		owner: 	a WAPoemas


BlockClosure>>renderOn:
	Receiver: [ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra renderOnComponent: se...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderVersos:in:
		startpc: 	44
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAHtmlCanvas>>div:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra re...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a Verso
		owner: 	a WAPoemas


Poema>>renderOn:withRenderer:
	Receiver: a Verso
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...


[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
		poema: 	a Verso
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(a Verso a Verso a Verso a Verso)
	Arguments and temporary variables: 
		aBlock: 	[ :poema | poema renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a Verso a Verso a Verso a Verso)
		firstIndex: 	1
		lastIndex: 	4


WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(a Verso a Verso a Verso a Verso a Verso a Verso a Verso a Vers...etc...
		poemasQueNoSePuedenMostrar: 	nil


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAPoemas(WAComponent)>>accept:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
Verso(Object)>>doesNotUnderstand: #do:separatedBy:
[ :verso | 
verso
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ]
	separatedBy: [ html space ].
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra renderOnComponent: self withRenderer: html ]
			separatedBy: [ html space ].
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
OrderedCollection>>do:
[ versosDePoema
	do: [ :verso | 
		verso
			do: [ :palabra | palabra renderOnComponent: self withRenderer: html ]
			separatedBy: [ html space ].
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Verso>>renderOnComponent:withRenderer:
14 March 2020 5:37:44.779863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
	Receiver: a Verso
	Arguments and temporary variables: 
		aMessage: 	renderOnComponent: a WAPoema withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: Verso>>renderOnComponent:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'no cambió el delirio '
		palabras: 	an OrderedCollection( no cambió el delirio)
		poema: 	a Verso


[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
		verso: 	a Verso
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a Verso
		owner: 	a WAPoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | 
verso renderOnComponent: self withRenderer: html.
html para...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a Verso a Verso a Verso a Verso a Verso)
		firstIndex: 	1
		lastIndex: 	5


[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a Verso
		owner: 	a WAPoemas


BlockClosure>>renderOn:
	Receiver: [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		htm...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderVersos:in:
		startpc: 	36
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAHtmlCanvas>>div:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a Verso
		owner: 	a WAPoemas


Poema>>renderOn:withRenderer:
	Receiver: a Verso
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a Verso a Verso a Verso a Verso a Verso)
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...


[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
		poema: 	a Verso
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(a Verso a Verso a Verso a Verso)
	Arguments and temporary variables: 
		aBlock: 	[ :poema | poema renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a Verso a Verso a Verso a Verso)
		firstIndex: 	1
		lastIndex: 	4


WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(a Verso a Verso a Verso a Verso)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(a Verso a Verso a Verso a Verso a Verso a Verso a Verso a Vers...etc...
		poemasQueNoSePuedenMostrar: 	nil


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAPoemas(WAComponent)>>accept:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
Verso(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
OrderedCollection>>do:
[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>div:
WAPoema>>renderVersos:in:
Poema>>renderOn:withRenderer:
[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
OrderedCollection>>do:
WAPoemas>>renderPoemas:withRenderer:
Poemas>>renderOnComponent:withRenderer:
MuestraDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAPoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAPoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAPoemas(WAComponent)>>accept:
WAPoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAPoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAPoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBloTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: LimitedWriteStream>>getCanvas
14 March 2020 5:45:33.983863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

LimitedWriteStream(Object)>>doesNotUnderstand: #getCanvas
	Receiver: a LimitedWriteStream
	Arguments and temporary variables: 
		aMessage: 	getCanvas
		exception: 	MessageNotUnderstood: LimitedWriteStream>>getCanvas
		resumeValue: 	nil
	Receiver's instance variables: 
		collection: 	'                                                                  ...etc...
		position: 	0
		readLimit: 	0
		writeLimit: 	100
		limit: 	50000
		limitBlock: 	[ ^ stream contents ]


ByteString(String)>>displayOn:at:textColor:
	Receiver: 'en el sueño'
	Arguments and temporary variables: 
		aDisplayMedium: 	a LimitedWriteStream
		aPoint: 	(0@0)
		aColor: 	Color black
	Receiver's instance variables: 
'en el sueño'

ByteString(String)>>displayOn:at:
	Receiver: 'en el sueño'
	Arguments and temporary variables: 
		aDisplayMedium: 	a LimitedWriteStream
		aPoint: 	(0@0)
	Receiver's instance variables: 
'en el sueño'

ByteString(String)>>displayOn:
	Receiver: 'en el sueño'
	Arguments and temporary variables: 
		aDisplayMedium: 	a LimitedWriteStream
	Receiver's instance variables: 
'en el sueño'

Verso>>printOn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aStream: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'en el sueño'
		palabras: 	an OrderedCollection( en el sueño)
		poema: 	<<error during printing>>

Poema>>printOn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aStream: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	<<error during printing>>

Poema(Object)>>displayStringOn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aStream: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	<<error during printing>>

[ :s | self displayStringOn: s ] in Poema(Object)>>displayStringLimitedTo:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
		s: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	<<error during printing>>

String class(SequenceableCollection class)>>streamContents:limitedTo:
	Receiver: String
	Arguments and temporary variables: 
		stream: 	a LimitedWriteStream
		blockWithArg: 	[ :s | self displayStringOn: s ]
		sizeLimit: 	50000
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 330)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


Poema(Object)>>printStringLimitedTo:using:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
		printBlock: 	[ :s | self displayStringOn: s ]
		limitedString: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	<<error during printing>>

Poema(Object)>>displayStringLimitedTo:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	<<error during printing>>

Poema(Object)>>displayString
	Receiver: <<error during printing>>
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	<<error during printing>>

Poema>>renderOn:withRenderer:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	<<error during printing>>

[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


OrderedCollection>>do:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aBlock: 	[ :poema | poema renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	<<error during printing>>

WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	<<error during printing>>

MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poemas>>muestraDePoemas:
14 March 2020 5:53:11.166863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poemas(Object)>>doesNotUnderstand: #muestraDePoemas:
	Receiver: a Poemas
	Arguments and temporary variables: 
		aMessage: 	muestraDePoemas: a MuestraDePoemas
		exception: 	MessageNotUnderstood: Poemas>>muestraDePoemas:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil


MuestraDePoemas>>initializeCon:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		unosPoemasAMostrar: 	a Poemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	nil


MuestraDePoemas class>>con:
	Receiver: MuestraDePoemas
	Arguments and temporary variables: 
		poemasAMostrar: 	a Poemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarPoemasExtras:->MuestraDePoemas>>#agregar...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#MuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAPoemas>>initialize
	Receiver: a WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil


WAPoemas class(GRObject class)>>new
	Receiver: WAPoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAPoemas>>#agregarVer...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAPoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestCTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: MuestraDePoemas>>versosConPalabra:
14 March 2020 5:56:25.182863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas(Object)>>doesNotUnderstand: #versosConPalabra:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	versosConPalabra: el
		exception: 	MessageNotUnderstood: MuestraDePoemas>>versosConPalabra:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


Poemas>>versoConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	el
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


Poema>>versoDePoemarioQueContiene:
	Receiver: es posible que el tiempo
	Arguments and temporary variables: 
		aPalabraReal: 	el
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(es posible que el tiempo eche raíces en lugares in...etc...
		owner: 	a Poemas
		textoDePoema: 	'es posible que el tiempo
eche raíces en lugares insólitos
mientr...etc...


PalabraReal>>nuevoVersoDeOtrosPoemasQueMeContiene
	Receiver: el
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'el'
		palabraAnterior: 	que
		palabraSiguiente: 	tiempo
		poema: 	es posible que el tiempo
		tipoDePalabra: 	nil


WAPoema>>agregarVersoConPalabra:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	el
	Receiver's instance variables: 
		decoration: 	nil
		model: 	es posible que el tiempo
		owner: 	a WAPoemas


[ self agregarVersoConPalabra: unaPalabraReal ] in WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	el
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	es posible que el tiempo
		owner: 	a WAPoemas


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderPalabra:withRenderer:
		startpc: 	37
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'6'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'6'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=4j8eBXB67RVv3Q4R&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 190)
		nextKey: 	192


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=4j8eBXB67RVv3Q4R&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 190)
		nextKey: 	192


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_k=4j8eBXB67RVv3Q4R&_debugActi...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=4j8eBXB67RVv3Q4R&_debugAct...etc...
	Receiver's instaTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAPoema>>renderPoemas:withRenderer:
14 March 2020 5:58:38.860863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAPoema(Object)>>doesNotUnderstand: #renderPoemas:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		aMessage: 	renderPoemas: an OrderedCollection(no cambió el delirio  elogio la au...etc...
		exception: 	MessageNotUnderstood: WAPoema>>renderPoemas:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		owner: 	a WAPoemas


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a MuestraDePoemas)
		html: 	a WAHtmlCanvas
		verso: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		owner: 	a WAPoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(a MuestraDePoemas)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | 
verso renderOnComponent: self withRenderer: html.
html para...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a MuestraDePoemas)
		firstIndex: 	1
		lastIndex: 	1


[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a MuestraDePoemas)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		owner: 	a WAPoemas


BlockClosure>>renderOn:
	Receiver: [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		htm...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderVersos:in:
		startpc: 	36
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAHtmlCanvas>>div:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a MuestraDePoemas)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		owner: 	a WAPoemas


Poema>>renderOn:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a MuestraDePoemas)
		owner: 	a PoemasNulo
		textoDePoema: 	''


WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles para curarme  tenemos demasiadas ...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	a MuestraDePoemas


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	a MuestraDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	a MuestraDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAPoemas(WAComponent)>>accept:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	a MuestraDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAPoemasTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAPoema>>renderPoemas:withRenderer:
14 March 2020 6:01:41.667863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAPoema(Object)>>doesNotUnderstand: #renderPoemas:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		aMessage: 	renderPoemas: an OrderedCollection(no cambió el delirio  para curarme...etc...
		exception: 	MessageNotUnderstood: WAPoema>>renderPoemas:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		owner: 	a WAPoemas


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a MuestraDePoemas)
		html: 	a WAHtmlCanvas
		verso: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		owner: 	a WAPoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(a MuestraDePoemas)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | 
verso renderOnComponent: self withRenderer: html.
html para...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a MuestraDePoemas)
		firstIndex: 	1
		lastIndex: 	1


[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a MuestraDePoemas)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		owner: 	a WAPoemas


BlockClosure>>renderOn:
	Receiver: [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		htm...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderVersos:in:
		startpc: 	36
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAHtmlCanvas>>div:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(a MuestraDePoemas)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	a MuestraDePoemas
		owner: 	a WAPoemas


Poema>>renderOn:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(a MuestraDePoemas)
		owner: 	a PoemasNulo
		textoDePoema: 	''


WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(no quería dejar la habitación desordenada elogio l...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	a MuestraDePoemas


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	a MuestraDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	a MuestraDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAPoemas(WAComponent)>>accept:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	a MuestraDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAPoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAPoema(Object)>>doesNotUnderstand: #renderPoemas:withRenderer:
Poemas>>renderOnComponent:withRenderer:
MuestraDePoemas>>renderOnComponent:withRenderer:
[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
OrderedCollection>>do:
[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>div:
WAPoema>>renderVersos:in:
Poema>>renderOn:withRenderer:
WAPoemas>>renderPoemas:withRenderer:
Poemas>>rTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: PalabraVacia>>autor
14 March 2020 6:04:58.179863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PalabraVacia(Object)>>doesNotUnderstand: #autor
	Receiver: 
	Arguments and temporary variables: 
		aMessage: 	autor
		exception: 	MessageNotUnderstood: PalabraVacia>>autor
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	nil
		palabraAnterior: 	nil
		palabraSiguiente: 	seremos
		poema: 	nil


WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
		palabra: 	
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


OrderedCollection(SequenceableCollection)>>do:separatedBy:
	Receiver: an OrderedCollection( seremos frágiles)
	Arguments and temporary variables: 
		elementBlock: 	[ :palabra | aComponent renderPalabra: palabra withRenderer: html...etc...
		separatorBlock: 	[ html space ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array( seremos frágiles nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	3


Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
		verso: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles como una flor en el pantano nos daremos la medida ju...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | 
verso renderOnComponent: self withRenderer: html.
html para...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles como una flor en el pantano nos daremos la med...etc...
		firstIndex: 	1
		lastIndex: 	20


[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


BlockClosure>>renderOn:
	Receiver: [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		htm...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderVersos:in:
		startpc: 	36
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAHtmlCanvas>>div:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


Poema>>renderOn:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seremos frágiles como una flor en el pantano nos d...etc...
		owner: 	a Poemas
		textoDePoema: 	'seremos frágiles
como una flor en el pantano
nos daremos
la medi...etc...


[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
		poema: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles en el sueño no quería dejar la habitación desordenad...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :poema | poema renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles en el sueño no quería dejar la habitación deso...etc...
		firstIndex: 	1
		lastIndex: 	3


WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAPoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
PalabraVacia(Object)>>doesNotUnderstand: #autor
WAPoema>>renderPalabra:withRenderer:
[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
OrderedCollection(SequenceableCollection)>>do:separatedBy:
Verso>>renderOnComponent:withRenderer:
[ :verso | 
versTHERE_BE_DRAGONS_HERE
SubclassResponsibility: PalabraVacia had the subclass responsibility to implement #autor
14 March 2020 6:05:55.777863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PalabraVacia(Object)>>subclassResponsibility
	Receiver: 
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	nil
		palabraAnterior: 	nil
		palabraSiguiente: 	seremos
		poema: 	nil


PalabraVacia(Palabra)>>autor
	Receiver: 
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	nil
		palabraAnterior: 	nil
		palabraSiguiente: 	seremos
		poema: 	nil


WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
		palabra: 	
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


OrderedCollection(SequenceableCollection)>>do:separatedBy:
	Receiver: an OrderedCollection( seremos frágiles)
	Arguments and temporary variables: 
		elementBlock: 	[ :palabra | aComponent renderPalabra: palabra withRenderer: html...etc...
		separatorBlock: 	[ html space ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array( seremos frágiles nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	3


Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
		verso: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles como una flor en el pantano nos daremos la medida ju...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | 
verso renderOnComponent: self withRenderer: html.
html para...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles como una flor en el pantano nos daremos la med...etc...
		firstIndex: 	1
		lastIndex: 	20


[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


BlockClosure>>renderOn:
	Receiver: [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		htm...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderVersos:in:
		startpc: 	36
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAHtmlCanvas>>div:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


Poema>>renderOn:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seremos frágiles como una flor en el pantano nos d...etc...
		owner: 	a Poemas
		textoDePoema: 	'seremos frágiles
como una flor en el pantano
nos daremos
la medi...etc...


[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
		poema: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles en el sueño no quería dejar la habitación desordenad...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :poema | poema renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles en el sueño no quería dejar la habitación deso...etc...
		firstIndex: 	1
		lastIndex: 	3


WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil



--- The full stack ---
PalabraVacia(Object)>>subclassResponsibility
PalabraVacia(Palabra)>>autor
WAPoema>>renderPalabra:withRenderer:
[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
OrderedCollection(SequenceableCollection)>>do:separatedBy:
Verso>>renderOnComponent:withRenderer:
[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
OrderedCollection>>do:
[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>div:
WAPoema>>renderVersos:in:
Poema>>renderOn:withRenderer:
[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
OrderedCollection>>do:
WAPoemas>>renderPoemas:withRenderer:
Poemas>>renderOnComponent:withRenderer:
MuestraDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAPoemas>>renderContentOn:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAPoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAPoemas(WAComponent)>>accept:
WAPoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainteTHERE_BE_DRAGONS_HERE
SubclassResponsibility: PalabraReal had the subclass responsibility to implement #autor
14 March 2020 6:06:17.690863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PalabraReal(Object)>>subclassResponsibility
	Receiver: seremos
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'seremos'
		palabraAnterior: 	
		palabraSiguiente: 	frágiles
		poema: 	seremos frágiles
		tipoDePalabra: 	nil


PalabraReal(Palabra)>>autor
	Receiver: seremos
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'seremos'
		palabraAnterior: 	
		palabraSiguiente: 	frágiles
		poema: 	seremos frágiles
		tipoDePalabra: 	nil


WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	seremos
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
		palabra: 	seremos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


OrderedCollection(SequenceableCollection)>>do:separatedBy:
	Receiver: an OrderedCollection( seremos frágiles)
	Arguments and temporary variables: 
		elementBlock: 	[ :palabra | aComponent renderPalabra: palabra withRenderer: html...etc...
		separatorBlock: 	[ html space ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array( seremos frágiles nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	3


Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
		verso: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles como una flor en el pantano nos daremos la medida ju...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | 
verso renderOnComponent: self withRenderer: html.
html para...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles como una flor en el pantano nos daremos la med...etc...
		firstIndex: 	1
		lastIndex: 	20


[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


BlockClosure>>renderOn:
	Receiver: [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		htm...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderVersos:in:
		startpc: 	36
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAHtmlCanvas>>div:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


Poema>>renderOn:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seremos frágiles como una flor en el pantano nos d...etc...
		owner: 	a Poemas
		textoDePoema: 	'seremos frágiles
como una flor en el pantano
nos daremos
la medi...etc...


[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
		poema: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles en el sueño no quería dejar la habitación desordenad...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :poema | poema renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles en el sueño no quería dejar la habitación deso...etc...
		firstIndex: 	1
		lastIndex: 	3


WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil



--- The full stack ---
PalabraReal(Object)>>subclassResponsibility
PalabraReal(Palabra)>>autor
WAPoema>>renderPalabra:withRenderer:
[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
OrderedCollection(SequenceableCollection)>>do:separatedBy:
Verso>>renderOnComponent:withRenderer:
[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
OrderedCollection>>do:
[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>div:
WAPoema>>renderVersos:in:
Poema>>renderOn:withRenderer:
[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
OrderedCollection>>do:
WAPoemas>>renderPoemas:withRenderer:
Poemas>>renderOnComponent:withRenderer:
MuestraDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAPoemas>>renderContentOnTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poema>>autor
14 March 2020 6:06:33.816863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poema(Object)>>doesNotUnderstand: #autor
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aMessage: 	autor
		exception: 	MessageNotUnderstood: Poema>>autor
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seremos frágiles como una flor en el pantano nos d...etc...
		owner: 	a Poemas
		textoDePoema: 	'seremos frágiles
como una flor en el pantano
nos daremos
la medi...etc...


PalabraReal>>autor
	Receiver: seremos
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'seremos'
		palabraAnterior: 	
		palabraSiguiente: 	frágiles
		poema: 	seremos frágiles
		tipoDePalabra: 	nil


WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	seremos
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
		palabra: 	seremos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


OrderedCollection(SequenceableCollection)>>do:separatedBy:
	Receiver: an OrderedCollection( seremos frágiles)
	Arguments and temporary variables: 
		elementBlock: 	[ :palabra | aComponent renderPalabra: palabra withRenderer: html...etc...
		separatorBlock: 	[ html space ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array( seremos frágiles nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	3


Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
		verso: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles como una flor en el pantano nos daremos la medida ju...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | 
verso renderOnComponent: self withRenderer: html.
html para...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles como una flor en el pantano nos daremos la med...etc...
		firstIndex: 	1
		lastIndex: 	20


[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


BlockClosure>>renderOn:
	Receiver: [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		htm...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderVersos:in:
		startpc: 	36
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAHtmlCanvas>>div:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


Poema>>renderOn:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seremos frágiles como una flor en el pantano nos d...etc...
		owner: 	a Poemas
		textoDePoema: 	'seremos frágiles
como una flor en el pantano
nos daremos
la medi...etc...


[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
		poema: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles en el sueño no quería dejar la habitación desordenad...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :poema | poema renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles en el sueño no quería dejar la habitación deso...etc...
		firstIndex: 	1
		lastIndex: 	3


WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil



--- The full stack ---
Poema(Object)>>doesNotUnderstand: #autor
PalabraReal>>autor
WAPoema>>renderPalabra:withRenderer:
[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
OrderedCollection(SequenceableCollection)>>do:separatedBy:
Verso>>renderOnComponent:withRTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poemas>>autor
14 March 2020 6:06:57.728863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poemas(Object)>>doesNotUnderstand: #autor
	Receiver: a Poemas
	Arguments and temporary variables: 
		aMessage: 	autor
		exception: 	MessageNotUnderstood: Poemas>>autor
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


Poema>>autor
	Receiver: seremos frágiles
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seremos frágiles como una flor en el pantano nos d...etc...
		owner: 	a Poemas
		textoDePoema: 	'seremos frágiles
como una flor en el pantano
nos daremos
la medi...etc...


PalabraReal>>autor
	Receiver: seremos
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'seremos'
		palabraAnterior: 	
		palabraSiguiente: 	frágiles
		poema: 	seremos frágiles
		tipoDePalabra: 	nil


WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	seremos
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
		palabra: 	seremos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


OrderedCollection(SequenceableCollection)>>do:separatedBy:
	Receiver: an OrderedCollection( seremos frágiles)
	Arguments and temporary variables: 
		elementBlock: 	[ :palabra | aComponent renderPalabra: palabra withRenderer: html...etc...
		separatorBlock: 	[ html space ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array( seremos frágiles nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	3


Verso>>renderOnComponent:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		aComponent: 	a WAPoema
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seremos frágiles'
		palabras: 	an OrderedCollection( seremos frágiles)
		poema: 	seremos frágiles


[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
		verso: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles como una flor en el pantano nos daremos la medida ju...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | 
verso renderOnComponent: self withRenderer: html.
html para...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles como una flor en el pantano nos daremos la med...etc...
		firstIndex: 	1
		lastIndex: 	20


[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


BlockClosure>>renderOn:
	Receiver: [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		htm...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderVersos:in:
		startpc: 	36
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self with...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'div'


WAHtmlCanvas>>div:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAPoema>>renderVersos:in:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		versosDePoema: 	an OrderedCollection(seremos frágiles como una flor en el pantan...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	seremos frágiles
		owner: 	a WAPoemas


Poema>>renderOn:withRenderer:
	Receiver: seremos frágiles
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seremos frágiles como una flor en el pantano nos d...etc...
		owner: 	a Poemas
		textoDePoema: 	'seremos frágiles
como una flor en el pantano
nos daremos
la medi...etc...


[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
		poema: 	seremos frágiles
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(seremos frágiles en el sueño no quería dejar la habitación desordenad...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :poema | poema renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seremos frágiles en el sueño no quería dejar la habitación deso...etc...
		firstIndex: 	1
		lastIndex: 	3


WAPoemas>>renderPoemas:withRenderer:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		poemas: 	an OrderedCollection(seremos frágiles en el sueño no quería dejar la ha...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		poemasQueNoSePuedenMostrar: 	nil
		muestraDePoemas: 	a MuestraDePoemas


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAPoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
	Receiver: a WAPoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a MuestraDePoemas
		poemaConstruido: 	nil


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAPoemas>>renderContentOn:
		startpc: 	51
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAAnchorTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'



--- The full stack ---
Poemas(Object)>>doesNotUnderstand: #autor
Poema>>autor
PalabraReal>>autor
WAPoema>>renderPalabra:withRenderer:
[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in Verso>>renderOnComponent:withRenderer:
OrderedCollection(SequenceableCollection)>>do:separatedBy:
Verso>>renderOnComponent:withRenderer:
[ :verso | 
verso renderOnComponent: self withRenderer: html.
html paragraph: '' ] in [ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
OrderedCollection>>do:
[ versosDePoema
	do: [ :verso | 
		verso renderOnComponent: self withRenderer: html.
		html paragraph: '' ] ] in WAPoema>>renderVersos:in:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAHtmlCanvas>>div:
WAPoema>>renderVersos:in:
Poema>>renderOn:withRenderer:
[ :poema | poema renderOn: self withRenderer: html ] in WAPoemas>>renderPoemas:withRenderer:
OrderedCollection>>do:
WAPoemas>>renderPoemas:withRenderer:
Poemas>>renderOnComponent:withRenderer:
MuestraDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html ] in WAPoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAPoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAPoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAPoemas(WAComponent)>>accept:
WAPoemas(WAPresenter)>THERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #withArgs:executeMethod: in UndefinedObject failed
15 March 2020 3:26:19.354863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(ProtoObject)>>primitiveFailed:
	Receiver: nil
	Arguments and temporary variables: 
		selector: 	#withArgs:executeMethod:
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>primitiveFailed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>withArgs:executeMethod:
	Receiver: nil
	Arguments and temporary variables: 
		argArray: 	#()
		compiledMethod: 	nil
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	nil
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'Model subclass: #ConstruccionDePoemas
	instanceVariableNames: ''
	cla...etc...
		aController: 	a RubScrolledTextMorph(548569088)
		aClass: 	MuestraDePoemas
		oldClass: 	MuestraDePoemas
		class: 	nil
		newClassName: 	'ConstruccionDePoemas'
		defTokens: 	an OrderedCollection('Model' 'subclass:' '#ConstruccionDePoemas' 'in...etc...
		keywdIx: 	2
		classCompiler: 	an OpalCompiler
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(567726848)
	Arguments and temporary variables: 
		aString: 	'Model subclass: #ConstruccionDePoemas
	instanceVariableNames: ''
	cla...etc...
		aController: 	a RubScrolledTextMorph(548569088)
		aClass: 	MuestraDePoemas
	Receiver's instance variables: 
		bounds: 	(5.0@46.0) corner: (1915.0@983.0)
		owner: 	a SystemWindow(142876160) named: MuestraDePoemas
		submorphs: 	an Array(a ProportionalSplitterMorph(959923456) a PanelMorph(4338444...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (519188224) [sticky]  [other:  (announcer -> an Ann...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		navigationPanel: 	a PanelMorph(433844480)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(120132352) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(580541184)
		toolbar: 	a ClyToolbarMorph(80459520)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStarted: 	false
		plugins: 	a SortedCollection(a ClyStandardBrowserPlugin a ClyMonticelloBrowserPl...etc...
		navigationEnvironment: 	a ClyNavigationEnvironment
		systemScope: 	a ClySystemEnvironmentScope(current image)
		packageView: 	a ClyQueryViewMorph(120132352)
		classView: 	a ClyQueryViewMorph(935382272)
		methodGroupView: 	a ClyQueryViewMorph(16470784)
		methodView: 	a ClyQueryViewMorph(44137728)
		metaLevelScope: 	ClyInstanceSideScope
		methodGroupQuery: 	a ClyAllMethodGroupsQuery from inst. side: MuestraDePoemas


ClyClassDefinitionEditorToolMorph>>applyChanges
	Receiver: a ClyClassDefinitionEditorToolMorph(78768640)
	Arguments and temporary variables: 
		newClass: 	nil
	Receiver's instance variables: 
		bounds: 	(7.0@541.0) corner: (1914.0@982.0)
		owner: 	a Morph(237950976)
		submorphs: 	an Array(a ProportionalSplitterMorph(31572224) a ClyQueryViewMorph(7...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (428698112) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(567726848)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(323949312)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(519309312)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(548569088)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	MuestraDePoemas


[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(78768640)
	Arguments and temporary variables: 
		applied: 	nil
	Receiver's instance variables: 
		bounds: 	(7.0@541.0) corner: (1914.0@982.0)
		owner: 	a Morph(237950976)
		submorphs: 	an Array(a ProportionalSplitterMorph(31572224) a ClyQueryViewMorph(7...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (428698112) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(567726848)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(323949312)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(519309312)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(548569088)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	MuestraDePoemas


BlockClosure>>on:do:
	Receiver: [ self changesAreAboutApply.
applied := self applyChanges ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :err | 
textModel text: self editingText.
textMorph hasUnaccep...etc...
	Receiver's instance variables: 
		outerContext: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply...etc...
		startpc: 	80
		numArgs: 	0


[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(78768640)
	Arguments and temporary variables: 
		applied: 	nil
	Receiver's instance variables: 
		bounds: 	(7.0@541.0) corner: (1914.0@982.0)
		owner: 	a Morph(237950976)
		submorphs: 	an Array(a ProportionalSplitterMorph(31572224) a ClyQueryViewMorph(7...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (428698112) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(567726848)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(323949312)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(519309312)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(548569088)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	MuestraDePoemas


BlockClosure>>ensure:
	Receiver: [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyCh...etc...
	Arguments and temporary variables: 
		aBlock: 	[ applyingChanges := false ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>change...etc...
		startpc: 	70
		numArgs: 	0


ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>applyChangesBy:
	Receiver: a ClyClassDefinitionEditorToolMorph(78768640)
	Arguments and temporary variables: 
		aBlock: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
appl...etc...
	Receiver's instance variables: 
		bounds: 	(7.0@541.0) corner: (1914.0@982.0)
		owner: 	a Morph(237950976)
		submorphs: 	an Array(a ProportionalSplitterMorph(31572224) a ClyQueryViewMorph(7...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (428698112) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColoTHERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #withArgs:executeMethod: in UndefinedObject failed
15 March 2020 3:26:33.593863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(ProtoObject)>>primitiveFailed:
	Receiver: nil
	Arguments and temporary variables: 
		selector: 	#withArgs:executeMethod:
	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>primitiveFailed
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(ProtoObject)>>withArgs:executeMethod:
	Receiver: nil
	Arguments and temporary variables: 
		argArray: 	#()
		compiledMethod: 	nil
	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	nil
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'Model subclass: #ConstruccionDePoemas
	instanceVariableNames: ''
	cla...etc...
		aController: 	a RubScrolledTextMorph(548569088)
		aClass: 	MuestraDePoemas
		oldClass: 	MuestraDePoemas
		class: 	nil
		newClassName: 	'ConstruccionDePoemas'
		defTokens: 	an OrderedCollection('Model' 'subclass:' '#ConstruccionDePoemas' 'in...etc...
		keywdIx: 	2
		classCompiler: 	an OpalCompiler
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(567726848)
	Arguments and temporary variables: 
		aString: 	'Model subclass: #ConstruccionDePoemas
	instanceVariableNames: ''
	cla...etc...
		aController: 	a RubScrolledTextMorph(548569088)
		aClass: 	MuestraDePoemas
	Receiver's instance variables: 
		bounds: 	(5.0@46.0) corner: (1915.0@983.0)
		owner: 	a SystemWindow(142876160) named: MuestraDePoemas
		submorphs: 	an Array(a ProportionalSplitterMorph(959923456) a PanelMorph(4338444...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (519188224) [sticky]  [other:  (announcer -> an Ann...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		navigationPanel: 	a PanelMorph(433844480)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(120132352) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(580541184)
		toolbar: 	a ClyToolbarMorph(80459520)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStarted: 	false
		plugins: 	a SortedCollection(a ClyStandardBrowserPlugin a ClyMonticelloBrowserPl...etc...
		navigationEnvironment: 	a ClyNavigationEnvironment
		systemScope: 	a ClySystemEnvironmentScope(current image)
		packageView: 	a ClyQueryViewMorph(120132352)
		classView: 	a ClyQueryViewMorph(935382272)
		methodGroupView: 	a ClyQueryViewMorph(16470784)
		methodView: 	a ClyQueryViewMorph(44137728)
		metaLevelScope: 	ClyInstanceSideScope
		methodGroupQuery: 	a ClyAllMethodGroupsQuery from inst. side: MuestraDePoemas


ClyClassDefinitionEditorToolMorph>>applyChanges
	Receiver: a ClyClassDefinitionEditorToolMorph(78768640)
	Arguments and temporary variables: 
		newClass: 	nil
	Receiver's instance variables: 
		bounds: 	(7.0@541.0) corner: (1914.0@982.0)
		owner: 	a Morph(237950976)
		submorphs: 	an Array(a ProportionalSplitterMorph(31572224) a ClyQueryViewMorph(7...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (428698112) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(567726848)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(323949312)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(519309312)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(548569088)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	MuestraDePoemas


[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(78768640)
	Arguments and temporary variables: 
		applied: 	nil
	Receiver's instance variables: 
		bounds: 	(7.0@541.0) corner: (1914.0@982.0)
		owner: 	a Morph(237950976)
		submorphs: 	an Array(a ProportionalSplitterMorph(31572224) a ClyQueryViewMorph(7...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (428698112) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(567726848)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(323949312)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(519309312)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(548569088)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	MuestraDePoemas


BlockClosure>>on:do:
	Receiver: [ self changesAreAboutApply.
applied := self applyChanges ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :err | 
textModel text: self editingText.
textMorph hasUnaccep...etc...
	Receiver's instance variables: 
		outerContext: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply...etc...
		startpc: 	80
		numArgs: 	0


[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(78768640)
	Arguments and temporary variables: 
		applied: 	nil
	Receiver's instance variables: 
		bounds: 	(7.0@541.0) corner: (1914.0@982.0)
		owner: 	a Morph(237950976)
		submorphs: 	an Array(a ProportionalSplitterMorph(31572224) a ClyQueryViewMorph(7...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (428698112) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(567726848)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(323949312)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(519309312)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(548569088)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	MuestraDePoemas


BlockClosure>>ensure:
	Receiver: [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyCh...etc...
	Arguments and temporary variables: 
		aBlock: 	[ applyingChanges := false ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>change...etc...
		startpc: 	70
		numArgs: 	0


ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>applyChangesBy:
	Receiver: a ClyClassDefinitionEditorToolMorph(78768640)
	Arguments and temporary variables: 
		aBlock: 	[ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
appl...etc...
	Receiver's instance variables: 
		bounds: 	(7.0@541.0) corner: (1914.0@982.0)
		owner: 	a Morph(237950976)
		submorphs: 	an Array(a ProportionalSplitterMorph(31572224) a ClyQueryViewMorph(7...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (428698112) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(567726848)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(323949312)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(519309312)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(548569088)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	MuestraDePoemas


ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(78768640)
	Arguments and temporary variables: 
		applied: 	nil
	Receiver's instance variables: 
		bounds: 	(7.0@541.0) corner: (1914.0@982.0)
		owner: 	a Morph(237950976)
		submorphs: 	an Array(a ProportionalSplitterMorph(31572224) a ClyQueryViewMorph(7...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (428698112) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(567726848)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(323949312)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(519309312)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(548569088)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	MuestraDePoemas


MessageSend>>value
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(78768640))
	Arguments and temporary variables: 

	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(78768640)
		selector: 	#changesAccepted
		arguments: 	#()


MessageSend>>cull:
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(78768640))
	Arguments and temporary variables: 
		arg: 	a RubTextAccepted
	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(78768640)
		selector: 	#changesAccepted
		arguments: 	#()


MessageSend>>cull:cull:
	Receiver: MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(78768640))
	Arguments and temporary variables: 
		arg1: 	a RubTextAccepted
		arg2: 	an Announcer
	Receiver's instance variables: 
		receiver: 	a ClyClassDefinitionEditorToolMorph(78768640)
		selector: 	#changesAccepted
		arguments: 	#()


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a RubTextAccepted
	Receiver's instance variables: 
		announcer: 	an Announcer
		announcementClass: 	RubTextAccepted
		subscriber: 	a ClyClassDefinitionEditorToolMorph(78768640)
		action: 	MessageSend(#changesAccepted -> a ClyClassDefinitionEditorToolMorph(787...etc...


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		exception: 	UnhandledError
		handlerAction: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx...etc...
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


BlockClosure>>THERE_BE_DRAGONS_HERE
MessageNotUnderstood: ConstruccionDePoemas class>>conMuestra:
15 March 2020 4:29:04.048863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ConstruccionDePoemas class(Object)>>doesNotUnderstand: #conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	conMuestra: a MuestraDePoemas
		exception: 	MessageNotUnderstood: ConstruccionDePoemas class>>conMuestra:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#initialize->WAConstruccionDePoemas>>#initialize...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process iTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: ConstruccionDePoemas>>initializeConMuestra:
15 March 2020 4:30:12.804863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ConstruccionDePoemas(Object)>>doesNotUnderstand: #initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	initializeConMuestra: a MuestraDePoemas
		exception: 	MessageNotUnderstood: ConstruccionDePoemas>>initializeConMuestra:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#initialize->WAConstruccionDePoemas>>#initialize...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "acceptDecorated:" is nil
15 March 2020 4:30:18.078863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #acceptDecorated:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	acceptDecorated: a WAVisiblePresenterGuide
		exception: 	MessageNotUnderstood: receiver of "acceptDecorated:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	nil
	Receiver's instance variables: 
		client: 	a WATaskVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		client: 	a WATaskVisitor


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>startTasks
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2()
		documentHandlers: 	nil
		key: 	'DDFkGMLBY5sfUoez'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2()
		documentHandlers: 	nil
		key: 	'DDFkGMLBY5sfUoez'


WAMergedRequestFields>>at:ifAbsent:
	Receiver: a WAMergedRequestFields
	Arguments and temporary variables: 
		aKey: 	'_k'
		aBlock: 	[ ^ self start ]
	Receiver's instance variables: 
		delegates: 	an Array(a WARequestFields('_debugAction'->'_debug') a WARequestFiel...etc...


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2()
		documentHandlers: 	nil
		key: 	'DDFkGMLBY5sfUoez'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	[ self owner: nil ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WAMutualExclusionFilter>>handleFiltered:
		startpc: 	49
		numArgs: 	0


[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
	Receiver: a WAMutex
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: ConstruccionDePoemas>>initializeConMuestra:
15 March 2020 4:30:26.437863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ConstruccionDePoemas(Object)>>doesNotUnderstand: #initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	initializeConMuestra: a MuestraDePoemas
		exception: 	MessageNotUnderstood: ConstruccionDePoemas>>initializeConMuestra:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#initialize->WAConstruccionDePoemas>>#initialize...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		THERE_BE_DRAGONS_HERE
MessageNotUnderstood: ConstruccionDePoemas>>renderOn:withRenderer:
15 March 2020 4:31:35.393863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ConstruccionDePoemas(Object)>>doesNotUnderstand: #renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	renderOn: a WAConstruccionDePoemas withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: ConstruccionDePoemas>>renderOn:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/poemas?_s=BIZLYNTAYLag-bFM&_k=iv6kyUysI2yVSHxm
		actionBaseUrl: 	/poemas?_s=BIZLYNTAYLag-bFM&_k=iv6kyUysI2yVSHxm
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayoTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAConstruccionDePoemas>>renderMuestra:withRenderer:
15 March 2020 4:34:12.043863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderMuestra:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	renderMuestra: a MuestraDePoemas withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAConstruccionDePoemas>>renderMuestra:withRend...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/poemas?_s=BIZLYNTAYLag-bFM&_k=iv6kyUysI2yVSHxm
		actionBaseUrl: 	/poemas?_s=BIZLYNTAYLag-bFM&_k=iv6kyUysI2yVSHxm
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext



--- The full stack ---
WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderMuestra:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:duringTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAMuestraDePoemas class>>owner:
15 March 2020 4:36:20.087863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas class(Object)>>doesNotUnderstand: #owner:
	Receiver: WAMuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	owner: a WAConstruccionDePoemas
		exception: 	MessageNotUnderstood: WAMuestraDePoemas class>>owner:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAMuestraDePoemas>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAMuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAConstruccionDePoemas>>renderMuestra:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/poemas?_s=BIZLYNTAYLag-bFM&_k=iv6kyUysI2yVSHxm
		actionBaseUrl: 	/poemas?_s=BIZLYNTAYLag-bFM&_k=iv6kyUysI2yVSHxm
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13



--- The full stack ---
WAMuestraDePoemas class(Object)>>doesNotUnderstand: #owner:
WAConstruccionDePoemas>>renderMuestra:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
selTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAMuestraDePoemas>>poemasAMostrar
15 March 2020 4:37:01.374863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas(Object)>>doesNotUnderstand: #poemasAMostrar
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	poemasAMostrar
		exception: 	MessageNotUnderstood: WAMuestraDePoemas>>poemasAMostrar
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil


WAMuestraDePoemas>>initialize
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil


WAMuestraDePoemas class(GRObject class)>>new
	Receiver: WAMuestraDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAMuestraDePoemas>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAMuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAMuestraDePoemas class>>owner:
	Receiver: WAMuestraDePoemas
	Arguments and temporary variables: 
		ownerComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAMuestraDePoemas>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAMuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAConstruccionDePoemas>>renderMuestra:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/poemas?_s=BIZLYNTAYLag-bFM&_k=iv6kyUysI2yVSHxm
		actionBaseUrl: 	/poemas?_s=BIZLYNTAYLag-bFM&_k=iv6kyUysI2yVSHxm
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot



--- The full stack ---
WAMuestraDePoemas(Object)>>doesNotUnderstand: #poemasAMostrar
WAMuestraDePoemas>>initialize
WAMuestraDePoemas class(GRObject class)>>new
WAMuestraDePoemas class>>owner:
WAConstruccionDePoemas>>renderMuestra:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAMuestraDePoemas>>poemasAMostrar
15 March 2020 4:38:21.173863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas(Object)>>doesNotUnderstand: #poemasAMostrar
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	poemasAMostrar
		exception: 	MessageNotUnderstood: WAMuestraDePoemas>>poemasAMostrar
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil


WAMuestraDePoemas>>initialize
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil


WAMuestraDePoemas class(GRObject class)>>new
	Receiver: WAMuestraDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAMuestraDePoemas>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAMuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAMuestraDePoemas class>>owner:
	Receiver: WAMuestraDePoemas
	Arguments and temporary variables: 
		ownerComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAMuestraDePoemas>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAMuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAConstruccionDePoemas>>renderMuestra:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/poemas?_s=P39HQSp1KbeinO0q&_k=LSc8jkyzq0ObPp6v
		actionBaseUrl: 	/poemas?_s=P39HQSp1KbeinO0q&_k=LSc8jkyzq0ObPp6v
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot



--- The full stack ---
WAMuestraDePoemas(Object)>>doesNotUnderstand: #poemasAMostrar
WAMuestraDePoemas>>initialize
WAMuestraDePoemas class(GRObject class)>>new
WAMuestraDePoemas class>>owner:
WAConstruccionDePoemas>>renderMuestra:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAMuestraDePoemas>>initializeOwner:
15 March 2020 4:38:54.804863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas(Object)>>doesNotUnderstand: #initializeOwner:
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	initializeOwner: a WAConstruccionDePoemas
		exception: 	MessageNotUnderstood: WAMuestraDePoemas>>initializeOwner:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil


WAMuestraDePoemas class>>owner:
	Receiver: WAMuestraDePoemas
	Arguments and temporary variables: 
		ownerComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAMuestraDePoemas>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAMuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAConstruccionDePoemas>>renderMuestra:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/poemas?_s=UKKlZbPUX2DnOc1K&_k=dewl91Qsu2JOTE78
		actionBaseUrl: 	/poemas?_s=UKKlZbPUX2DnOc1K&_k=dewl91Qsu2JOTE78
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0



--- The full stack ---
WAMuestraDePoemas(Object)>>doesNotUnderstand: #initializeOwner:
WAMuestraDePoemas class>>owner:
WAConstruccionDePoemas>>renderMuestra:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLooTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAMuestraDePoemas>>initializeOwner:
15 March 2020 4:39:01.493863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas(Object)>>doesNotUnderstand: #initializeOwner:
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	initializeOwner: a WAConstruccionDePoemas
		exception: 	MessageNotUnderstood: WAMuestraDePoemas>>initializeOwner:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil


WAMuestraDePoemas class>>owner:
	Receiver: WAMuestraDePoemas
	Arguments and temporary variables: 
		ownerComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoANuevoPoema:->WAMuestraDePoemas>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAMuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAConstruccionDePoemas>>renderMuestra:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/poemas?_s=CQG0bgQuS6G4qniL&_k=Z8lDPmkijeXSmx8y
		actionBaseUrl: 	/poemas?_s=CQG0bgQuS6G4qniL&_k=Z8lDPmkijeXSmx8y
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0



--- The full stack ---
WAMuestraDePoemas(Object)>>doesNotUnderstand: #initializeOwner:
WAMuestraDePoemas class>>owner:
WAConstruccionDePoemas>>renderMuestra:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>startTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
15 March 2020 4:39:36.776863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/poemas?_s=CQG0bgQuS6G4qniL&_k=Z8lDPmkijeXSmx8y
		actionBaseUrl: 	/poemas?_s=CQG0bgQuS6G4qniL&_k=Z8lDPmkijeXSmx8y
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext



--- The full stack ---
WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poema>>component
15 March 2020 4:42:15.336863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poema(Object)>>doesNotUnderstand: #component
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aMessage: 	component
		exception: 	MessageNotUnderstood: Poema>>component
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


[ unPoema renderOn: unPoema component withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ unPoema renderOn: unPoema component withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
		startpc: 	49
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: unPoema component withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: unPoema component withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: unPoema component withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'PoemaConstruido')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'PoemaConstruido')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: unPoema component withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'PoemaConstruido')
		tag: 	'div'


WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas



--- The full stack ---
Poema(Object)>>doesNotUnderstand: #component
[ unPoema renderOn: unPoema component withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>sTHERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 1
15 March 2020 4:44:00.179863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

OrderedCollection(Object)>>errorSubscriptBounds:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		index: 	1
	Receiver's instance variables: 
		array: 	#()
		firstIndex: 	1
		lastIndex: 	0


OrderedCollection>>at:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		anInteger: 	1
		index: 	1
	Receiver's instance variables: 
		array: 	#()
		firstIndex: 	1
		lastIndex: 	0


OrderedCollection(SequenceableCollection)>>first
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 

	Receiver's instance variables: 
		array: 	#()
		firstIndex: 	1
		lastIndex: 	0


Poema>>printOn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aStream: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


Poema(Object)>>displayStringOn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aStream: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


[ :s | self displayStringOn: s ] in Poema(Object)>>displayStringLimitedTo:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
		s: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


String class(SequenceableCollection class)>>streamContents:limitedTo:
	Receiver: String
	Arguments and temporary variables: 
		stream: 	a LimitedWriteStream
		blockWithArg: 	[ :s | self displayStringOn: s ]
		sizeLimit: 	50000
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 330)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


Poema(Object)>>printStringLimitedTo:using:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
		printBlock: 	[ :s | self displayStringOn: s ]
		limitedString: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


Poema(Object)>>displayStringLimitedTo:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


Poema(Object)>>displayString
	Receiver: <<error during printing>>
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


Poema>>renderOn:withRenderer:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		waComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


[ unPoema renderOn: self withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ unPoema renderOn: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
		startpc: 	45
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'PoemaConstruido')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'PoemaConstruido')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'PoemaConstruido')
		tag: 	'div'


WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
OrderedCollection(Object)>>errorSubscriptBounds:
OrderedCollection>>at:
OrderedCollection(SequenceableCollection)>>first
Poema>>printOn:
Poema(Object)>>displayStringOn:
[ :s | self displayStringOn: s ] in Poema(Object)>>displayStringLimitedTo:
String class(SequenceableCollection class)>>streamContents:limitedTo:
Poema(Object)>>printStringLimitedTo:using:
Poema(Object)>>displayStringLimitedTo:
Poema(Object)>>displayString
Poema>>renderOn:withRenderer:
[ unPoema renderOn: self withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuaTHERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 1
15 March 2020 4:45:57.935863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

OrderedCollection(Object)>>errorSubscriptBounds:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		index: 	1
	Receiver's instance variables: 
		array: 	#()
		firstIndex: 	1
		lastIndex: 	0


OrderedCollection>>at:
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 
		anInteger: 	1
		index: 	1
	Receiver's instance variables: 
		array: 	#()
		firstIndex: 	1
		lastIndex: 	0


OrderedCollection(SequenceableCollection)>>first
	Receiver: an OrderedCollection()
	Arguments and temporary variables: 

	Receiver's instance variables: 
		array: 	#()
		firstIndex: 	1
		lastIndex: 	0


Poema>>printOn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aStream: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


Poema(Object)>>displayStringOn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aStream: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


[ :s | self displayStringOn: s ] in Poema(Object)>>displayStringLimitedTo:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
		s: 	a LimitedWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


String class(SequenceableCollection class)>>streamContents:limitedTo:
	Receiver: String
	Arguments and temporary variables: 
		stream: 	a LimitedWriteStream
		blockWithArg: 	[ :s | self displayStringOn: s ]
		sizeLimit: 	50000
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(size 330)
		format: 	0
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ByteString. Symbol. WideString}
		name: 	#String
		classPool: 	a Dictionary(#AsciiOrder->#[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


Poema(Object)>>printStringLimitedTo:using:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
		printBlock: 	[ :s | self displayStringOn: s ]
		limitedString: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


Poema(Object)>>displayStringLimitedTo:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		limit: 	50000
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


Poema(Object)>>displayString
	Receiver: <<error during printing>>
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


Poema>>renderOn:withRenderer:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		waComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


[ unPoema renderOn: self withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ unPoema renderOn: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
		startpc: 	45
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'PoemaConstruido')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'PoemaConstruido')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOn: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'PoemaConstruido')
		tag: 	'div'


WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOn:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	<<error during printing>>

WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
OrderedCollection(Object)>>errorSubscriptBounds:
OrderedCollection>>at:
OrderedCollection(SequenceableCollection)>>first
Poema>>printOn:
Poema(Object)>>displayStringOn:
[ :s | self displayStringOn: s ] in Poema(Object)>>displayStringLimitedTo:
String class(SequenceableCollection class)>>streamContents:limitedTo:
Poema(Object)>>printStringLimitedTo:using:
Poema(Object)>>displayStringLimitedTo:
Poema(Object)>>displayString
Poema>>renderOn:withRenderer:
[ unPoema renderOn: self withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOn:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAMuestraDePoemas>>poemaConstruido
15 March 2020 5:03:07.807863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas(Object)>>doesNotUnderstand: #poemaConstruido
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	poemaConstruido
		exception: 	MessageNotUnderstood: WAMuestraDePoemas>>poemaConstruido
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil
		owner: 	a WAConstruccionDePoemas


WAMuestraDePoemas>>agregarVersoANuevoPoema:
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		verso: 	con la fuerza de un volcán
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil
		owner: 	a WAConstruccionDePoemas


WAPoema>>agregarVersoConPalabra:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	volcán
	Receiver's instance variables: 
		decoration: 	nil
		model: 	no quería dejar la habitación desordenada
		owner: 	a WAMuestraDePoemas


[ self agregarVersoConPalabra: unaPalabraReal ] in WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	volcán
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	no quería dejar la habitación desordenada
		owner: 	a WAMuestraDePoemas


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'93'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'93'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 214)
		nextKey: 	216


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 214)
		nextKey: 	216


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugActi...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	ArgumentTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAConstruccionDePoemas>>agregarVerso:
15 March 2020 5:03:24.137863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas(Object)>>doesNotUnderstand: #agregarVerso:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	agregarVerso: con la fuerza de un volcán
		exception: 	MessageNotUnderstood: WAConstruccionDePoemas>>agregarVerso:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAMuestraDePoemas>>agregarVersoANuevoPoema:
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		verso: 	con la fuerza de un volcán
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil
		owner: 	a WAConstruccionDePoemas


WAPoema>>agregarVersoConPalabra:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	volcán
	Receiver's instance variables: 
		decoration: 	nil
		model: 	no quería dejar la habitación desordenada
		owner: 	a WAMuestraDePoemas


[ self agregarVersoConPalabra: unaPalabraReal ] in WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	volcán
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	no quería dejar la habitación desordenada
		owner: 	a WAMuestraDePoemas


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'93'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'93'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 214)
		nextKey: 	216


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 214)
		nextKey: 	216


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugActi...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_debug&93&_s=Kd0Ap8rm75S...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?_k=r1BftUGhfbw2ZImo&_debugAction=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_debug&93&_s=Kd0Ap8rm75S...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?_k=r1BftUGhfbw2ZImo&_debugAction=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: ConstruccionDePoemas>>agregarVerso:
15 March 2020 5:03:57.866863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ConstruccionDePoemas(Object)>>doesNotUnderstand: #agregarVerso:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	agregarVerso: con la fuerza de un volcán
		exception: 	MessageNotUnderstood: ConstruccionDePoemas>>agregarVerso:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	


WAConstruccionDePoemas>>agregarVerso:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unVerso: 	con la fuerza de un volcán
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAMuestraDePoemas>>agregarVersoANuevoPoema:
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		verso: 	con la fuerza de un volcán
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil
		owner: 	a WAConstruccionDePoemas


WAPoema>>agregarVersoConPalabra:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	volcán
	Receiver's instance variables: 
		decoration: 	nil
		model: 	no quería dejar la habitación desordenada
		owner: 	a WAMuestraDePoemas


[ self agregarVersoConPalabra: unaPalabraReal ] in WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	volcán
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	no quería dejar la habitación desordenada
		owner: 	a WAMuestraDePoemas


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'93'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'93'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 214)
		nextKey: 	216


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 214)
		nextKey: 	216


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugActi...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_debug&93&_s=Kd0Ap8rm75S...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?_k=r1BftUGhfbw2ZImo&_debugAction=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAction=_debug&93&_s=Kd0Ap8rm75S...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?_k=r1BftUGhfbw2ZImo&_debugAction=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=r1BftUGhfbw2ZImo&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self applicatioTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAConstruccionDePoemas>>agregarVersoANuevoPoema:
15 March 2020 5:04:39.058863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas(Object)>>doesNotUnderstand: #agregarVersoANuevoPoema:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	agregarVersoANuevoPoema: pero el volcán erupcionó
		exception: 	MessageNotUnderstood: WAConstruccionDePoemas>>agregarVersoANuevoPoem...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAPoema>>agregarVersoConPalabra:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	volcán
	Receiver's instance variables: 
		decoration: 	nil
		model: 	con la fuerza de un volcán
		owner: 	a WAConstruccionDePoemas


[ self agregarVersoConPalabra: unaPalabraReal ] in WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	volcán
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	con la fuerza de un volcán
		owner: 	a WAConstruccionDePoemas


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'200'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'200'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 209)
		nextKey: 	211


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAct...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 209)
		nextKey: 	211


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugActi...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=_de...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=_de...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=_de...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=_debug&_s=Kd0Ap8rm75S6Xv...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=_debug&_s=Kd0Ap8rm75S6Xv...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?_k=i1BNkulAjw_Y2S3V&_debugAction=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_k=i1BNkulAjw_Y2S3V&_debugAct...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's iTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAMuestraDePoemas>>agregarVerso:
15 March 2020 5:06:44.135863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas(Object)>>doesNotUnderstand: #agregarVerso:
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	agregarVerso: de la oscuridad
		exception: 	MessageNotUnderstood: WAMuestraDePoemas>>agregarVerso:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		poemaConstruido: 	nil
		owner: 	a WAConstruccionDePoemas


WAPoema>>agregarVersoConPalabra:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	oscuridad
	Receiver's instance variables: 
		decoration: 	nil
		model: 	tomo un café
		owner: 	a WAMuestraDePoemas


[ self agregarVersoConPalabra: unaPalabraReal ] in WAPoema>>renderPalabra:withRenderer:
	Receiver: a WAPoema
	Arguments and temporary variables: 
		unaPalabraReal: 	oscuridad
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	tomo un café
		owner: 	a WAMuestraDePoemas


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAPoema>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'232'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'232'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MG...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 236)
		nextKey: 	238


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MG...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 236)
		nextKey: 	238


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MGf...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MG...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MG...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MGf4eBJ0e...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MGf4eBJ0e...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MGf4eBJ0e...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MGf4eBJ0e...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MGf4eBJ0e...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MGf4eBJ0e...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?232&_debugAction=_debug&_s=MGf4eBJ0eXPQ5x6j&_k=Lyzp3yFVbZ...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?232&_debugAction=_debug&_s=MGf4eB.THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAMuestraDePoemas>>renderPoemas:withRenderer:
15 March 2020 5:38:00.893863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas(Object)>>doesNotUnderstand: #renderPoemas:withRenderer:
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	renderPoemas: an OrderedCollection(seremos frágiles en el sueño no qu...etc...
		exception: 	MessageNotUnderstood: WAMuestraDePoemas>>renderPoemas:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAMuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		muestraDePoemas: 	a MuestraDePoemas


[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ] in MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAMuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


BlockClosure>>renderOn:
	Receiver: [ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	MuestraDePoemas>>renderOnComponent:withRenderer:
		startpc: 	52
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAMuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


WAConstruccionDePoemas>>renderMuestra:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderiTHERE_BE_DRAGONS_HERE
ShouldBeImplemented: #renderPoemas:withRenderer: should have been implemented in WAMuestraDePoemas
15 March 2020 5:38:42.849863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas(Object)>>shouldBeImplemented
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas


WAMuestraDePoemas>>renderPoemas:withRenderer:
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		aCollection: 	an OrderedCollection(no cambió el delirio  en el sueño elogio la a...etc...
		aWAHtmlCanvas: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAMuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		muestraDePoemas: 	a MuestraDePoemas


[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ] in MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAMuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


BlockClosure>>renderOn:
	Receiver: [ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	MuestraDePoemas>>renderOnComponent:withRenderer:
		startpc: 	52
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAMuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


WAConstruccionDePoemas>>renderMuestra:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAMuestraDePoemas(Object)>>shouldBeImplemented
WAMuestraDePoemas>>renderPoemas:withRenderer:
Poemas>>renderOnComponent:withRenderer:
[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ] in MuestraDePoemas>>renderOnComponent:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
MuestraDePoemas>>renderOnComponent:withRenderer:
WAConstruccionDePoemas>>renderMuestra:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestCoTHERE_BE_DRAGONS_HERE
ShouldBeImplemented: #renderPoemas:withRenderer: should have been implemented in WAMuestraDePoemas
15 March 2020 5:38:44.924863 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAMuestraDePoemas(Object)>>shouldBeImplemented
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas


WAMuestraDePoemas>>renderPoemas:withRenderer:
	Receiver: a WAMuestraDePoemas
	Arguments and temporary variables: 
		aCollection: 	an OrderedCollection(seremos frágiles para curarme  tomo un café)
		aWAHtmlCanvas: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas


Poemas>>renderOnComponent:withRenderer:
	Receiver: a Poemas
	Arguments and temporary variables: 
		waComponent: 	a WAMuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		muestraDePoemas: 	a MuestraDePoemas


[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ] in MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAMuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


BlockClosure>>renderOn:
	Receiver: [ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	MuestraDePoemas>>renderOnComponent:withRenderer:
		startpc: 	52
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ poemasAMostrar renderOnComponent: aComponent withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'div'


MuestraDePoemas>>renderOnComponent:withRenderer:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAMuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


WAConstruccionDePoemas>>renderMuestra:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPaTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "name" is nil
15 March 2020 6:19:47.409762 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #name
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	name
		exception: 	MessageNotUnderstood: receiver of "name" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ json string: dep name ] in [ :dep | json value: [ json string: dep name ] ] in [ grPackage dependencies
	do: [ :dep | json value: [ json string: dep name ] ] ] in [ json
	array: [ grPackage dependencies
			do: [ :dep | json value: [ json string: dep name ] ] ] ] in [ json key: 'name' value: grPackage name.
json
	key: 'dependencies'
	value: [ json
			array: [ grPackage dependencies
					do: [ :dep | json value: [ json string: dep name ] ] ] ] ] in [ :grPackage | 
json
	object: [ json key: 'name' value: grPackage name.
		json
			key: 'dependencies'
			value: [ json
					array: [ grPackage dependencies
							do: [ :dep | json value: [ json string: dep name ] ] ] ] ] ] in [ GRPackage grPackages
	do: [ :grPackage | 
		json
			object: [ json key: 'name' value: grPackage name.
				json
					key: 'dependencies'
					value: [ json
							array: [ grPackage dependencies
									do: [ :dep | json value: [ json string: dep name ] ] ] ] ] ] ] in JQJsonFunctionalTest>>seasidePackagesOn:
	Receiver: a JQJsonFunctionalTest
	Arguments and temporary variables: 
		json: 	a WAJsonCanvas
		grPackage: 	a GRPackage(Seaside-Pharo-Core)
		dep: 	nil
	Receiver's instance variables: 
		decoration: 	nil


BlockClosure>>jsonOn:
	Receiver: [ json string: dep name ]
	Arguments and temporary variables: 
		aRenderer: 	a WAJsonCanvas
	Receiver's instance variables: 
		outerContext: 	[ :dep | json value: [ json string: dep name ] ] in [ grPackage d...etc...
		startpc: 	108
		numArgs: 	0


WAJsonCanvas>>render:
	Receiver: a WAJsonCanvas
	Arguments and temporary variables: 
		anObject: 	[ json string: dep name ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAJsonValueBrush
		first: 	true


[ canvas render: anObject ] in WAJsonValueBrush(WAJsonBrush)>>with:
	Receiver: a WAJsonValueBrush
	Arguments and temporary variables: 
		anObject: 	[ json string: dep name ]
	Receiver's instance variables: 
		canvas: 	a WAJsonCanvas
		parent: 	a WAJsonArrayBrush
		closed: 	false


BlockClosure>>jsonOn:
	Receiver: [ canvas render: anObject ]
	Arguments and temporary variables: 
		aRenderer: 	a WAJsonCanvas
	Receiver's instance variables: 
		outerContext: 	WAJsonValueBrush(WAJsonBrush)>>with:
		startpc: 	38
		numArgs: 	0


WAJsonCanvas>>render:
	Receiver: a WAJsonCanvas
	Arguments and temporary variables: 
		anObject: 	[ canvas render: anObject ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAJsonValueBrush
		first: 	true


WAJsonCanvas(WACanvas)>>nest:
	Receiver: a WAJsonCanvas
	Arguments and temporary variables: 
		aBlock: 	[ canvas render: anObject ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAJsonValueBrush
		first: 	true


WAJsonCanvas>>nest:
	Receiver: a WAJsonCanvas
	Arguments and temporary variables: 
		aBlock: 	[ canvas render: anObject ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAJsonValueBrush
		first: 	true


WAJsonValueBrush(WABrush)>>with:
	Receiver: a WAJsonValueBrush
	Arguments and temporary variables: 
		aBlock: 	[ canvas render: anObject ]
	Receiver's instance variables: 
		canvas: 	a WAJsonCanvas
		parent: 	a WAJsonArrayBrush
		closed: 	false


WAJsonValueBrush(WAJsonBrush)>>with:
	Receiver: a WAJsonValueBrush
	Arguments and temporary variables: 
		anObject: 	[ json string: dep name ]
	Receiver's instance variables: 
		canvas: 	a WAJsonCanvas
		parent: 	a WAJsonArrayBrush
		closed: 	false


WAJsonCanvas>>value:
	Receiver: a WAJsonCanvas
	Arguments and temporary variables: 
		aBlock: 	[ json string: dep name ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAJsonValueBrush
		first: 	true


[ :dep | json value: [ json string: dep name ] ] in [ grPackage dependencies
	do: [ :dep | json value: [ json string: dep name ] ] ] in [ json
	array: [ grPackage dependencies
			do: [ :dep | json value: [ json string: dep name ] ] ] ] in [ json key: 'name' value: grPackage name.
json
	key: 'dependencies'
	value: [ json
			array: [ grPackage dependencies
					do: [ :dep | json value: [ json string: dep name ] ] ] ] ] in [ :grPackage | 
json
	object: [ json key: 'name' value: grPackage name.
		json
			key: 'dependencies'
			value: [ json
					array: [ grPackage dependencies
							do: [ :dep | json value: [ json string: dep name ] ] ] ] ] ] in [ GRPackage grPackages
	do: [ :grPackage | 
		json
			object: [ json key: 'name' value: grPackage name.
				json
					key: 'dependencies'
					value: [ json
							array: [ grPackage dependencies
									do: [ :dep | json value: [ json string: dep name ] ] ] ] ] ] ] in JQJsonFunctionalTest>>seasidePackagesOn:
	Receiver: a JQJsonFunctionalTest
	Arguments and temporary variables: 
		json: 	a WAJsonCanvas
		grPackage: 	a GRPackage(Seaside-Pharo-Core)
		dep: 	nil
	Receiver's instance variables: 
		decoration: 	nil


OrderedCollection>>do:
	Receiver: an OrderedCollection(a GRPackage(Seaside-Core) nil)
	Arguments and temporary variables: 
		aBlock: 	[ :dep | json value: [ json string: dep name ] ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array(a GRPackage(Seaside-Core) nil)
		firstIndex: 	1
		lastIndex: 	2


[ grPackage dependencies
	do: [ :dep | json value: [ json string: dep name ] ] ] in [ json
	array: [ grPackage dependencies
			do: [ :dep | json value: [ json string: dep name ] ] ] ] in [ json key: 'name' value: grPackage name.
json
	key: 'dependencies'
	value: [ json
			array: [ grPackage dependencies
					do: [ :dep | json value: [ json string: dep name ] ] ] ] ] in [ :grPackage | 
json
	object: [ json key: 'name' value: grPackage name.
		json
			key: 'dependencies'
			value: [ json
					array: [ grPackage dependencies
							do: [ :dep | json value: [ json string: dep name ] ] ] ] ] ] in [ GRPackage grPackages
	do: [ :grPackage | 
		json
			object: [ json key: 'name' value: grPackage name.
				json
					key: 'dependencies'
					value: [ json
							array: [ grPackage dependencies
									doTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes class>>dePath:
18 March 2020 8:17:52.546735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes class(Object)>>doesNotUnderstand: #dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		aMessage: 	dePath: '.\imagenes\'
		exception: 	MessageNotUnderstood: Imagenes class>>dePath:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes>>initializeWithPath:
18 March 2020 8:19:48.066735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>doesNotUnderstand: #initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aMessage: 	initializeWithPath: '.\imagenes\'
		exception: 	MessageNotUnderstood: Imagenes>>initializeWithPath:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserTHERE_BE_DRAGONS_HERE
ShouldBeImplemented: #DoItIn: should have been implemented in Imagenes
18 March 2020 8:20:08.295735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>shouldBeImplemented
	Receiver: an Imagenes
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>initializeWithPath:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ self shouldBeImplemented
		source: 	a ReadStream
		context: 	Imagenes>>initializeWithPath:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>initializeWithPath:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(1035412736)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(1035412736)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(248724480)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1035412736)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@50)
		owner: 	a TransformWithLayoutMorph(48919040)
		submorphs: 	an Array(a RubCursor(660962816) a RubPrimarySelectionMorph(771154432...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (591813376) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(83003392)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(660962816)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(538239232))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(248724480)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(501621248))(a DropList...etc...
		lastStepTime: 	4089629
		lastStepMessage: 	nil
		lastCycleTime: 	4089687
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(660962816)))
		lastAlarmTime: 	4089629
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(501621248))(a DropList...etc...
		lastStepTime: 	4089629
		lastStepMessage: 	nil
		lastCycleTime: 	4089687
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(660962816)))
		lastAlarmTime: 	4089629
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(501621248))(a DropList...etc...
		lastStepTime: 	4089629
		lastStepMessage: 	nil
		lastCycleTime: 	4089687
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(660962816)))
		lastAlarmTime: 	4089629
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes>>iamgeStreams
18 March 2020 8:26:37.363735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>doesNotUnderstand: #iamgeStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aMessage: 	iamgeStreams
		exception: 	MessageNotUnderstood: Imagenes>>iamgeStreams
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#initializeWithPath:->Imagenes>>#initializeWithP...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuratiTHERE_BE_DRAGONS_HERE
FileDoesNotExistException: '/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'
18 March 2020 8:45:40.731735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | File openForWriteFileNamed: pathOfFile pathString ] in Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>iamgeStreams
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | File openForWriteFileNamed: pathOfFile pathString ]
		newCollection: 	#(nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>iamgeStreams
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (FileSystem disk childrenAt: path)
		collect: [ :pa...etc...
		source: 	a ReadStream
		context: 	Imagenes>>iamgeStreams
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>iamgeStreams
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(486596608)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(486596608)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(605253888)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(486596608)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@88)
		owner: 	a TransformWithLayoutMorph(612803584)
		submorphs: 	an Array(a RubPrimarySelectionMorph(445415936) a RubCursor(100797491...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (418841856) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(59067136)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(1007974912)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(25020160))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(605253888)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(681582592))(a DropList...etc...
		lastStepTime: 	5622101
		lastStepMessage: 	nil
		lastCycleTime: 	5622132
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1007974912)))
		lastAlarmTime: 	5622101
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(681582592))(a DropList...etc...
		lastStepTime: 	5622101
		lastStepMessage: 	nil
		lastCycleTime: 	5622132
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1007974912)))
		lastAlarmTime: 	5622101
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(681582592))(a DropList...etc...
		lastStepTime: 	5622101
		lastStepMessage: 	nil
		lastCycleTime: 	5622132
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1007974912)))
		lastAlarmTime: 	5622101
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
File>>openForWrite:
File>>openForWrite
File class>>openForWriteFileNamed:
[ :pathOfFile | File openForWriteFileNamed: pathOfFile pathString ] in Imagenes>>DoItIn:
Array(SequenceableCollection)>>collect:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character did not understand #value:
18 March 2020 8:47:19.596735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Character(Object)>>doesNotUnderstand: #value:
	Receiver: $/
	Arguments and temporary variables: 
		aMessage: 	value: $/
		exception: 	MessageNotUnderstood: Character>>value:
		resumeValue: 	nil
	Receiver's instance variables: 
$/

ByteString(String)>>trimLeft:right:
	Receiver: '/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'
	Arguments and temporary variables: 
		aLeftBlock: 	$/
		aRightBlock: 	[ :char | false ]
		left: 	1
		right: 	60
	Receiver's instance variables: 
'/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'

ByteString(String)>>trimLeft:
	Receiver: '/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'
	Arguments and temporary variables: 
		aBlock: 	$/
	Receiver's instance variables: 
'/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'

AbsolutePath>>DoIt
	Receiver: Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / 'imagenes'...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / 'imagenes'...etc...

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoIt
	^ self pathString trimLeft: $/
		source: 	a ReadStream
		context: 	nil
		receiver: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' /...etc...
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Ph...etc...
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(34206976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(34206976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(377908480)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(34206976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (275@107)
		owner: 	a TransformWithLayoutMorph(465576448)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464812032) a RubCursor(769557248...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (729203712) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(588034560)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(769557248)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(38952960))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(377908480)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(681582592))(a DropList...etc...
		lastStepTime: 	5720982
		lastStepMessage: 	nil
		lastCycleTime: 	5721023
		alarms: 	a Heap()
		lastAlarmTime: 	5720982
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(681582592))(a DropList...etc...
		lastStepTime: 	5720982
		lastStepMessage: 	nil
		lastCycleTime: 	5721023
		alarms: 	a Heap()
		lastAlarmTime: 	5720982
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(681582592))(a DropList...etc...
		lastStepTime: 	5720982
		lastStepMessage: 	nil
		lastCycleTime: 	5721023
		alarms: 	a Heap()
		lastAlarmTime: 	5720982
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #value:
ByteString(String)>>trimLeft:right:
ByteString(String)>>trimLeft:
AbsolutePath>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ByteString did not understand #value:
18 March 2020 8:47:33.116735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>doesNotUnderstand: #value:
	Receiver: '/'
	Arguments and temporary variables: 
		aMessage: 	value: $/
		exception: 	MessageNotUnderstood: ByteString>>value:
		resumeValue: 	nil
	Receiver's instance variables: 
'/'

ByteString(String)>>trimLeft:right:
	Receiver: '/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'
	Arguments and temporary variables: 
		aLeftBlock: 	'/'
		aRightBlock: 	[ :char | false ]
		left: 	1
		right: 	60
	Receiver's instance variables: 
'/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'

ByteString(String)>>trimLeft:
	Receiver: '/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'
	Arguments and temporary variables: 
		aBlock: 	'/'
	Receiver's instance variables: 
'/C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'

AbsolutePath>>DoIt
	Receiver: Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / 'imagenes'...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / 'imagenes'...etc...

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoIt
	^ self pathString trimLeft: '/'
		source: 	a ReadStream
		context: 	nil
		receiver: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' /...etc...
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Ph...etc...
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(34206976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(34206976)
		selectorChooser: 	nil
		notificationStrategy: 	a GLMPopperNotificationStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(377908480)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(34206976)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (275@107)
		owner: 	a TransformWithLayoutMorph(465576448)
		submorphs: 	an Array(a RubPrimarySelectionMorph(464812032) a RubCursor(769557248...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (729203712) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(588034560)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkScriptingMode
		cursor: 	a RubCursor(769557248)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(864065280))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoScriptRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(377908480)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(681582592))(a DropList...etc...
		lastStepTime: 	5734463
		lastStepMessage: 	nil
		lastCycleTime: 	5734516
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(769557248)))
		lastAlarmTime: 	5734463
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(681582592))(a DropList...etc...
		lastStepTime: 	5734463
		lastStepMessage: 	nil
		lastCycleTime: 	5734516
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(769557248)))
		lastAlarmTime: 	5734463
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(681582592))(a DropList...etc...
		lastStepTime: 	5734463
		lastStepMessage: 	nil
		lastCycleTime: 	5734516
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(769557248)))
		lastAlarmTime: 	5734463
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteString(Object)>>doesNotUnderstand: #value:
ByteString(String)>>trimLeft:right:
ByteString(String)>>trimLeft:
AbsolutePath>>DoIt
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoScriptRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg
18 March 2020 8:49:24.991735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>iamgeStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	#(nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>iamgeStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#iamgeStreams->Imagenes>>#iamgeStreams #initiali...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAConstruccionDePoemas>>renderImagenes:withRenderer:
18 March 2020 8:49:47.558735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	renderImagenes: an Imagenes withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAConstruccionDePoemas>>renderImagenes:withRen...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderImagenes:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenterTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes>>renderOnComponent:withRenderer:
18 March 2020 8:56:17.561735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aMessage: 	renderOnComponent: a WAConstruccionDePoemas withRenderer: a WAHtmlCan...etc...
		exception: 	MessageNotUnderstood: Imagenes>>renderOnComponent:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(224x225x32) Form(299x169x32) Form(297x170x32))


[ imagenesAMostrar renderOnComponent: self withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderImagenes:withRenderer:
		startpc: 	53
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()



--- The full stack ---
Imagenes(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
[ imagenesAMostrar renderOnComponent: self withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderImagenes:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuatTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAConstruccionDePoemas>>renderForm:withRenderer:
18 March 2020 8:57:44.363735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderForm:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	renderForm: Form(224x225x32) withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAConstruccionDePoemas>>renderForm:withRendere...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


[ :form | waComponent renderForm: form withRenderer: html ] in Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
		form: 	Form(224x225x32)
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(224x225x32) Form(299x169x32) Form(297x170x32))


Array(SequenceableCollection)>>do:
	Receiver: an Array(Form(224x225x32) Form(299x169x32) Form(297x170x32))
	Arguments and temporary variables: 
		aBlock: 	[ :form | waComponent renderForm: form withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
an Array(Form(224x225x32) Form(299x169x32) Form(297x170x32))

Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(224x225x32) Form(299x169x32) Form(297x170x32))


[ imagenesAMostrar renderOnComponent: self withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderImagenes:withRenderer:
		startpc: 	53
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas



--- The full stack ---
WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderForm:withRenderer:
[ :form | waComponent renderForm: form withRenderer: html ] in Imagenes>>renderOnComponent:withRenderer:
Array(SequenceableCollection)>>do:
Imagenes>>renderOnComponent:withRenderer:
[ imagenesAMostrar renderOnComponent: self withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderImagenes:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>THERE_BE_DRAGONS_HERE
Break
18 March 2020 8:59:51.638735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unPoema: 	y poner en su lugar alguna frase tonta de amor
		html: 	a WAHtmlCanvas
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	y poner en su lugar alguna frase tonta de amor
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionTHERE_BE_DRAGONS_HERE
Break
18 March 2020 9:00:06.242735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unPoema: 	
		html: 	a WAHtmlCanvas
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
THERE_BE_DRAGONS_HERE
Break
18 March 2020 9:00:11.016735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unPoema: 	
		html: 	a WAHtmlCanvas
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
THERE_BE_DRAGONS_HERE
Break
18 March 2020 9:00:25.848735 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unPoema: 	
		html: 	a WAHtmlCanvas
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 6:05:20.926982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=-SyHaWIiNRmMfaoB","_k=sk3I2QE09ytIilhj","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id57,id57,-10,-511,211,546.96875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=-SyHaWIiNRmMfaoB","_k=sk3I2QE...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=-SyHaWIiNRm...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id57,id57,-10,-511,211,546.96875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id57,id57,-10,-511,211,546.96875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id57,id57,-10,-511,211,546.96875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C-10%2C-511%...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 247)
		nextKey: 	487


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C-10%2C-511%...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 247)
		nextKey: 	487


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 6:11:53.376982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGFmP2QPSxWq","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id59,id59,36,-365,257,671.640625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGF...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=cGGDJgECxOX...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id59,id59,36,-365,257,671.640625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id59,id59,36,-365,257,671.640625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id59,id59,36,-365,257,671.640625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 6:11:58.947982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGFmP2QPSxWq","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id59,id59,36,-365,257,671.640625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGF...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=cGGDJgECxOX...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id59,id59,36,-365,257,671.640625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id59,id59,36,-365,257,671.640625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id59,id59,36,-365,257,671.640625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C671.640625&_s=cGGDJgE...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id59%2Cid59%2C36%2C-365%2C257...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C671.640625&_s=cGGDJgE...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id59%2Cid59%2C36%2C-365%2C257...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 6:12:02.530982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGFmP2QPSxWq","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id59,id59,36,-365,257,671.640625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGF...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=cGGDJgECxOX...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id59,id59,36,-365,257,671.640625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id59,id59,36,-365,257,671.640625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id59,id59,36,-365,257,671.640625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C36%2C-365%2C257%2C671.640625&_s=cGGDJgE...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContexTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 6:12:05.244982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=-SyHaWIiNRmMfaoB","_k=sk3I2QE09ytIilhj","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id67,id67,-9,-662,248,434.25'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=-SyHaWIiNRmMfaoB","_k=sk3I2QE...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=-SyHaWIiNRm...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id67,id67,-9,-662,248,434.25')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id67,id67,-9,-662,248,434.25'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id67,id67,-9,-662,248,434.25')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 247)
		nextKey: 	487


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 247)
		nextKey: 	487


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248%2C434.25&_s=-SyHaWIiNRm...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248%2C434.25&_s=-SyHaWIiNRm...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id67%2Cid67%2C-9%2C-662%2C248...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id67%2Cid67%2C-9%2C-662%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	ReceiTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 6:18:19.875982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGFmP2QPSxWq","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id59,id59,-28,-420,193,616.640625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGF...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=cGGDJgECxOX...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id59,id59,-28,-420,193,616.640625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id59,id59,-28,-420,193,616.640625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id59,id59,-28,-420,193,616.640625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%2C193%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%2C193%2...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%2C193%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%2C193%2...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%2C193%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%2C193%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-28%2C-420%2C193%2C616.640625&_s=cGGDJg...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id59%2Cid59%2C-28%2C-420%2C19...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec nTHERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 6:26:40.235982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmallInteger>>decimalDigitLength
	Receiver: 1
	Arguments and temporary variables: 

	Receiver's instance variables: 
1

SmallInteger>>numberOfDigitsInBase:
	Receiver: 1
	Arguments and temporary variables: 
		b: 	10
	Receiver's instance variables: 
1

SmallInteger>>printOn:base:length:padded:
	Receiver: 1
	Arguments and temporary variables: 
		stream: 	a WriteStream
		base: 	10
		minimumLength: 	0
		padWithZeroes: 	false
		n: 	1
		numberOfDigits: 	nil
		totalLength: 	0
		divisor: 	nil
	Receiver's instance variables: 
1

SmallInteger>>printOn:base:
	Receiver: 1
	Arguments and temporary variables: 
		stream: 	a WriteStream
		base: 	10
	Receiver's instance variables: 
1

SmallInteger(Number)>>printOn:
	Receiver: 1
	Arguments and temporary variables: 
		aStream: 	a WriteStream
	Receiver's instance variables: 
1

SmallInteger(Number)>>storeOn:
	Receiver: 1
	Arguments and temporary variables: 
		aStream: 	a WriteStream
	Receiver's instance variables: 
1

SmallInteger(Integer)>>storeOn:
	Receiver: 1
	Arguments and temporary variables: 
		aStream: 	a WriteStream
	Receiver's instance variables: 
1

WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	1
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


OCClassScope(Object)>>storeOn:
	Receiver: WAImagenes class
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		i: 	1
	Receiver's instance variables: 
		outerScope: 	an OCEnvironmentScope
		node: 	nil
		children: 	an OrderedCollection(an OCInstanceScope)
		class: 	WAImagenes class


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	WAImagenes class
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream nextPut: $; ].
aStream nextPutAll: ' add: '.
aStream store: each ] in OrderedCollection(Collection)>>storeOn:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		noneYet: 	false
		each: 	WAImagenes class
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection>>do:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream ne...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection(Collection)>>storeOn:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		noneYet: 	false
		aStream: 	a WriteStream
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	an OrderedCollection(WAImagenes class)
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


OCEnvironmentScope(Object)>>storeOn:
	Receiver: an OCEnvironmentScope
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		i: 	3
	Receiver's instance variables: 
		outerScope: 	nil
		node: 	nil
		children: 	an OrderedCollection(WAImagenes class)
		environment: 	a SystemDictionary(lots of globals)


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	an OCEnvironmentScope
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


OCClassScope(Object)>>storeOn:
	Receiver: WAImagenes class
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		i: 	1
	Receiver's instance variables: 
		outerScope: 	an OCEnvironmentScope
		node: 	nil
		children: 	an OrderedCollection(an OCInstanceScope)
		class: 	WAImagenes class


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	WAImagenes class
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream nextPut: $; ].
aStream nextPutAll: ' add: '.
aStream store: each ] in OrderedCollection(Collection)>>storeOn:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		noneYet: 	false
		each: 	WAImagenes class
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection>>do:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream ne...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection(Collection)>>storeOn:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		noneYet: 	false
		aStream: 	a WriteStream
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	an OrderedCollection(WAImagenes class)
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


OCEnvironmentScope(Object)>>storeOn:
	Receiver: an OCEnvironmentScope
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		i: 	3
	Receiver's instance variables: 
		outerScope: 	nil
		node: 	nil
		children: 	an OrderedCollection(WAImagenes class)
		environment: 	a SystemDictionary(lots of globals)


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	an OCEnvironmentScope
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


OCClassScope(Object)>>storeOn:
	Receiver: WAImagenes class
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		i: 	1
	Receiver's instance variables: 
		outerScope: 	an OCEnvironmentScope
		node: 	nil
		children: 	an OrderedCollection(an OCInstanceScope)
		class: 	WAImagenes class


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	WAImagenes class
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream nextPut: $; ].
aStream nextPutAll: ' add: '.
aStream store: each ] in OrderedCollection(Collection)>>storeOn:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		noneYet: 	false
		each: 	WAImagenes class
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection>>do:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream ne...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection(Collection)>>storeOn:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		noneYet: 	false
		aStream: 	a WriteStream
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	an OrderedCollection(WAImagenes class)
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


OCEnvironmentScope(Object)>>storeOn:
	Receiver: an OCEnvironmentScope
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		i: 	3
	Receiver's instance variables: 
		outerScope: 	nil
		node: 	nil
		children: 	an OrderedCollection(WAImagenes class)
		environment: 	a SystemDictionary(lots of globals)


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	an OCEnvironmentScope
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


OCClassScope(Object)>>storeOn:
	Receiver: WAImagenes class
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		i: 	1
	Receiver's instance variables: 
		outerScope: 	an OCEnvironmentScope
		node: 	nil
		children: 	an OrderedCollection(an OCInstanceScope)
		class: 	WAImagenes class


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	WAImagenes class
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream nextPut: $; ].
aStream nextPutAll: ' add: '.
aStream store: each ] in OrderedCollection(Collection)>>storeOn:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		noneYet: 	false
		each: 	WAImagenes class
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection>>do:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream ne...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection(Collection)>>storeOn:
	Receiver: an OrderedCollection(WAImagenes class)
	Arguments and temporary variables: 
		noneYet: 	false
		aStream: 	a WriteStream
	Receiver's instance variables: 
		array: 	an Array(WAImagenes class nil nil nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	1


WriteStream>>store:
	Receiver: a WriteStream
	Arguments and temporary variables: 
		anObject: 	an OrderedCollection(WAImagenes class)
	Receiver's instance variables: 
		collection: 	'(RBAddParameterRefactoring addParameterToMethod: #initializeOwner:...etc...
		position: 	119750301
		readLimit: 	0
		writeLimit: 	123290940


OCEnvironmentScope(Object)>>storeOn:
	Receiver: an OCEnvironmentScope
	Arguments and temporary variables: 
		aStream: 	a WriteStream
		i: 	3
	Receiver's instance variables: 
		outerScope: 	nil
		node: 	nil
		children: 	an OrderedCollection(WAImagenes class)
		environment: 	a SystemDictionary(lots of globals)



--- The full stack ---
SmallInteger>>decimalDigitLength
SmallInteger>>numberOfDigitsInBase:
SmallInteger>>printOn:base:length:padded:
SmallInteger>>printOn:base:
SmallInteger(Number)>>printOn:
SmallInteger(Number)>>storeOn:
SmallInteger(Integer)>>storeOn:
WriteStream>>store:
OCClassScope(Object)>>storeOn:
WriteStream>>store:
[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream nextPut: $; ].
aStream nextPutAll: ' add: '.
aStream store: each ] in OrderedCollection(Collection)>>storeOn:
OrderedCollection>>do:
OrderedCollection(Collection)>>storeOn:
WriteStream>>store:
OCEnvironmentScope(Object)>>storeOn:
WriteStream>>store:
OCClassScope(Object)>>storeOn:
WriteStream>>store:
[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream nextPut: $; ].
aStream nextPutAll: ' add: '.
aStream store: each ] in OrderedCollection(Collection)>>storeOn:
OrderedCollection>>do:
OrderedCollection(Collection)>>storeOn:
WriteStream>>store:
OCEnvironmentScope(Object)>>storeOn:
WriteStream>>store:
OCClassScope(Object)>>storeOn:
WriteStream>>store:
[ :each | 
noneYet
	ifTrue: [ noneYet := false ]
	ifFalse: [ aStream nextPut: $; ].
aStream nextPutATHERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 6:26:40.323982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WeakArray class>>finalizationProcess
	Receiver: WeakArray
	Arguments and temporary variables: 
		throttle: 	a Semaphore()
		firstMourner: 	nil
	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


[ self finalizationProcess ] in WeakArray class>>restartFinalizationProcess
	Receiver: WeakArray
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ self finalizationProcess ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	WeakArray class>>restartFinalizationProcess
		startpc: 	127
		numArgs: 	0



--- The full stack ---
WeakArray class>>finalizationProcess
[ self finalizationProcess ] in WeakArray class>>restartFinalizationProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 6:26:40.341982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 6:38:10.954982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGFmP2QPSxWq","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id39,id39,91,-563,240,429.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=cGGDJgECxOXvVIFb","_k=C8m_DGF...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=cGGDJgECxOX...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id39,id39,91,-563,240,429.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id39,id39,91,-563,240,429.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id39,id39,91,-563,240,429.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C91%2C-563%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C91%2C-563%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 124)
		nextKey: 	241


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C91%2C-563%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActiTHERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848084520758_4082713546989764608_n.jpg
21 March 2020 6:38:57.669982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#imageStreams->Imagenes>>#imageStreams #initiali...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	THERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848084520758_4082713546989764608_n.jpg
21 March 2020 6:39:32.882982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#imageStreams->Imagenes>>#imageStreams #initiali...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynTHERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848084520758_4082713546989764608_n.jpg
21 March 2020 6:39:35.159982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#imageStreams->Imagenes>>#imageStreams #initiali...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestTHERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848084520758_4082713546989764608_n.jpg
21 March 2020 6:39:40.307982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#imageStreams->Imagenes>>#imageStreams #initiali...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848084520758_4082713546989764608_n.jpg
21 March 2020 6:39:42.573982 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_101578480...etc...


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/81676959_10157848...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#imageStreams->Imagenes>>#imageStreams #initiali...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: THERE_BE_DRAGONS_HERE

21 March 2020 6:42:10.313106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Process>>terminate
	Receiver: a Process in [ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Arguments and temporary variables: 
		tmp1: 	nil
		tmp2: 	nil
		tmp3: 	nil
		tmp4: 	nil
		tmp5: 	nil
		tmp6: 	nil
	Receiver's instance variables: 
		nextLink: 	nil
		suspendedContext: 	[ self value.
Processor terminateActive ] in BlockClosure>>ne...etc...
		priority: 	50
		myList: 	nil
		name: 	'WeakArray Finalization Process'
		env: 	a WeakArray(a DefaultExecutionEnvironment nil nil nil nil nil nil nil nil ...etc...
		effectiveProcess: 	nil
		terminating: 	true
		level: 	nil


WeakArray class>>restartFinalizationProcess
	Receiver: WeakArray
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


WeakArray class>>startUp:
	Receiver: WeakArray
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


ClassSessionHandler>>startup:
	Receiver: a ClassSessionHandler(WeakArray)
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		registeredClassName: 	#WeakArray


[ :arg2 | arg2 startup: arg1 ] in WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	a ClassSessionHandler(WeakArray)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-21T18:42:10.261106-03:00


[ arg2 value: arg3 ] in [ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
		arg3: 	a ClassSessionHandler(WeakArray)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-21T18:42:10.261106-03:00


BlockClosure>>on:do:
	Receiver: [ arg2 value: arg3 ]
	Arguments and temporary variables: 
		arg1: 	Exception
		arg2: 	[ :arg4 | self errorHandler handleError: arg4 ]
	Receiver's instance variables: 
		outerContext: 	[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | sel...etc...
		startpc: 	41
		numArgs: 	0


[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
		arg3: 	a ClassSessionHandler(WeakArray)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-21T18:42:10.261106-03:00


Array(SequenceableCollection)>>do:
	Receiver: an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...

WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-21T18:42:10.261106-03:00


WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-21T18:42:10.261106-03:00


WorkingSession>>start:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-21T18:42:10.261106-03:00


SessionManager>>launchSnapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	true
		tmp1: 	true
		tmp2: 	true
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)


[ tmp3 := self launchSnapshot: arg1 andQuit: arg2.
tmp1 signal ] in SessionManager>>snapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ tmp3 := self launchSnapshot: arg1 andQuit: arg2.
tmp1 signal ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	SessionManager>>snapshot:andQuit:
		startpc: 	79
		numArgs: 	0



--- The full stack ---
Process>>terminate
WeakArray class>>restartFinalizationProcess
WeakArray class>>startUp:
ClassSessionHandler>>startup:
[ :arg2 | arg2 startup: arg1 ] in WorkingSession>>runStartup:
[ arg2 value: arg3 ] in [ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
BlockClosure>>on:do:
[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
Array(SequenceableCollection)>>do:
WorkingSession>>runList:do:
WorkingSession>>runStartup:
WorkingSession>>start:
SessionManager>>launchSnapshot:andQuit:
[ tmp3 := self launchSnapshot: arg1 andQuit: arg2.
tmp1 signal ] in SessionManager>>snapshot:andQuit:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/5.jpeg
21 March 2020 6:42:35.023106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/5.jpeg'


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/5.jpeg'


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/5.jpeg'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	an Array(BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/imag...etc...
		index: 	7
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#imageStreams->Imagenes>>#imageStreams #initiali...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction THERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg
21 March 2020 7:21:20.893106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#imageStreams->Imagenes>>#imageStreams #initiali...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WAReqTHERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg
21 March 2020 7:22:07.174106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/1.jpg'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#imageStreams->Imagenes>>#imageStreams #initiali...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequeTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 7:23:03.112106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=fZ3WZY_Qj9Cs_09v","_k=s6tQrZxAN7eFokb8","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id23,id23,92,-479,169,608.328125'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=fZ3WZY_Qj9Cs_09v","_k=s6tQrZx...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=fZ3WZY_Qj9C...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id23,id23,92,-479,169,608.328125')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id23,id23,92,-479,169,608.328125'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id23,id23,92,-479,169,608.328125')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 257)
		nextKey: 	507


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 257)
		nextKey: 	507


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 7:23:34.846106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=fZ3WZY_Qj9Cs_09v","_k=s6tQrZxAN7eFokb8","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id23,id23,92,-479,169,608.328125'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=fZ3WZY_Qj9Cs_09v","_k=s6tQrZx...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=fZ3WZY_Qj9C...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id23,id23,92,-479,169,608.328125')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id23,id23,92,-479,169,608.328125'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id23,id23,92,-479,169,608.328125')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 257)
		nextKey: 	507


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 257)
		nextKey: 	507


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2C169%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2C169%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2C169%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2C169%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2C169%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2C169%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id23%2Cid23%2C92%2C-479%2C169%2C608.328125&_s=fZ3WZY_...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbaTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "convertImageWith:" is nil
21 March 2020 7:23:49.768106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: receiver of "convertImageWith:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	nil


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=9F9Fv79F54n_cR9t","_k=d2Fzr_S84YNTWfFP","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id85,id85,-95,-425,234,614.296875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=9F9Fv79F54n_cR9t","_k=d2Fzr_S...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=9F9Fv79F54n...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id85,id85,-95,-425,234,614.296875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id85,id85,-95,-425,234,614.296875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id85,id85,-95,-425,234,614.296875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 176)
		nextKey: 	345


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 176)
		nextKey: 	345


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%2C234%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%2C234%2...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%2C234%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%2C234%2...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%2C234%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-95%2C-425%2C234%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes>>convertImageWith:
21 March 2020 7:29:03.021106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: Imagenes>>convertImageWith:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=_hsWAw0A7a1hzlzj","_k=2KOnScIxbsTg9Kkw","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id29,id29,73,-548,186,521.546875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=_hsWAw0A7a1hzlzj","_k=2KOnScI...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=_hsWAw0A7a1...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id29,id29,73,-548,186,521.546875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id29,id29,73,-548,186,521.546875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id29,id29,73,-548,186,521.546875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 118)
		nextKey: 	229


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 118)
		nextKey: 	229


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C521.546875&_s=_hsWAw0...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id29%2Cid29%2C73%2C-548%2C186...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C521.546875&_s=_hsWAw0...etc...
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes>>convertImageWith:
21 March 2020 7:31:52.262106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: Imagenes>>convertImageWith:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=_hsWAw0A7a1hzlzj","_k=2KOnScIxbsTg9Kkw","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id29,id29,73,-548,186,521.546875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=_hsWAw0A7a1hzlzj","_k=2KOnScI...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=_hsWAw0A7a1...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id29,id29,73,-548,186,521.546875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id29,id29,73,-548,186,521.546875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id29,id29,73,-548,186,521.546875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 118)
		nextKey: 	229


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 118)
		nextKey: 	229


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id29%2Cid29%2C73%2C-548%2C186%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValuTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes>>convertImageWith:
21 March 2020 7:33:15.011106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: Imagenes>>convertImageWith:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(640x480x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=bQvszR9ZTnurUCRK","_k=_ACLIky0B7vS2Ir3","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id19,id19,79,-427,156,587.390625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=bQvszR9ZTnurUCRK","_k=_ACLIky...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=bQvszR9ZTnu...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id19,id19,79,-427,156,587.390625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id19,id19,79,-427,156,587.390625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id19,id19,79,-427,156,587.390625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 145)
		nextKey: 	283


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 145)
		nextKey: 	283


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C587.390625&_s=bQvszR9...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id19%2Cid19%2C79%2C-427%2C156...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C587.390625&_s=bQvszR9...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id19%2Cid19%2C79%2C-427%2C156...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes>>convertImageWith:
21 March 2020 7:38:46.888106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: nil
		exception: 	MessageNotUnderstood: Imagenes>>convertImageWith:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(640x480x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nil #helper->nil #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=bQvszR9ZTnurUCRK","_k=_ACLIky0B7vS2Ir3","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id19,id19,79,-427,156,587.390625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=bQvszR9ZTnurUCRK","_k=_ACLIky...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=bQvszR9ZTnu...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id19,id19,79,-427,156,587.390625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id19,id19,79,-427,156,587.390625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id19,id19,79,-427,156,587.390625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 145)
		nextKey: 	283


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 145)
		nextKey: 	283


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C79%2C-427%2C156%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPooTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes>>convertImageWith:
21 March 2020 7:45:38.982106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>doesNotUnderstand: #convertImageWith:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: sábanas
		exception: 	MessageNotUnderstood: Imagenes>>convertImageWith:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(480x640x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->sábanas #helper->sábanas #position->a G...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=VxVTeakMQ1-S8kXE","_k=0f_zZDEKwCxkI6XD","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id57,id57,8,-570,229,487.96875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=VxVTeakMQ1-S8kXE","_k=0f_zZDE...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=VxVTeakMQ1-...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id57,id57,8,-570,229,487.96875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id57,id57,8,-570,229,487.96875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id57,id57,8,-570,229,487.96875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 479)
		nextKey: 	485


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 479)
		nextKey: 	485


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C487.96875&_s=VxVTeakMQ...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C487.96875&_s=VxVTeakMQ...etc...
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
ShouldBeImplemented: #convertImageWith: should have been implemented in Imagenes
21 March 2020 7:47:04.560106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>shouldBeImplemented
	Receiver: an Imagenes
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(480x640x32) Form(640x480x32) Form(640x480...etc...


Imagenes>>convertImageWith:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aPalabraReal: 	sábanas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(480x640x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable: [ :event | model convertImageWith: (event at: #draggable) ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	nil
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->sábanas #helper->sábanas #position->a G...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=VxVTeakMQ1-S8kXE","_k=0f_zZDEKwCxkI6XD","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) ]
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id57,id57,8,-570,229,487.96875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=VxVTeakMQ1-S8kXE","_k=0f_zZDE...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=VxVTeakMQ1-...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id57,id57,8,-570,229,487.96875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id57,id57,8,-570,229,487.96875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id57,id57,8,-570,229,487.96875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 479)
		nextKey: 	485


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 479)
		nextKey: 	485


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id57%2Cid57%2C8%2C-570%2C229%2C487.96875&_s=VxVTeakMQ...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id57%2Cid57%2C8%2C-THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Imagenes>>convertImageWith:inForm:
21 March 2020 7:48:29.449106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes(Object)>>doesNotUnderstand: #convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		aMessage: 	convertImageWith: aprendimos inForm: Form(640x480x32)
		exception: 	MessageNotUnderstood: Imagenes>>convertImageWith:inForm:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->aprendimos #helper->aprendimos #positio...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1MGv0VXT10_","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: formD...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id39,id39,55,-458,204,534.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1M...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=nCr2pW6akki...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id39,id39,55,-458,204,534.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id39,id39,55,-458,204,534.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id39,id39,55,-458,204,534.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C534.140625&_s=nCr2pW6...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id39%2Cid39%2C55%2C-458%2C204...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>eTHERE_BE_DRAGONS_HERE
Instance of Verso did not understand #poema
21 March 2020 7:51:02.937106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #poema
	Receiver: aprendimos
	Arguments and temporary variables: 
		aMessage: 	poema
		exception: 	MessageNotUnderstood: Verso>>poema
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'aprendimos'
		palabras: 	an OrderedCollection( aprendimos)
		poema: 	no cambió el delirio 


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) nuevoVersoDeOtrosPoema...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1021274368)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1021274368)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(423105792)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1021274368)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@107)
		owner: 	a TransformWithLayoutMorph(795783936)
		submorphs: 	an Array(a RubCursor(775913216) a RubPrimarySelectionMorph(925561088...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (192493312) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(216217344)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(775913216)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(51516672))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(423105792)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4122698
		lastStepMessage: 	nil
		lastCycleTime: 	4132715
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775913216)))
		lastAlarmTime: 	4132656
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4122698
		lastStepMessage: 	nil
		lastCycleTime: 	4132715
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775913216)))
		lastAlarmTime: 	4132656
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4122698
		lastStepMessage: 	nil
		lastCycleTime: 	4132715
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(775913216)))
		lastAlarmTime: 	4132656
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Verso(Object)>>doesNotUnderstand: #poema
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
THERE_BE_DRAGONS_HERE
Instance of PalabraReal did not understand #poema
21 March 2020 7:51:46.544106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PalabraReal(Object)>>doesNotUnderstand: #poema
	Receiver: aprendimos
	Arguments and temporary variables: 
		aMessage: 	poema
		exception: 	MessageNotUnderstood: PalabraReal>>poema
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'aprendimos'
		palabraAnterior: 	
		palabraSiguiente: 	
		poema: 	no cambió el delirio 
		tipoDePalabra: 	nil


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) poema
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(70239488)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(70239488)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(874971904)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(70239488)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@126)
		owner: 	a TransformWithLayoutMorph(476574976)
		submorphs: 	an Array(a RubCursor(858935552) a RubPrimarySelectionMorph(425114368...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (64406784) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(755894016)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(858935552)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(153597696))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(874971904)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4122698
		lastStepMessage: 	nil
		lastCycleTime: 	4176307
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(858935552)))
		lastAlarmTime: 	4176239
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4122698
		lastStepMessage: 	nil
		lastCycleTime: 	4176307
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(858935552)))
		lastAlarmTime: 	4176239
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4122698
		lastStepMessage: 	nil
		lastCycleTime: 	4176307
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(858935552)))
		lastAlarmTime: 	4176239
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
PalabraReal(Object)>>doesNotUnderstand: #poema
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Poema did not understand #textoDePoema
21 March 2020 7:55:40.818106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poema(Object)>>doesNotUnderstand: #textoDePoema
	Receiver: no cambió el delirio 
	Arguments and temporary variables: 
		aMessage: 	textoDePoema
		exception: 	MessageNotUnderstood: Poema>>textoDePoema
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(no cambió el delirio  ni las formas del fracaso ap...etc...
		owner: 	a Poemas
		textoDePoema: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser...etc...
		autor: 	'Nadia Sol'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) poema textoDePoema
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(882429184)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(882429184)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(521695488)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(882429184)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@126)
		owner: 	a TransformWithLayoutMorph(468987136)
		submorphs: 	an Array(a RubCursor(754965760) a RubPrimarySelectionMorph(720255232...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (302931712) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1001580800)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(754965760)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(767060736))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(521695488)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4236146
		lastStepMessage: 	nil
		lastCycleTime: 	4410594
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(754965760)))
		lastAlarmTime: 	4410529
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4236146
		lastStepMessage: 	nil
		lastCycleTime: 	4410594
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(754965760)))
		lastAlarmTime: 	4410529
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4236146
		lastStepMessage: 	nil
		lastCycleTime: 	4410594
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(754965760)))
		lastAlarmTime: 	4410529
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Poema(Object)>>doesNotUnderstand: #textoDePoema
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of UndefinedObject are not indexable
21 March 2020 8:08:40.536106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>error:
	Receiver: nil
	Arguments and temporary variables: 
		aString: 	'Instances of UndefinedObject are not indexable'
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>errorNotIndexable
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(Object)>>size
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 4) size
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(368875264)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(368875264)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(464527616)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(368875264)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@164)
		owner: 	a TransformWithLayoutMorph(978776832)
		submorphs: 	an Array(a RubCursor(563116800) a RubPrimarySelectionMorph(412846848...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (961019648) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(578009344)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(563116800)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(636472064))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(464527616)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	5190245
		lastStepMessage: 	nil
		lastCycleTime: 	5190307
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(563116800)))
		lastAlarmTime: 	5190245
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	5190245
		lastStepMessage: 	nil
		lastCycleTime: 	5190307
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(563116800)))
		lastAlarmTime: 	5190245
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	5190245
		lastStepMessage: 	nil
		lastCycleTime: 	5190307
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(563116800)))
		lastAlarmTime: 	5190245
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>error:
UndefinedObject(Object)>>errorNotIndexable
UndefinedObject(Object)>>size
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 6857
21 March 2020 8:52:22.767106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>errorSubscriptBounds:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		index: 	6857
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

ByteString(Object)>>at:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		index: 	6857
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

ByteString>>at:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		index: 	6857
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

Bitmap(SequenceableCollection)>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	6857
		stop: 	6967
		replacement: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser ...etc...
		repStart: 	6857
		index: 	6857
		repOff: 	0
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	6857
		stop: 	6967
		replacement: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser ...etc...
		repStart: 	6857
	Receiver's instance variables: 
a Bitmap of length 307200

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 4)
		replaceFrom: (ThisCo...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(347568384)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(347568384)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(316900608)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(347568384)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@164)
		owner: 	a TransformWithLayoutMorph(426844928)
		submorphs: 	an Array(a RubCursor(570151680) a RubPrimarySelectionMorph(467785984...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (145162496) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(317343488)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(570151680)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(205183744))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(316900608)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	7812495
		lastStepMessage: 	nil
		lastCycleTime: 	7812535
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(570151680)))
		lastAlarmTime: 	7812495
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	7812495
		lastStepMessage: 	nil
		lastCycleTime: 	7812535
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(570151680)))
		lastAlarmTime: 	7812495
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	7812495
		lastStepMessage: 	nil
		lastCycleTime: 	7812535
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(570151680)))
		lastAlarmTime: 	7812495
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteString(Object)>>errorSubscriptBounds:
ByteString(Object)>>at:
ByteString>>at:
Bitmap(SequenceableCollection)>>replaceFrom:to:with:startingAt:
Bitmap>>replaceFrom:to:with:startingAt:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 6857
21 March 2020 8:54:44.703106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>errorSubscriptBounds:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		index: 	6857
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

ByteString(Object)>>at:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		index: 	6857
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

ByteString>>at:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		index: 	6857
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

Bitmap(SequenceableCollection)>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	6857
		stop: 	6967
		replacement: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser ...etc...
		repStart: 	6857
		index: 	6857
		repOff: 	0
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	6857
		stop: 	6967
		replacement: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser ...etc...
		repStart: 	6857
	Receiver's instance variables: 
a Bitmap of length 307200

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 4)
		replaceFrom: (ThisCo...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(347568384)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(347568384)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(316900608)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(347568384)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@164)
		owner: 	a TransformWithLayoutMorph(426844928)
		submorphs: 	an Array(a RubCursor(570151680) a RubPrimarySelectionMorph(467785984...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (145162496) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(317343488)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(570151680)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(948816128))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(316900608)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	7954438
		lastStepMessage: 	nil
		lastCycleTime: 	7954462
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(570151680)))
		lastAlarmTime: 	7954438
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	7954438
		lastStepMessage: 	nil
		lastCycleTime: 	7954462
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(570151680)))
		lastAlarmTime: 	7954438
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	7954438
		lastStepMessage: 	nil
		lastCycleTime: 	7954462
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(570151680)))
		lastAlarmTime: 	7954438
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteString(Object)>>errorSubscriptBounds:
ByteString(Object)>>at:
ByteString>>at:
Bitmap(SequenceableCollection)>>replaceFrom:to:with:startingAt:
Bitmap>>replaceFrom:to:with:startingAt:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
21 March 2020 8:55:43.711106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Bitmap(Object)>>error:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object'
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap(Object)>>errorImproperStore
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 

	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap(Object)>>at:put:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		index: 	6857
		value: 	$n
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap(SequenceableCollection)>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	6857
		stop: 	6967
		replacement: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser ...etc...
		repStart: 	1
		index: 	6857
		repOff: 	-6856
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	6857
		stop: 	6967
		replacement: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser ...etc...
		repStart: 	1
	Receiver's instance variables: 
a Bitmap of length 307200

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 4)
		replaceFrom: (ThisCo...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(347568384)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(347568384)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(316900608)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(347568384)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@164)
		owner: 	a TransformWithLayoutMorph(426844928)
		submorphs: 	an Array(a RubPrimarySelectionMorph(848367360) a RubCursor(570151680...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (145162496) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(317343488)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(570151680)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(453766912))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(316900608)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	8013413
		lastStepMessage: 	nil
		lastCycleTime: 	8013472
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(570151680)))
		lastAlarmTime: 	8013413
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	8013413
		lastStepMessage: 	nil
		lastCycleTime: 	8013472
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(570151680)))
		lastAlarmTime: 	8013413
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	8013413
		lastStepMessage: 	nil
		lastCycleTime: 	8013472
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(570151680)))
		lastAlarmTime: 	8013413
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Bitmap(Object)>>error:
Bitmap(Object)>>errorImproperStore
Bitmap(Object)>>at:put:
Bitmap(SequenceableCollection)>>replaceFrom:to:with:startingAt:
Bitmap>>replaceFrom:to:with:startingAt:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of Character are not indexable
21 March 2020 8:59:45.984106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Character(Object)>>error:
	Receiver: $n
	Arguments and temporary variables: 
		aString: 	'Instances of Character are not indexable'
	Receiver's instance variables: 
$n

Character(Object)>>errorNotIndexable
	Receiver: $n
	Arguments and temporary variables: 

	Receiver's instance variables: 
$n

Character(Object)>>size
	Receiver: $n
	Arguments and temporary variables: 

	Receiver's instance variables: 
$n

[ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. Given your INPUT, it executes: self select: [:each | INPUT ]'."
result isNil
	ifTrue: [ nil ]
	ifFalse: [ result size = 1
			ifTrue: [ result anyOne ]
			ifFalse: [ self species withAll: result ] ] ] in ByteString(SequenceableCollection)>>gtInspectorItemsIn:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		composite: 	a GLMCompositePresentation(id=697578240 title=nil pane=a GLMPane(142...etc...
		result: 	$n
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

BlockClosure>>glamourValueWithArgs:
	Receiver: [ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. ...etc...
	Arguments and temporary variables: 
		anArray: 	#($n)
	Receiver's instance variables: 
		outerContext: 	ByteString(SequenceableCollection)>>gtInspectorItemsIn:
		startpc: 	151
		numArgs: 	1


BlockClosure(ProtoObject)>>glamourValue:
	Receiver: [ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. ...etc...
	Arguments and temporary variables: 
		anObject: 	$n
		args: 	#($n)
	Receiver's instance variables: 
		outerContext: 	ByteString(SequenceableCollection)>>gtInspectorItemsIn:
		startpc: 	151
		numArgs: 	1


GLMFastTablePresentation(GLMPresentation)>>strongSelection:
	Receiver: a GLMFastTablePresentation(id=897752832 title='Items' pane=a GLMPane(14268160 1))
	Arguments and temporary variables: 
		anObject: 	$n
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(14268160 1)
		title: 	'Items'
		titleIcon: 	nil
		transformation: 	[ self ]
		actions: 	an OrderedCollection()
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	true
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	'no cambió el delirio 
ni las formas del fracaso
aprendim...etc...
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	true
		format: 	nil
		icon: 	[ nil ]
		searchBlock: 	nil
		filterBlock: 	nil
		amountToShowBlock: 	nil
		allowsMultipleSelection: 	true
		allowsDeselection: 	false
		tagsStyle: 	nil
		helpMessage: 	nil
		sortBlock: 	nil
		textBackgroundColor: 	nil
		dropOnItemBlock: 	nil
		allowDropOnItemBlock: 	nil
		allowItemDragBlock: 	nil
		transformDraggedItemBlock: 	nil
		allowsRecursiveSearch: 	nil
		columns: 	an OrderedCollection(a GLMTableColumn a GLMTableColumn)
		children: 	[ #() ]
		rootsExpanded: 	nil
		shouldShowHeader: 	true
		parameters: 	a Dictionary('withRowIndex'->true )


[ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ] in GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnnouncementForDataSource
	Receiver: a GLMMorphicFastTableRenderer
	Arguments and temporary variables: 
		ann: 	a GLMTreeMorphStrongSelectionChanged
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tableModel: 	a GLMFastTableDataSource
		tableMorph: 	a FTTableMorph(913651456)


BlockClosure>>cull:
	Receiver: [ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ]
	Arguments and temporary variables: 
		anArg: 	a GLMTreeMorphStrongSelectionChanged
	Receiver's instance variables: 
		outerContext: 	GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnno...etc...
		startpc: 	119
		numArgs: 	1


BlockClosure>>cull:cull:
	Receiver: [ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ]
	Arguments and temporary variables: 
		firstArg: 	a GLMTreeMorphStrongSelectionChanged
		secondArg: 	a GLMAnnouncer
	Receiver's instance variables: 
		outerContext: 	GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnno...etc...
		startpc: 	119
		numArgs: 	1


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a GLMTreeMorphStrongSelectionChanged
	Receiver's instance variables: 
		announcer: 	a GLMAnnouncer
		announcementClass: 	GLMTreeMorphStrongSelectionChanged
		subscriber: 	a GLMMorphicFastTableRenderer
		action: 	[ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSe...etc...


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		arg1: 	UnhandledError
		arg2: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx := thisC...etc...
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


[ Processor terminateActive ] in [ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx := thisContext.
thisCtx := onDoCtx home.

"find the context on stack for which this method's is sender"
[ onDoCtx sender == thisCtx ]
	whileFalse: [ onDoCtx := onDoCtx sender.
		onDoCtx
			ifNil: [ "Can't find our home context. seems like we're already forked
				and handling another exception in new thread. In this case, just pass it through handler." ^ handlerAction cull: ex ] ].
bottom := [ Processor terminateActive ] asContext.
onDoCtx privSender: bottom.
handler := [ handlerAction cull: ex ] asContext.
handler privSender: thisContext sender.
(Process forContext: handler priority: Processor activePriority)
	resume.

"cut the stack of current process"
thisContext privSender: thisCtx.
nil ] in BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0



--- The full stack ---
Character(Object)>>error:
Character(Object)>>errorNotIndexable
Character(Object)>>size
[ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. Given your INPUT, it executes: self select: [:each | INPUT ]'."
result isNil
	ifTrue: [ nil ]
	ifFalse: [ result size = 1
			ifTrue: [ result anyOne ]
			ifFalse: [ self species withAll: result ] ] ] in ByteString(SequenceableCollection)>>gtInspectorItemsIn:
BlockClosure>>glamourValueWithArgs:
BlockClosure(ProtoObject)>>glamourValue:
GLMFastTablePresentation(GLMPresentation)>>strongSelection:
[ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ] in GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnnouncementForDataSource
BlockClosure>>cull:
BlockClosure>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
[ Processor terminateActive ] in [ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx := thisContext.
thisCtx := onDoCtx home.

"find the context on stack for which this method's is sender"
[ onDoCtx sender == thisCtx ]
	whileFalse: [ onDoCtx := onDoCtx sender.
		onDoCtx
			ifNil: [ "Can't find our home context. seems like we're already forked
				and handling another exception in new thread. In this case, just pass it through handler." ^ handlerAction cull: ex ] ].
bottom := [ Processor terminateActive ] asContext.
onDoCtx privSender: bottom.
handler := [ handlerAction cull: ex ] asContext.
handler privSender: thisContext sender.
(Process forContext: handler priority: Processor activePriority)
	resume.

"cut the stack of current process"
thisContext privSender: thisCtx.
nil ] in BlockClosure>>on:fork:
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Instances of Character are not indexable
21 March 2020 8:59:50.468106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Character(Object)>>error:
	Receiver: $n
	Arguments and temporary variables: 
		aString: 	'Instances of Character are not indexable'
	Receiver's instance variables: 
$n

Character(Object)>>errorNotIndexable
	Receiver: $n
	Arguments and temporary variables: 

	Receiver's instance variables: 
$n

Character(Object)>>size
	Receiver: $n
	Arguments and temporary variables: 

	Receiver's instance variables: 
$n

[ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. Given your INPUT, it executes: self select: [:each | INPUT ]'."
result isNil
	ifTrue: [ nil ]
	ifFalse: [ result size = 1
			ifTrue: [ result anyOne ]
			ifFalse: [ self species withAll: result ] ] ] in ByteString(SequenceableCollection)>>gtInspectorItemsIn:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		composite: 	a GLMCompositePresentation(id=697578240 title=nil pane=a GLMPane(142...etc...
		result: 	$n
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

BlockClosure>>glamourValueWithArgs:
	Receiver: [ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. ...etc...
	Arguments and temporary variables: 
		anArray: 	#($n)
	Receiver's instance variables: 
		outerContext: 	ByteString(SequenceableCollection)>>gtInspectorItemsIn:
		startpc: 	151
		numArgs: 	1


BlockClosure(ProtoObject)>>glamourValue:
	Receiver: [ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. ...etc...
	Arguments and temporary variables: 
		anObject: 	$n
		args: 	#($n)
	Receiver's instance variables: 
		outerContext: 	ByteString(SequenceableCollection)>>gtInspectorItemsIn:
		startpc: 	151
		numArgs: 	1


GLMFastTablePresentation(GLMPresentation)>>strongSelection:
	Receiver: a GLMFastTablePresentation(id=897752832 title='Items' pane=a GLMPane(14268160 1))
	Arguments and temporary variables: 
		anObject: 	$n
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(14268160 1)
		title: 	'Items'
		titleIcon: 	nil
		transformation: 	[ self ]
		actions: 	an OrderedCollection()
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	true
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	'no cambió el delirio 
ni las formas del fracaso
aprendim...etc...
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	true
		format: 	nil
		icon: 	[ nil ]
		searchBlock: 	nil
		filterBlock: 	nil
		amountToShowBlock: 	nil
		allowsMultipleSelection: 	true
		allowsDeselection: 	false
		tagsStyle: 	nil
		helpMessage: 	nil
		sortBlock: 	nil
		textBackgroundColor: 	nil
		dropOnItemBlock: 	nil
		allowDropOnItemBlock: 	nil
		allowItemDragBlock: 	nil
		transformDraggedItemBlock: 	nil
		allowsRecursiveSearch: 	nil
		columns: 	an OrderedCollection(a GLMTableColumn a GLMTableColumn)
		children: 	[ #() ]
		rootsExpanded: 	nil
		shouldShowHeader: 	true
		parameters: 	a Dictionary('withRowIndex'->true )


[ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ] in GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnnouncementForDataSource
	Receiver: a GLMMorphicFastTableRenderer
	Arguments and temporary variables: 
		ann: 	a GLMTreeMorphStrongSelectionChanged
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tableModel: 	a GLMFastTableDataSource
		tableMorph: 	a FTTableMorph(913651456)


BlockClosure>>cull:
	Receiver: [ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ]
	Arguments and temporary variables: 
		anArg: 	a GLMTreeMorphStrongSelectionChanged
	Receiver's instance variables: 
		outerContext: 	GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnno...etc...
		startpc: 	119
		numArgs: 	1


BlockClosure>>cull:cull:
	Receiver: [ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ]
	Arguments and temporary variables: 
		firstArg: 	a GLMTreeMorphStrongSelectionChanged
		secondArg: 	a GLMAnnouncer
	Receiver's instance variables: 
		outerContext: 	GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnno...etc...
		startpc: 	119
		numArgs: 	1


[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
	Receiver: an AnnouncementSubscription
	Arguments and temporary variables: 
		anAnnouncement: 	a GLMTreeMorphStrongSelectionChanged
	Receiver's instance variables: 
		announcer: 	a GLMAnnouncer
		announcementClass: 	GLMTreeMorphStrongSelectionChanged
		subscriber: 	a GLMMorphicFastTableRenderer
		action: 	[ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSe...etc...


BlockClosure>>on:do:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
		arg1: 	UnhandledError
		arg2: 	[ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx := thisC...etc...
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0


[ Processor terminateActive ] in [ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx := thisContext.
thisCtx := onDoCtx home.

"find the context on stack for which this method's is sender"
[ onDoCtx sender == thisCtx ]
	whileFalse: [ onDoCtx := onDoCtx sender.
		onDoCtx
			ifNil: [ "Can't find our home context. seems like we're already forked
				and handling another exception in new thread. In this case, just pass it through handler." ^ handlerAction cull: ex ] ].
bottom := [ Processor terminateActive ] asContext.
onDoCtx privSender: bottom.
handler := [ handlerAction cull: ex ] asContext.
handler privSender: thisContext sender.
(Process forContext: handler priority: Processor activePriority)
	resume.

"cut the stack of current process"
thisContext privSender: thisCtx.
nil ] in BlockClosure>>on:fork:
	Receiver: [ action cull: anAnnouncement cull: announcer ]
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		outerContext: 	AnnouncementSubscription>>deliver:
		startpc: 	47
		numArgs: 	0



--- The full stack ---
Character(Object)>>error:
Character(Object)>>errorNotIndexable
Character(Object)>>size
[ :result | 
"withSmalltalkSearch;
		showOnly: 50;
		helpMessage: 'Quick selection field. Given your INPUT, it executes: self select: [:each | INPUT ]'."
result isNil
	ifTrue: [ nil ]
	ifFalse: [ result size = 1
			ifTrue: [ result anyOne ]
			ifFalse: [ self species withAll: result ] ] ] in ByteString(SequenceableCollection)>>gtInspectorItemsIn:
BlockClosure>>glamourValueWithArgs:
BlockClosure(ProtoObject)>>glamourValue:
GLMFastTablePresentation(GLMPresentation)>>strongSelection:
[ :ann | 
tableModel glamourPresentation
	strongSelection: ann strongSelectionValue ] in GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeAnnouncementForDataSource
BlockClosure>>cull:
BlockClosure>>cull:cull:
[ action cull: anAnnouncement cull: announcer ] in AnnouncementSubscription>>deliver:
BlockClosure>>on:do:
[ Processor terminateActive ] in [ :ex | 
| copy onDoCtx process handler bottom thisCtx |
onDoCtx := thisContext.
thisCtx := onDoCtx home.

"find the context on stack for which this method's is sender"
[ onDoCtx sender == thisCtx ]
	whileFalse: [ onDoCtx := onDoCtx sender.
		onDoCtx
			ifNil: [ "Can't find our home context. seems like we're already forked
				and handling another exception in new thread. In this case, just pass it through handler." ^ handlerAction cull: ex ] ].
bottom := [ Processor terminateActive ] asContext.
onDoCtx privSender: bottom.
handler := [ handlerAction cull: ex ] asContext.
handler privSender: thisContext sender.
(Process forContext: handler priority: Processor activePriority)
	resume.

"cut the stack of current process"
thisContext privSender: thisCtx.
nil ] in BlockClosure>>on:fork:
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
21 March 2020 9:00:29.935106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>error:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object'
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(Object)>>errorImproperStore
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString>>at:put:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		index: 	1
		aCharacter: 	110
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(SequenceableCollection)>>collect:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :char | char asInteger ]
		newCollection: 	'                                                               ...etc...
		index: 	1
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	aprendimos
		unForm: 	Form(640x480x32)
		poemaConPalabra: 	nil
		bitmap: 	nil
		offset: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->aprendimos #helper->aprendimos #positio...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1MGv0VXT10_","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: formD...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id39,id39,55,-458,204,534.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1M...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=nCr2pW6akki...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id39,id39,55,-458,204,534.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id39,id39,55,-458,204,534.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id39,id39,55,-458,204,534.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: THERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
21 March 2020 9:00:45.358106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>error:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object'
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(Object)>>errorImproperStore
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString>>at:put:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		index: 	1
		aCharacter: 	110
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(SequenceableCollection)>>collect:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :char | char asInteger ]
		newCollection: 	'                                                               ...etc...
		index: 	1
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) poema textoDePoema
		c...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(836664064)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(836664064)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(189275392)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(836664064)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@164)
		owner: 	a TransformWithLayoutMorph(93761280)
		submorphs: 	an Array(a RubCursor(556147456) a RubPrimarySelectionMorph(238856960...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (625090816) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(667114752)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(556147456)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(415103232))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(189275392)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	8315080
		lastStepMessage: 	nil
		lastCycleTime: 	8315110
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(556147456)))
		lastAlarmTime: 	8315080
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	8315080
		lastStepMessage: 	nil
		lastCycleTime: 	8315110
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(556147456)))
		lastAlarmTime: 	8315080
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	8315080
		lastStepMessage: 	nil
		lastCycleTime: 	8315110
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(556147456)))
		lastAlarmTime: 	8315080
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteString(Object)>>error:
ByteString(Object)>>errorImproperStore
ByteString>>at:put:
ByteString(SequenceableCollection)>>collect:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
21 March 2020 9:01:30.744106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>error:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object'
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(Object)>>errorImproperStore
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString>>at:put:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		index: 	1
		aCharacter: 	110
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(SequenceableCollection)>>collect:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :char | char asciiValue ]
		newCollection: 	'                                                               ...etc...
		index: 	1
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) poema textoDePoema
		c...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(72939776)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(72939776)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(76940544)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(72939776)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@164)
		owner: 	a TransformWithLayoutMorph(759931648)
		submorphs: 	an Array(a RubCursor(309523200) a RubPrimarySelectionMorph(100416998...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (45757696) [other:  (announcer -> an Announcer) (km...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(15976192)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(309523200)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(250988288))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(76940544)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	8360441
		lastStepMessage: 	nil
		lastCycleTime: 	8360495
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(309523200)))
		lastAlarmTime: 	8360441
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	8360441
		lastStepMessage: 	nil
		lastCycleTime: 	8360495
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(309523200)))
		lastAlarmTime: 	8360441
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(573656320) named: In...etc...
		lastStepTime: 	8360441
		lastStepMessage: 	nil
		lastCycleTime: 	8360495
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(309523200)))
		lastAlarmTime: 	8360441
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteString(Object)>>error:
ByteString(Object)>>errorImproperStore
ByteString>>at:put:
ByteString(SequenceableCollection)>>collect:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
21 March 2020 9:01:46.454106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>error:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object'
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(Object)>>errorImproperStore
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString>>at:put:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		index: 	1
		aCharacter: 	110
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(SequenceableCollection)>>collect:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :char | char asciiValue ]
		newCollection: 	'                                                               ...etc...
		index: 	1
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	formas
		unForm: 	Form(640x480x32)
		poemaConPalabra: 	nil
		bitmap: 	nil
		offset: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->formas #helper->formas #position->a GRS...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1MGv0VXT10_","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: formD...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id31,id31,85,-502,198,531.953125'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1M...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=nCr2pW6akki...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id31,id31,85,-502,198,531.953125')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id31,id31,85,-502,198,531.953125'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id31,id31,85,-502,198,531.953125')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2C198%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2C198%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2C198%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2C198%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2C198%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2C198%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2C198%2C531.953125&_s=nCr2pW6...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id31%2Cid31%2C85%2C-502%2C198...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2C198%2C531.953125&_s=nCr2pW6...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id31%2Cid31%2C85%2C-502%2C198...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id31%2Cid31%2C85%2C-502%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
21 March 2020 9:01:48.364106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>error:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object'
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(Object)>>errorImproperStore
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString>>at:put:
	Receiver: '                                                                                         ...etc...
	Arguments and temporary variables: 
		index: 	1
		aCharacter: 	110
	Receiver's instance variables: 
'                                                                                         ...etc...

ByteString(SequenceableCollection)>>collect:
	Receiver: 'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :char | char asciiValue ]
		newCollection: 	'                                                               ...etc...
		index: 	1
	Receiver's instance variables: 
'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ser complices y presas 
de u...etc...

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	aprendimos
		unForm: 	Form(640x480x32)
		poemaConPalabra: 	nil
		bitmap: 	nil
		offset: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->aprendimos #helper->aprendimos #positio...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1MGv0VXT10_","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: formD...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id39,id39,55,-458,204,534.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1M...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=nCr2pW6akki...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id39,id39,55,-458,204,534.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id39,id39,55,-458,204,534.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id39,id39,55,-458,204,534.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C534.140625&_s=nCr2pW6...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id39%2Cid39%2C55%2C-458%2C204...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2C204%2C534.140625&_s=nCr2pW6...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id39%2Cid39%2C55%2C-458%2C204...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C55%2C-458%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
21 March 2020 9:03:23.916106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>error:
	Receiver: '    '
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object'
	Receiver's instance variables: 
'    '

ByteString(Object)>>errorImproperStore
	Receiver: '    '
	Arguments and temporary variables: 

	Receiver's instance variables: 
'    '

ByteString>>at:put:
	Receiver: '    '
	Arguments and temporary variables: 
		index: 	1
		aCharacter: 	112
	Receiver's instance variables: 
'    '

ByteString(SequenceableCollection)>>collect:
	Receiver: 'pepe'
	Arguments and temporary variables: 
		aBlock: 	[ :char | char asciiValue ]
		newCollection: 	'    '
		index: 	1
	Receiver's instance variables: 
'pepe'

Imagenes class>>DoIt
	Receiver: Imagenes
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#convertImageWith:inForm:->Imagenes>>#convertIma...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoIt
	^ 'pepe' collect: [ :char | char asciiValue ]
		source: 	a ReadStream
		context: 	nil
		receiver: 	Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClyTextEditor(RubSmalltalkEditor)>>evaluate:andDo:
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		aBlock: 	[ :result | result inspect ]
		result: 	nil
		rcvr: 	Imagenes
		ctxt: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(63725312)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


ClyTextEditor(RubSmalltalkEditor)>>evaluateSelectionAndDo:
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(63725312)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


ClyTextEditor(RubSmalltalkEditor)>>inspectIt
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 

	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(63725312)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


ClyTextEditor(RubSmalltalkEditor)>>inspectIt:
	Receiver: a ClyTextEditor
	Arguments and temporary variables: 
		aKeyboardEvent: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(63725312)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ :target | target editor inspectIt: nil ] in RubSmalltalkEditor class>>buildShortcutsOn:
	Receiver: RubSmalltalkEditor
	Arguments and temporary variables: 
		aBuilder: 	a PragmaMenuAndShortcutRegistration
		target: 	a RubEditingArea(63725312)
	Receiver's instance variables: 
		superclass: 	RubTextEditor
		methodDict: 	a MethodDictionary(#atCompletionPosition->RubSmalltalkEditor>>#atCo...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ClyTextEditor}
		name: 	#RubSmalltalkEditor
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Rubric-Editing-Code'


BlockClosure>>cull:
	Receiver: [ :target | target editor inspectIt: nil ]
	Arguments and temporary variables: 
		anArg: 	a RubEditingArea(63725312)
	Receiver's instance variables: 
		outerContext: 	RubSmalltalkEditor class>>buildShortcutsOn:
		startpc: 	325
		numArgs: 	1


BlockClosure>>cull:cull:
	Receiver: [ :target | target editor inspectIt: nil ]
	Arguments and temporary variables: 
		firstArg: 	a RubEditingArea(63725312)
		secondArg: 	a RubEditingArea(63725312)
	Receiver's instance variables: 
		outerContext: 	RubSmalltalkEditor class>>buildShortcutsOn:
		startpc: 	325
		numArgs: 	1


BlockClosure>>cull:cull:cull:
	Receiver: [ :target | target editor inspectIt: nil ]
	Arguments and temporary variables: 
		firstArg: 	a RubEditingArea(63725312)
		secondArg: 	a RubEditingArea(63725312)
		thirdArg: 	[keystroke '<Ctrl-i>']
	Receiver's instance variables: 
		outerContext: 	RubSmalltalkEditor class>>buildShortcutsOn:
		startpc: 	325
		numArgs: 	1


KMCategoryBinding>>completeMatch:buffer:
	Receiver: aKMCategoryTarget(#RubSmalltalkEditor)
	Arguments and temporary variables: 
		aKeymap: 	#inspectIt on Meta + i do [ :target | target editor inspectIt: nil ]

		aBuffer: 	an OrderedCollection([keystroke '<Ctrl-i>'])
	Receiver's instance variables: 
		target: 	a RubEditingArea(63725312)
		category: 	a KMCategory
		morph: 	a RubEditingArea(63725312)


[ :l | l completeMatch: self buffer: aBuffer ] in KMKeymap>>notifyCompleteMatchTo:buffer:
	Receiver: #inspectIt on Meta + i do [ :target | target editor inspectIt: nil ]

	Arguments and temporary variables: 
		aListener: 	an Array(aKMCategoryTarget(#RubSmalltalkEditor) a CmdKMDispatcher)
		aBuffer: 	an OrderedCollection([keystroke '<Ctrl-i>'])
		listeners: 	an Array(aKMCategoryTarget(#RubSmalltalkEditor) a CmdKMDispatcher)
		l: 	aKMCategoryTarget(#RubSmalltalkEditor)
	Receiver's instance variables: 
		action: 	[ :target | target editor inspectIt: nil ]
		name: 	#inspectIt
		shortcut: 	Meta + i
		defaultShortcut: 	Meta + i
		description: 	'Inspect it'


Array(SequenceableCollection)>>do:
	Receiver: an Array(aKMCategoryTarget(#RubSmalltalkEditor) a CmdKMDispatcher)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(aKMCategoryTarget(#RubSmalltalkEditor) a CmdKMDispatcher)

KMKeymap>>notifyCompleteMatchTo:buffer:
	Receiver: #inspectIt on Meta + i do [ :target | target editor inspectIt: nil ]

	Arguments and temporary variables: 
		aListener: 	an Array(aKMCategoryTarget(#RubSmalltalkEditor) a CmdKMDispatcher)
		aBuffer: 	an OrderedCollection([keystroke '<Ctrl-i>'])
		listeners: 	an Array(aKMCategoryTarget(#RubSmalltalkEditor) a CmdKMDispatcher)
	Receiver's instance variables: 
		action: 	[ :target | target editor inspectIt: nil ]
		name: 	#inspectIt
		shortcut: 	Meta + i
		defaultShortcut: 	Meta + i
		description: 	'Inspect it'


KMKeymap>>onMatchWith:notify:andDo:
	Receiver: #inspectIt on Meta + i do [ :target | target editor inspectIt: nil ]

	Arguments and temporary variables: 
		anEventBuffer: 	an OrderedCollection([keystroke '<Ctrl-i>'])
		aMatchListener: 	an Array(aKMCategoryTarget(#RubSmalltalkEditor) a CmdKMDispatch...etc...
		anAction: 	[ ^ self ]
	Receiver's instance variables: 
		action: 	[ :target | target editor inspectIt: nil ]
		name: 	#inspectIt
		shortcut: 	Meta + i
		defaultShortcut: 	Meta + i
		description: 	'Inspect it'


[ :entry | entry onMatchWith: anEventBuffer notify: aMatchListener andDo: aBlock ] in KMCategory>>onMatchWith:notify:andDo:
	Receiver: a KMCategory
	Arguments and temporary variables: 
		anEventBuffer: 	an OrderedCollection([keystroke '<Ctrl-i>'])
		aMatchListener: 	an Array(aKMCategoryTarget(#RubSmalltalkEditor) a CmdKMDispatch...etc...
		aBlock: 	[ ^ self ]
		entry: 	#inspectIt on Meta + i do [ :target | target editor inspectIt: nil ]

	Receiver's instance variables: 
		name: 	#RubSmalltalkEditor
		platforms: 	a Dictionary(#Windows->a KMStorage #all->a KMStorage )


Set>>do:
	Receiver: a Set(#referencesToIt on Meta + Shift + n do [ :target | target editor referencesToIt: nil...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :entry | entry onMatchWith: anEventBuffer notify: aMatchListener andD...etc...
		index: 	6
		each: 	#inspectIt on Meta + i do [ :target | target editor inspectIt: nil ]

	Receiver's instance variables: 
		tally: 	17
		array: 	an Array(#referencesToIt on Meta + Shift + n do [ :target | target edito...etc...


KMCategory>>onMatchWith:notify:andDo:
	Receiver: a KMCategory
	Arguments and temporary variables: 
		anEventBuffer: 	an OrderedCollection([keystroke '<Ctrl-i>'])
		aMatchListener: 	an Array(aKMCategoryTarget(#RubSmalltalkEditor) a CmdKMDispatch...etc...
		aBlock: 	[ ^ self ]
	Receiver's instance variables: 
		name: 	#RubSmalltalkEditor
		platforms: 	a Dictionary(#Windows->a KMStorage #all->a KMStorage )


KMCategoryBinding>>verifyMatchWith:notifying:thenDoing:
	Receiver: aKMCategoryTarget(#RubSmalltalkEditor)
	Arguments and temporary variables: 
		anEventBuffer: 	an OrderedCollection([keystroke '<Ctrl-i>'])
		aListener: 	a CmdKMDispatcher
		anAction: 	[ ^ self ]
	Receiver's instance variables: 
		target: 	a RubEditingArea(63725312)
		category: 	a KMCategory
		morph: 	a RubEditingArea(63725312)


[ :aTarget | 
"nice hack to stop in the first listener"
aTarget
	verifyMatchWith: anEventBuffer
	notifying: self
	thenDoing: [ ^ self ] ] in CmdKMDispatcher(KMDispatcher)>>dispatch:
	Receiver: a CmdKMDispatcher
	Arguments and temporary variables: 
		anEventBuffer: 	an OrderedCollection([keystroke '<Ctrl-i>'])
		aTarget: 	aKMCategoryTarget(#RubSmalltalkEditor)
	Receiver's instance variables: 
		target: 	a KMTarget
		currentEvent: 	nil
		targets: 	a Set(aKMCategoryTarget(#RubSmalltalkEditor) aKMCategoryTarget(#MorphF...etc...
		morph: 	a RubEditingArea(63725312)
		directKeymaps: 	a KMCategory
		commandProvider: 	a ClyMethodCodeEditorToolMorph(413330176)


OrderedCollection>>do:
	Receiver: an OrderedCollection(aKMCategoryTarget(nil) aKMCategoryTarget(#RubSmalltalkEditor) aKMCate...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :aTarget | 
"nice hack to stop in the first listener"
aTarget
	verify...etc...
		index: 	2
	Receiver's instance variables: 
		array: 	an Array(aKMCategoryTarget(nil) aKMCategoryTarget(#RubSmalltalkEditor) a...etc...
		firstIndex: 	1
		lastIndex: 	4


CmdKMDispatcher(KMDispatcher)>>dispatch:
	Receiver: a CmdKMDispatcher
	Arguments and temporary variables: 
		anEventBuffer: 	an OrderedCollection([keystroke '<Ctrl-i>'])
	Receiver's instance variables: 
		target: 	a KMTarget
		currentEvent: 	nil
		targets: 	a Set(aKMCategoryTarget(#RubSmalltalkEditor) aKMCategoryTarget(#MorphF...etc...
		morph: 	a RubEditingArea(63725312)
		directKeymaps: 	a KMCategory
		commandProvider: 	a ClyMethodCodeEditorToolMorph(413330176)


CmdKMDispatcher>>dispatch:
	Receiver: a CmdKMDispatcher
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 111
21 March 2020 9:04:11.745106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

OrderedCollection(Object)>>errorSubscriptBounds:
	Receiver: an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 108 32 100 101 108 105 114 105...etc...
	Arguments and temporary variables: 
		index: 	111
	Receiver's instance variables: 
		array: 	#(110 111 32 99 97 109 98 105 243 32 101 108 32 100 101 108 105 114 105 ...etc...
		firstIndex: 	1
		lastIndex: 	110


OrderedCollection>>at:
	Receiver: an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 108 32 100 101 108 105 114 105...etc...
	Arguments and temporary variables: 
		anInteger: 	111
		index: 	111
	Receiver's instance variables: 
		array: 	#(110 111 32 99 97 109 98 105 243 32 101 108 32 100 101 108 105 114 105 ...etc...
		firstIndex: 	1
		lastIndex: 	110


Bitmap(SequenceableCollection)>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	251984
		stop: 	252094
		replacement: 	an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 108 32...etc...
		repStart: 	1
		index: 	252094
		repOff: 	-251983
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	251984
		stop: 	252094
		replacement: 	an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 108 32...etc...
		repStart: 	1
	Receiver's instance variables: 
a Bitmap of length 307200

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	mundo
		unForm: 	Form(640x480x32)
		poemaConPalabra: 	an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 10...etc...
		bitmap: 	a Bitmap of length 307200
		offset: 	251984
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->mundo #helper->mundo #position->a GRSma...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1MGv0VXT10_","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: formD...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id59,id59,-15,-545,206,491.640625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1M...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=nCr2pW6akki...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id59,id59,-15,-545,206,491.640625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id59,id59,-15,-545,206,491.640625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id59,id59,-15,-545,206,491.640625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-15%2C-545%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-15%2C-545%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id59%2Cid59%2C-15%2C-545%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionTHERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 0
21 March 2020 9:06:01.369106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

OrderedCollection(Object)>>errorSubscriptBounds:
	Receiver: an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 108 32 100 101 108 105 114 105...etc...
	Arguments and temporary variables: 
		index: 	0
	Receiver's instance variables: 
		array: 	#(110 111 32 99 97 109 98 105 243 32 101 108 32 100 101 108 105 114 105 ...etc...
		firstIndex: 	1
		lastIndex: 	110


OrderedCollection>>at:
	Receiver: an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 108 32 100 101 108 105 114 105...etc...
	Arguments and temporary variables: 
		anInteger: 	0
		index: 	nil
	Receiver's instance variables: 
		array: 	#(110 111 32 99 97 109 98 105 243 32 101 108 32 100 101 108 105 114 105 ...etc...
		firstIndex: 	1
		lastIndex: 	110


Bitmap(SequenceableCollection)>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	38601
		stop: 	38711
		replacement: 	an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 108 32...etc...
		repStart: 	0
		index: 	38601
		repOff: 	-38601
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap>>replaceFrom:to:with:startingAt:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		start: 	38601
		stop: 	38711
		replacement: 	an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 108 32...etc...
		repStart: 	0
	Receiver's instance variables: 
a Bitmap of length 307200

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	cambió
		unForm: 	Form(640x480x32)
		poemaConPalabra: 	an OrderedCollection(110 111 32 99 97 109 98 105 243 32 101 10...etc...
		bitmap: 	a Bitmap of length 307200
		offset: 	38601
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(480x640x32) Form(480x640...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->cambió #helper->cambió #position->a GRS...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1MGv0VXT10_","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: formD...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id19,id19,148,-539,225,475.390625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=nCr2pW6akkiJCf79","_k=f7yty1M...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=nCr2pW6akki...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id19,id19,148,-539,225,475.390625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id19,id19,148,-539,225,475.390625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id19,id19,148,-539,225,475.390625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C148%2C-539%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C148%2C-539%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 453)
		nextKey: 	459


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		arg1: 	a WAWalkbackErrorHandler
		arg2: 	[ :exception | 
[ "If there's an error while handling the exception, fall...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C148%2C-539%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		arg1: 	WARenderNotification
		arg2: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	THERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #primitiveFail in Bitmap failed
21 March 2020 9:20:56.015106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Bitmap(ProtoObject)>>primitiveFailed:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		selector: 	#primitiveFail
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap(ProtoObject)>>primitiveFailed
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 

	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap(ProtoObject)>>primitiveFail
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 

	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap>>decompress:fromByteArray:at:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		bm: 	a Bitmap of length 307200
		ba: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 160 11 25...etc...
		index: 	6
		i: 	676199
		code: 	3
		n: 	795552063
		anInt: 	3182208255
		data: 	4290685860
		end: 	882867
		k: 	236404
		pastEnd: 	307201
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 16...etc...
		s: 	a ReadStream
		bitmap: 	a Bitmap of length 307200
		size: 	307200
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Form>>unhibernate
	Receiver: Form(640x480x32)
	Arguments and temporary variables: 
		resBits: 	nil
	Receiver's instance variables: 
		bits: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 160 11 ...etc...
		width: 	640
		height: 	480
		depth: 	32
		offset: 	nil


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(640x480x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	nil
		jpegCompressStruct: 	nil
		jpegErrorMgr2Struct: 	nil
		buffer: 	nil
		byteCount: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(640x480x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(640x480x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(640x480x32)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 160 11 ...etc...
		width: 	640
		height: 	480
		depth: 	32
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(640x480x32)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		anObject: 	Form(640x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
		handler: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		actionBaseUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	a GRSmallDictionary2(#halosEnabled->false)


WAImageTag>>document:mimeType:fileName:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(640x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


WAImageTag>>document:mimeType:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(640x480x32)
		mimeType: 	'image/jpg'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];
					html: [ :r | self renderForm: formDeImagen withRenderer: r ]));
	with: [ :r | self renderForm: formDeImagen withRenderer: html ] ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new dr...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderForm:withRenderer:
		startpc: 	84
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.706106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762289280950106


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	36
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762289280950106


WorldState>>interCyclePause:
	Receiver: a WorldState
	Arguments and temporary variables: 
		milliSecs: 	20
		wait: 	20
		wait2: 	20
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	9504773
		lastStepMessage: 	nil
		lastCycleTime: 	9550738
		alarms: 	a Heap()
		lastAlarmTime: 	9550738
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	9504773
		lastStepMessage: 	nil
		lastCycleTime: 	9550738
		alarms: 	a Heap()
		lastAlarmTime: 	9550738
		menuBuilder: 	nil
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a Panel...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
WorldState>>interCyclePause:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.745106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WeakArray class>>finalizationProcess
	Receiver: WeakArray
	Arguments and temporary variables: 
		throttle: 	a Semaphore()
		firstMourner: 	nil
	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


[ self finalizationProcess ] in WeakArray class>>restartFinalizationProcess
	Receiver: WeakArray
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ self finalizationProcess ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	WeakArray class>>restartFinalizationProcess
		startpc: 	127
		numArgs: 	0



--- The full stack ---
WeakArray class>>finalizationProcess
[ self finalizationProcess ] in WeakArray class>>restartFinalizationProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.761106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.768106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.776106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.783106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.790106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.800106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.806106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.815106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.822106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.828106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:34.918106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

RubCompositionScanner(RubCharacterScanner)>>basicScanCharactersFrom:to:in:rightX:stopConditions:kern:
	Receiver: a RubCompositionScanner
	Arguments and temporary variables: 
		startIndex: 	402
		stopIndex: 	403
		sourceString: 	'next: anInteger putAll: aCollection startingAt: startIndex
	"Sto...etc...
		rightX: 	32
		stops: 	a RubTextStopConditions
		kernDelta: 	0
		ascii: 	nil
		nextDestX: 	nil
		char: 	nil
		floatDestX: 	nil
		widthAndKernedWidth: 	nil
		nextChar: 	nil
		atEndOfRun: 	nil
	Receiver's instance variables: 
		destX: 	6
		lastIndex: 	402
		destY: 	2647
		stopConditions: 	a RubTextStopConditions
		text: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex
	"...etc...
		textStyle: 	a TextStyle Source Code Pro
		alignment: 	0
		leftMargin: 	6
		rightMargin: 	32
		font: 	a LogicalFont
 familyName: 'Source Code Pro'
 emphasis: nil
 pointSize: 1...etc...
		line: 	a RubTextLine 402 to: 0
		runStopIndex: 	403
		spaceCount: 	0
		spaceWidth: 	7.8000030517578125
		emphasisCode: 	0
		kern: 	0
		indentationLevel: 	0
		baselineY: 	nil
		firstDestX: 	6
		pendingKernX: 	0
		spaceX: 	6
		lineHeight: 	17
		baseline: 	13
		breakableIndex: 	401
		lineHeightAtBreak: 	17
		baselineAtBreak: 	13
		breakAtSpace: 	false


RubCompositionScanner(RubCharacterScanner)>>scanCharactersFrom:to:in:rightX:stopConditions:kern:
	Receiver: a RubCompositionScanner
	Arguments and temporary variables: 
		startIndex: 	402
		stopIndex: 	403
		sourceString: 	'next: anInteger putAll: aCollection startingAt: startIndex
	"Sto...etc...
		rightX: 	32
		stops: 	a RubTextStopConditions
		kernDelta: 	0
		startEncoding: 	nil
		selector: 	nil
	Receiver's instance variables: 
		destX: 	6
		lastIndex: 	402
		destY: 	2647
		stopConditions: 	a RubTextStopConditions
		text: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex
	"...etc...
		textStyle: 	a TextStyle Source Code Pro
		alignment: 	0
		leftMargin: 	6
		rightMargin: 	32
		font: 	a LogicalFont
 familyName: 'Source Code Pro'
 emphasis: nil
 pointSize: 1...etc...
		line: 	a RubTextLine 402 to: 0
		runStopIndex: 	403
		spaceCount: 	0
		spaceWidth: 	7.8000030517578125
		emphasisCode: 	0
		kern: 	0
		indentationLevel: 	0
		baselineY: 	nil
		firstDestX: 	6
		pendingKernX: 	0
		spaceX: 	6
		lineHeight: 	17
		baseline: 	13
		breakableIndex: 	401
		lineHeightAtBreak: 	17
		baselineAtBreak: 	13
		breakAtSpace: 	false


RubCompositionScanner>>composeFrom:inRectangle:firstLine:leftSide:rightSide:
	Receiver: a RubCompositionScanner
	Arguments and temporary variables: 
		startIndex: 	402
		lineRectangle: 	(6@2647) corner: (32@2647)
		firstLine: 	false
		leftSide: 	true
		rightSide: 	true
		runLength: 	2
		stopCondition: 	nil
	Receiver's instance variables: 
		destX: 	6
		lastIndex: 	402
		destY: 	2647
		stopConditions: 	a RubTextStopConditions
		text: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex
	"...etc...
		textStyle: 	a TextStyle Source Code Pro
		alignment: 	0
		leftMargin: 	6
		rightMargin: 	32
		font: 	a LogicalFont
 familyName: 'Source Code Pro'
 emphasis: nil
 pointSize: 1...etc...
		line: 	a RubTextLine 402 to: 0
		runStopIndex: 	403
		spaceCount: 	0
		spaceWidth: 	7.8000030517578125
		emphasisCode: 	0
		kern: 	0
		indentationLevel: 	0
		baselineY: 	nil
		firstDestX: 	6
		pendingKernX: 	0
		spaceX: 	6
		lineHeight: 	17
		baseline: 	13
		breakableIndex: 	401
		lineHeightAtBreak: 	17
		baselineAtBreak: 	13
		breakAtSpace: 	false


RubTextComposer>>composeEachRectangleIn:
	Receiver: a RubTextComposer
	Arguments and temporary variables: 
		rectangles: 	{(6@2647) corner: (32@2647)}
		myLine: 	nil
		lastChar: 	nil
		i: 	1
	Receiver's instance variables: 
		lines: 	an OrderedCollection(a RubTextLine 1 to: 3 a RubTextLine 4 to: 6 a RubTe...etc...
		maxRightX: 	32
		currentY: 	2647
		scanner: 	a RubCompositionScanner
		possibleSlide: 	false
		nowSliding: 	false
		prevIndex: 	1
		prevLines: 	#()
		currCharIndex: 	402
		startCharIndex: 	1
		stopCharIndex: 	605
		deltaCharIndex: 	0
		theText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex...etc...
		theContainer: 	(6@6) corner: (32@1073741823)
		isFirstLine: 	false
		theTextStyle: 	a TextStyle Source Code Pro
		defaultLineHeight: 	0
		actualHeight: 	0
		actualWidth: 	nil
		numberOfPhysicalLines: 	nil
		prevTextStyle: 	a TextStyle Source Code Pro
		prevText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startInde...etc...
		prevContainer: 	(6@6) corner: (32@1073741823)
		emphasisHere: 	#()
		cursorWidth: 	2


RubTextComposer>>composeAllRectangles:
	Receiver: a RubTextComposer
	Arguments and temporary variables: 
		rectangles: 	{(6@2647) corner: (32@2647)}
		charIndexBeforeLine: 	402
		numberOfLinesBefore: 	139
	Receiver's instance variables: 
		lines: 	an OrderedCollection(a RubTextLine 1 to: 3 a RubTextLine 4 to: 6 a RubTe...etc...
		maxRightX: 	32
		currentY: 	2647
		scanner: 	a RubCompositionScanner
		possibleSlide: 	false
		nowSliding: 	false
		prevIndex: 	1
		prevLines: 	#()
		currCharIndex: 	402
		startCharIndex: 	1
		stopCharIndex: 	605
		deltaCharIndex: 	0
		theText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex...etc...
		theContainer: 	(6@6) corner: (32@1073741823)
		isFirstLine: 	false
		theTextStyle: 	a TextStyle Source Code Pro
		defaultLineHeight: 	0
		actualHeight: 	0
		actualWidth: 	nil
		numberOfPhysicalLines: 	nil
		prevTextStyle: 	a TextStyle Source Code Pro
		prevText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startInde...etc...
		prevContainer: 	(6@6) corner: (32@1073741823)
		emphasisHere: 	#()
		cursorWidth: 	2


RubTextComposer>>composeOneLine
	Receiver: a RubTextComposer
	Arguments and temporary variables: 
		rectangles: 	{(6@2647) corner: (32@2647)}
	Receiver's instance variables: 
		lines: 	an OrderedCollection(a RubTextLine 1 to: 3 a RubTextLine 4 to: 6 a RubTe...etc...
		maxRightX: 	32
		currentY: 	2647
		scanner: 	a RubCompositionScanner
		possibleSlide: 	false
		nowSliding: 	false
		prevIndex: 	1
		prevLines: 	#()
		currCharIndex: 	402
		startCharIndex: 	1
		stopCharIndex: 	605
		deltaCharIndex: 	0
		theText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex...etc...
		theContainer: 	(6@6) corner: (32@1073741823)
		isFirstLine: 	false
		theTextStyle: 	a TextStyle Source Code Pro
		defaultLineHeight: 	0
		actualHeight: 	0
		actualWidth: 	nil
		numberOfPhysicalLines: 	nil
		prevTextStyle: 	a TextStyle Source Code Pro
		prevText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startInde...etc...
		prevContainer: 	(6@6) corner: (32@1073741823)
		emphasisHere: 	#()
		cursorWidth: 	2


RubTextComposer>>composeAllLines
	Receiver: a RubTextComposer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		lines: 	an OrderedCollection(a RubTextLine 1 to: 3 a RubTextLine 4 to: 6 a RubTe...etc...
		maxRightX: 	32
		currentY: 	2647
		scanner: 	a RubCompositionScanner
		possibleSlide: 	false
		nowSliding: 	false
		prevIndex: 	1
		prevLines: 	#()
		currCharIndex: 	402
		startCharIndex: 	1
		stopCharIndex: 	605
		deltaCharIndex: 	0
		theText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex...etc...
		theContainer: 	(6@6) corner: (32@1073741823)
		isFirstLine: 	false
		theTextStyle: 	a TextStyle Source Code Pro
		defaultLineHeight: 	0
		actualHeight: 	0
		actualWidth: 	nil
		numberOfPhysicalLines: 	nil
		prevTextStyle: 	a TextStyle Source Code Pro
		prevText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startInde...etc...
		prevContainer: 	(6@6) corner: (32@1073741823)
		emphasisHere: 	#()
		cursorWidth: 	2


RubTextComposer>>composeLinesFrom:to:delta:into:priorLines:atY:textStyle:text:container:
	Receiver: a RubTextComposer
	Arguments and temporary variables: 
		argStart: 	1
		argStop: 	605
		argDelta: 	0
		argLinesCollection: 	an OrderedCollection(a RubTextLine 1 to: 3 a RubTextLine 4 ...etc...
		argPriorLines: 	#()
		argStartY: 	6
		argTextStyle: 	a TextStyle Source Code Pro
		argText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex...etc...
		argContainer: 	(6@6) corner: (32@1073741823)
	Receiver's instance variables: 
		lines: 	an OrderedCollection(a RubTextLine 1 to: 3 a RubTextLine 4 to: 6 a RubTe...etc...
		maxRightX: 	32
		currentY: 	2647
		scanner: 	a RubCompositionScanner
		possibleSlide: 	false
		nowSliding: 	false
		prevIndex: 	1
		prevLines: 	#()
		currCharIndex: 	402
		startCharIndex: 	1
		stopCharIndex: 	605
		deltaCharIndex: 	0
		theText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex...etc...
		theContainer: 	(6@6) corner: (32@1073741823)
		isFirstLine: 	false
		theTextStyle: 	a TextStyle Source Code Pro
		defaultLineHeight: 	0
		actualHeight: 	0
		actualWidth: 	nil
		numberOfPhysicalLines: 	nil
		prevTextStyle: 	a TextStyle Source Code Pro
		prevText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startInde...etc...
		prevContainer: 	(6@6) corner: (32@1073741823)
		emphasisHere: 	#()
		cursorWidth: 	2


RubTextComposer>>composeLinesFrom:to:delta:into:priorLines:atY:
	Receiver: a RubTextComposer
	Arguments and temporary variables: 
		start: 	1
		stop: 	605
		delta: 	0
		lineColl: 	an OrderedCollection(a RubTextLine 1 to: 3 a RubTextLine 4 to: 6 a Ru...etc...
		priorLines: 	#()
		startingY: 	6
	Receiver's instance variables: 
		lines: 	an OrderedCollection(a RubTextLine 1 to: 3 a RubTextLine 4 to: 6 a RubTe...etc...
		maxRightX: 	32
		currentY: 	2647
		scanner: 	a RubCompositionScanner
		possibleSlide: 	false
		nowSliding: 	false
		prevIndex: 	1
		prevLines: 	#()
		currCharIndex: 	402
		startCharIndex: 	1
		stopCharIndex: 	605
		deltaCharIndex: 	0
		theText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex...etc...
		theContainer: 	(6@6) corner: (32@1073741823)
		isFirstLine: 	false
		theTextStyle: 	a TextStyle Source Code Pro
		defaultLineHeight: 	0
		actualHeight: 	0
		actualWidth: 	nil
		numberOfPhysicalLines: 	nil
		prevTextStyle: 	a TextStyle Source Code Pro
		prevText: 	a Text for 'next: anInteger putAll: aCollection startingAt: startInde...etc...
		prevContainer: 	(6@6) corner: (32@1073741823)
		emphasisHere: 	#()
		cursorWidth: 	2


[ self uptodateComposer
	composeLinesFrom: 1
	to: self text size
	delta: 0
	into: OrderedCollection new
	priorLines: Array new
	atY: self compositionRectangle top.
textArea
	ifNotNil: [ textArea paragraphWasComposedFrom: 1 to: self text size ] ] in RubParagraph>>compose
	Receiver: a RubParagraph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		text: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex
	"...etc...
		composer: 	a RubTextComposer
		container: 	(0@0) corner: (38@4002)
		drawingEnabled: 	false
		textArea: 	a RubEditingArea(114601216)


BlockClosure>>ensure:
	Receiver: [ self uptodateComposer
	composeLinesFrom: 1
	to: self text size
	delta: 0
	into: OrderedC...etc...
	Arguments and temporary variables: 
		aBlock: 	[ self enableDrawing ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	RubParagraph>>compose
		startpc: 	58
		numArgs: 	0


RubParagraph>>disableDrawingWhile:
	Receiver: a RubParagraph
	Arguments and temporary variables: 
		aBlock: 	[ self uptodateComposer
	composeLinesFrom: 1
	to: self text size
	delta...etc...
	Receiver's instance variables: 
		text: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex
	"...etc...
		composer: 	a RubTextComposer
		container: 	(0@0) corner: (38@4002)
		drawingEnabled: 	false
		textArea: 	a RubEditingArea(114601216)


RubParagraph>>compose
	Receiver: a RubParagraph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		text: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex
	"...etc...
		composer: 	a RubTextComposer
		container: 	(0@0) corner: (38@4002)
		drawingEnabled: 	false
		textArea: 	a RubEditingArea(114601216)


RubParagraph>>tabWidth:
	Receiver: a RubParagraph
	Arguments and temporary variables: 
		anInteger: 	24
		newTextStyle: 	a TextStyle Source Code Pro
		tabsArray: 	#(24 48 72 96 120 144 168 192 216 240 264 288 312 336 360 384 408 43...etc...
	Receiver's instance variables: 
		text: 	a Text for 'next: anInteger putAll: aCollection startingAt: startIndex
	"...etc...
		composer: 	a RubTextComposer
		container: 	(0@0) corner: (38@4002)
		drawingEnabled: 	false
		textArea: 	a RubEditingArea(114601216)


Message>>sendTo:
	Receiver: tabWidth: 24
	Arguments and temporary variables: 
		receiver: 	a RubParagraph
	Receiver's instance variables: 
		selector: 	#tabWidth:
		args: 	#(24)
		lookupClass: 	RubOpeningClosingDelimiterDecorator


[ aMessage sendTo: next ] in RubOpeningClosingDelimiterDecorator(RubParagraphDecorator)>>doesNotUnderstand: #tabWidth:
	Receiver: a RubOpeningClosingDelimiterDecorator
	Arguments and temporary variables: 
		aMessage: 	tabWidth: 24
	Receiver's instance variables: 
		next: 	a RubParagraph


BlockClosure>>on:do:
	Receiver: [ aMessage sendTo: next ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:35.107106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

IdentityDictionary>>scanFor:
	Receiver: an IdentityDictionary(#black->Color black #blue->Color blue #brickDarken->Color brickDarke...etc...
	Arguments and temporary variables: 
		anObject: 	#transparent
		finish: 	nil
		start: 	nil
		element: 	nil
	Receiver's instance variables: 
		tally: 	40
		array: 	{nil. nil. #tan->Color tan. nil. #yellow->Color yellow. #lightOrange->Co...etc...


IdentityDictionary(HashedCollection)>>findElementOrNil:
	Receiver: an IdentityDictionary(#black->Color black #blue->Color blue #brickDarken->Color brickDarke...etc...
	Arguments and temporary variables: 
		anObject: 	#transparent
		index: 	nil
	Receiver's instance variables: 
		tally: 	40
		array: 	{nil. nil. #tan->Color tan. nil. #yellow->Color yellow. #lightOrange->Co...etc...


IdentityDictionary(Dictionary)>>at:ifAbsent:
	Receiver: an IdentityDictionary(#black->Color black #blue->Color blue #brickDarken->Color brickDarke...etc...
	Arguments and temporary variables: 
		key: 	#transparent
		aBlock: 	[ self errorKeyNotFound: key ]
	Receiver's instance variables: 
		tally: 	40
		array: 	{nil. nil. #tan->Color tan. nil. #yellow->Color yellow. #lightOrange->Co...etc...


IdentityDictionary(Dictionary)>>at:
	Receiver: an IdentityDictionary(#black->Color black #blue->Color blue #brickDarken->Color brickDarke...etc...
	Arguments and temporary variables: 
		key: 	#transparent
	Receiver's instance variables: 
		tally: 	40
		array: 	{nil. nil. #tan->Color tan. nil. #yellow->Color yellow. #lightOrange->Co...etc...


Color class>>transparent
	Receiver: Color
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(size 131)
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Color
		classPool: 	a Dictionary(#BlueShift->0 #CachedColormaps->an Array(an Array(nil n...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Colors-Base'


PanelMorph>>defaultColor
	Receiver: a PanelMorph(353826560)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	nil
		extension: 	nil
		borderWidth: 	nil
		borderColor: 	nil


PanelMorph(Morph)>>initialize
	Receiver: a PanelMorph(353826560)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	nil
		extension: 	nil
		borderWidth: 	nil
		borderColor: 	nil


PanelMorph(BorderedMorph)>>initialize
	Receiver: a PanelMorph(353826560)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	nil
		extension: 	nil
		borderWidth: 	nil
		borderColor: 	nil


PanelMorph>>initialize
	Receiver: a PanelMorph(353826560)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	nil
		extension: 	nil
		borderWidth: 	nil
		borderColor: 	nil


PanelMorph class(Behavior)>>new
	Receiver: PanelMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	BorderedMorph
		methodDict: 	a MethodDictionary(#adoptPaneColor:->PanelMorph>>#adoptPaneColor: #...etc...
		format: 	65544
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ExpanderMorph. ExpanderTitleMorph. OverflowRowMorph. PanelMorphWit...etc...
		name: 	#PanelMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Widgets-Windows-Widgets'
		announcer: 	nil


PharoLightTheme(UITheme)>>newRowIn:for:
	Receiver: a PharoLightTheme
	Arguments and temporary variables: 
		aThemedMorph: 	a WorldMorph(479349760) [world]
		controls: 	an OrderedCollection(a StringMorph(1065658624)'wait')
		answer: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		settings: 	a ThemeSettings
		forms: 	a Dictionary(#buttonBottomLeft->Form(12x12x32) #buttonBottomMiddle->Form...etc...
		soundTheme: 	nil
		focusIndicator: 	a FTTableMorph(514633984)->a BorderedMorph(463514368)
		windowActiveDropShadowStyle: 	#diffuse


GLMFastTableDataSource>>rowMorphForColumn:item:withIndex:
	Receiver: a GLMFastTableDataSource
	Arguments and temporary variables: 
		aColumn: 	a GLMFastTableColumn
		anItem: 	[ delaySemaphore wait ] in Delay>>wait
		aRowIndex: 	1
		rowElements: 	an OrderedCollection(a StringMorph(1065658624)'wait')
	Receiver's instance variables: 
		table: 	a FTTableMorph(99645184)
		elements: 	an OrderedCollection([ delaySemaphore wait ] in Delay>>wait BlockClos...etc...
		glamourPresentation: 	a GLMFastTablePresentation(id=773641472 title='Stack' pane...etc...
		announcer: 	a GLMAnnouncer
		tagsToFilterBy: 	an OrderedCollection()
		dataCache: 	a LRUCache(#1 1/128 [ 1 ] 67%)
		columnToSortBy: 	nil


GLMFastTableDataSource>>cellColumn:row:
	Receiver: a GLMFastTableDataSource
	Arguments and temporary variables: 
		aColumn: 	a GLMFastTableColumn
		aRowIndex: 	1
		item: 	[ delaySemaphore wait ] in Delay>>wait
		cell: 	nil
	Receiver's instance variables: 
		table: 	a FTTableMorph(99645184)
		elements: 	an OrderedCollection([ delaySemaphore wait ] in Delay>>wait BlockClos...etc...
		glamourPresentation: 	a GLMFastTablePresentation(id=773641472 title='Stack' pane...etc...
		announcer: 	a GLMAnnouncer
		tagsToFilterBy: 	an OrderedCollection()
		dataCache: 	a LRUCache(#1 1/128 [ 1 ] 67%)
		columnToSortBy: 	nil


FTTableContainerMorph>>updateExposedRows
	Receiver: a FTTableContainerMorph(680558848)
	Arguments and temporary variables: 
		visibleRows: 	2
		numberOfColumns: 	3
		columns: 	an Array(a GLMFastTableColumn a GLMFastTableColumn a GLMFastTableColum...etc...
		columnWidths: 	#(100.0 400.0 -400.0)
		startIndex: 	1
		rowIndex: 	1
		row: 	a FTTableRowMorph(269462784)
		columnIndex: 	2
		cell: 	nil
	Receiver's instance variables: 
		bounds: 	(5.0@5.0) corner: (92.0@35.0)
		owner: 	a FTTableMorph(99645184)
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	nil
		needsRefreshExposedRows: 	true
		headerRow: 	nil
		exposedRows: 	a SmallDictionary()


FTTableMorph>>resizeAllSubviews
	Receiver: a FTTableMorph(99645184)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(5.0@5.0) corner: (105.0@35.0)
		owner: 	a GLMPanelMorph(840324864)
		submorphs: 	an Array(a FTTableContainerMorph(680558848) a ScrollBar(414315776))
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (193283328) [other:  (announcer -> an Announcer) (k...etc...
		container: 	a FTTableContainerMorph(680558848)
		verticalScrollBar: 	a ScrollBar(414315776)
		horizontalScrollBar: 	nil
		selectionColor: 	nil
		showIndex: 	1
		dataSource: 	a GLMFastTableDataSource
		intercellSpacing: 	(3@1)
		rowHeight: 	20.333333333333336
		selectedRowIndexes: 	#(1)
		highlightedRowIndexes: 	#()
		selectionStrategy: 	a FTSimpleSelection
		columns: 	an Array(a GLMFastTableColumn a GLMFastTableColumn a GLMFastTableColum...etc...
		secondarySelectionColor: 	nil
		headerColor: 	nil
		showColumnHeaders: 	false
		allowsDeselection: 	false
		needToggleAtMouseUp: 	false
		function: 	a FTNilFunction
		resizable: 	true
		trialHSB: 	nil


FTTableMorph>>extent:
	Receiver: a FTTableMorph(99645184)
	Arguments and temporary variables: 
		aPoint: 	(100.0@30.0)
	Receiver's instance variables: 
		bounds: 	(5.0@5.0) corner: (105.0@35.0)
		owner: 	a GLMPanelMorph(840324864)
		submorphs: 	an Array(a FTTableContainerMorph(680558848) a ScrollBar(414315776))
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (193283328) [other:  (announcer -> an Announcer) (k...etc...
		container: 	a FTTableContainerMorph(680558848)
		verticalScrollBar: 	a ScrollBar(414315776)
		horizontalScrollBar: 	nil
		selectionColor: 	nil
		showIndex: 	1
		dataSource: 	a GLMFastTableDataSource
		intercellSpacing: 	(3@1)
		rowHeight: 	20.333333333333336
		selectedRowIndexes: 	#(1)
		highlightedRowIndexes: 	#()
		selectionStrategy: 	a FTSimpleSelection
		columns: 	an Array(a GLMFastTableColumn a GLMFastTableColumn a GLMFastTableColum...etc...
		secondarySelectionColor: 	nil
		headerColor: 	nil
		showColumnHeaders: 	false
		allowsDeselection: 	false
		needToggleAtMouseUp: 	false
		function: 	a FTNilFunction
		resizable: 	true
		trialHSB: 	nil


FTTableMorph(Morph)>>bounds:
	Receiver: a FTTableMorph(99645184)
	Arguments and temporary variables: 
		newBounds: 	(5.0@5.0) corner: (105.0@35.0)
		oldExtent: 	(50.0@40.0)
		newExtent: 	(100.0@30.0)
	Receiver's instance variables: 
		bounds: 	(5.0@5.0) corner: (105.0@35.0)
		owner: 	a GLMPanelMorph(840324864)
		submorphs: 	an Array(a FTTableContainerMorph(680558848) a ScrollBar(414315776))
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (193283328) [other:  (announcer -> an Announcer) (k...etc...
		container: 	a FTTableContainerMorph(680558848)
		verticalScrollBar: 	a ScrollBar(414315776)
		horizontalScrollBar: 	nil
		selectionColor: 	nil
		showIndex: 	1
		dataSource: 	a GLMFastTableDataSource
		intercellSpacing: 	(3@1)
		rowHeight: 	20.333333333333336
		selectedRowIndexes: 	#(1)
		highlightedRowIndexes: 	#()
		selectionStrategy: 	a FTSimpleSelection
		columns: 	an Array(a GLMFastTableColumn a GLMFastTableColumn a GLMFastTableColum...etc...
		secondarySelectionColor: 	nil
		headerColor: 	nil
		showColumnHeaders: 	false
		allowsDeselection: 	false
		needToggleAtMouseUp: 	false
		function: 	a FTNilFunction
		resizable: 	true
		trialHSB: 	nil


FTTableMorph(Morph)>>layoutInBounds:
	Receiver: a FTTableMorph(99645184)
	Arguments and temporary variables: 
		cellBounds: 	(5@5) corner: (105@35)
		box: 	(5.0@5.0) corner: (105.0@35.0)
		aSymbol: 	#center
	Receiver's instance variables: 
		bounds: 	(5.0@5.0) corner: (105.0@35.0)
		owner: 	a GLMPanelMorph(840324864)
		submorphs: 	an Array(aTHERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:35.260106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

DelaySemaphoreScheduler>>schedule:
	Receiver: a DelaySemaphoreScheduler(345701632) on DelayMicrosecondTicker
	Arguments and temporary variables: 
		aDelay: 	a Delay(100 msecs; 22 msecs remaining)
	Receiver's instance variables: 
		ticker: 	a DelayMicrosecondTicker
		runTimerEventLoop: 	true
		timerEventLoop: 	a Process in DelayMicrosecondTicker>>waitForUserSignalled:orExp...etc...
		suspendedDelays: 	a Heap(a Delay(100 msecs; 81 msecs remaining) a DelayWaitTimeo...etc...
		activeDelay: 	a Delay(100 msecs; 20 msecs remaining)
		suspendSemaphore: 	nil
		timingSemaphore: 	a Semaphore(a Process in DelayMicrosecondTicker>>waitForUserSi...etc...
		debug: 	false
		delayToStart: 	nil
		delayToStop: 	nil
		readyToSchedule: 	a Semaphore()
		readyToUnschedule: 	a Semaphore()


Delay>>schedule
	Receiver: a Delay(100 msecs; 19 msecs remaining)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	true
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762289535288106


Delay>>wait
	Receiver: a Delay(100 msecs; 17 msecs remaining)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	true
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762289535288106


Duration>>wait
	Receiver: 0:00:00:00.1
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nanos: 	100000000
		seconds: 	0


[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
	Receiver: a GLMAsyncTask
	Arguments and temporary variables: 
		aBlock: 	[ :isSmooth | isSmooth ]
		aCollection: 	#(false)
		callbackBlock: 	[ :isSmooth | self scrollToRight: isSmooth ]
		aPriority: 	40
		anIntegerMilliseconds: 	100
		result: 	nil
	Receiver's instance variables: 
		process: 	a Process in DelaySemaphoreScheduler>>schedule:
		callback: 	[ :isSmooth | self scrollToRight: isSmooth ]
		delay: 	100
		task: 	[ :isSmooth | isSmooth ]
		priority: 	40
		arguments: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	GLMAsyncTask>>execute:withArguments:callback:priority:delay:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
DelaySemaphoreScheduler>>schedule:
Delay>>schedule
Delay>>wait
Duration>>wait
[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:35.451106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

RubParagraph>>selectionRectsFrom:to:
	Receiver: a RubParagraph
	Arguments and temporary variables: 
		characterBlock1: 	a CharacterBlock with index 302 and surface (85.80000305175781...etc...
		characterBlock2: 	a CharacterBlock with index 306 and surface (117.0000152587890...etc...
		line1: 	nil
		line2: 	nil
		cb1: 	nil
		cb2: 	nil
	Receiver's instance variables: 
		text: 	a Text for 'newProcess
	"Answer a Process running the code in the receive...etc...
		composer: 	a RubTextComposer
		container: 	(0@0) corner: (18.0@27.0)
		drawingEnabled: 	true
		textArea: 	a RubEditingArea(876337920)


RubParagraph>>selectionRects
	Receiver: a RubParagraph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		text: 	a Text for 'newProcess
	"Answer a Process running the code in the receive...etc...
		composer: 	a RubTextComposer
		container: 	(0@0) corner: (18.0@27.0)
		drawingEnabled: 	true
		textArea: 	a RubEditingArea(876337920)


Message>>sendTo:
	Receiver: selectionRects
	Arguments and temporary variables: 
		receiver: 	a RubParagraph
	Receiver's instance variables: 
		selector: 	#selectionRects
		args: 	#()
		lookupClass: 	RubOpeningClosingDelimiterDecorator


[ aMessage sendTo: next ] in RubOpeningClosingDelimiterDecorator(RubParagraphDecorator)>>doesNotUnderstand: #selectionRects
	Receiver: a RubOpeningClosingDelimiterDecorator
	Arguments and temporary variables: 
		aMessage: 	selectionRects
	Receiver's instance variables: 
		next: 	a RubParagraph


BlockClosure>>on:do:
	Receiver: [ aMessage sendTo: next ]
	Arguments and temporary variables: 
		exception: 	MessageNotUnderstood
		handlerAction: 	[ super doesNotUnderstand: aMessage ]
	Receiver's instance variables: 
		outerContext: 	RubOpeningClosingDelimiterDecorator(RubParagraphDecorator)>>doesN...etc...
		startpc: 	34
		numArgs: 	0


RubOpeningClosingDelimiterDecorator(RubParagraphDecorator)>>doesNotUnderstand: #selectionRects
	Receiver: a RubOpeningClosingDelimiterDecorator
	Arguments and temporary variables: 
		aMessage: 	selectionRects
	Receiver's instance variables: 
		next: 	a RubParagraph


Message>>sendTo:
	Receiver: selectionRects
	Arguments and temporary variables: 
		receiver: 	a RubOpeningClosingDelimiterDecorator
	Receiver's instance variables: 
		selector: 	#selectionRects
		args: 	#()
		lookupClass: 	RubExtraSelectionDecorator


[ aMessage sendTo: next ] in RubExtraSelectionDecorator(RubParagraphDecorator)>>doesNotUnderstand: #selectionRects
	Receiver: a RubExtraSelectionDecorator
	Arguments and temporary variables: 
		aMessage: 	selectionRects
	Receiver's instance variables: 
		next: 	a RubOpeningClosingDelimiterDecorator
		findReplaceRanges: 	nil
		findReplaceShapes: 	nil
		secondarySelectionShapes: 	nil


BlockClosure>>on:do:
	Receiver: [ aMessage sendTo: next ]
	Arguments and temporary variables: 
		exception: 	MessageNotUnderstood
		handlerAction: 	[ super doesNotUnderstand: aMessage ]
	Receiver's instance variables: 
		outerContext: 	RubExtraSelectionDecorator(RubParagraphDecorator)>>doesNotUnderst...etc...
		startpc: 	34
		numArgs: 	0


RubExtraSelectionDecorator(RubParagraphDecorator)>>doesNotUnderstand: #selectionRects
	Receiver: a RubExtraSelectionDecorator
	Arguments and temporary variables: 
		aMessage: 	selectionRects
	Receiver's instance variables: 
		next: 	a RubOpeningClosingDelimiterDecorator
		findReplaceRanges: 	nil
		findReplaceShapes: 	nil
		secondarySelectionShapes: 	nil


Message>>sendTo:
	Receiver: selectionRects
	Arguments and temporary variables: 
		receiver: 	a RubExtraSelectionDecorator
	Receiver's instance variables: 
		selector: 	#selectionRects
		args: 	#()
		lookupClass: 	RubCurrentLineBarDecorator


[ aMessage sendTo: next ] in RubCurrentLineBarDecorator(RubParagraphDecorator)>>doesNotUnderstand: #selectionRects
	Receiver: a RubCurrentLineBarDecorator
	Arguments and temporary variables: 
		aMessage: 	selectionRects
	Receiver's instance variables: 
		next: 	a RubExtraSelectionDecorator


BlockClosure>>on:do:
	Receiver: [ aMessage sendTo: next ]
	Arguments and temporary variables: 
		exception: 	MessageNotUnderstood
		handlerAction: 	[ super doesNotUnderstand: aMessage ]
	Receiver's instance variables: 
		outerContext: 	RubCurrentLineBarDecorator(RubParagraphDecorator)>>doesNotUnderst...etc...
		startpc: 	34
		numArgs: 	0


RubCurrentLineBarDecorator(RubParagraphDecorator)>>doesNotUnderstand: #selectionRects
	Receiver: a RubCurrentLineBarDecorator
	Arguments and temporary variables: 
		aMessage: 	selectionRects
	Receiver's instance variables: 
		next: 	a RubExtraSelectionDecorator


Message>>sendTo:
	Receiver: selectionRects
	Arguments and temporary variables: 
		receiver: 	a RubCurrentLineBarDecorator
	Receiver's instance variables: 
		selector: 	#selectionRects
		args: 	#()
		lookupClass: 	RubShoutStylerDecorator


[ aMessage sendTo: next ] in RubShoutStylerDecorator(RubParagraphDecorator)>>doesNotUnderstand: #selectionRects
	Receiver: a RubShoutStylerDecorator
	Arguments and temporary variables: 
		aMessage: 	selectionRects
	Receiver's instance variables: 
		next: 	a RubCurrentLineBarDecorator
		styler: 	a SHRBTextStyler
		shoutIsAvailable: 	nil
		text: 	a Text for 'newProcess
	"Answer a Process running the code in the receive...etc...
		replaceStart: 	1
		replaceStop: 	389


BlockClosure>>on:do:
	Receiver: [ aMessage sendTo: next ]
	Arguments and temporary variables: 
		exception: 	MessageNotUnderstood
		handlerAction: 	[ super doesNotUnderstand: aMessage ]
	Receiver's instance variables: 
		outerContext: 	RubShoutStylerDecorator(RubParagraphDecorator)>>doesNotUnderstand...etc...
		startpc: 	34
		numArgs: 	0


RubShoutStylerDecorator(RubParagraphDecorator)>>doesNotUnderstand: #selectionRects
	Receiver: a RubShoutStylerDecorator
	Arguments and temporary variables: 
		aMessage: 	selectionRects
	Receiver's instance variables: 
		next: 	a RubCurrentLineBarDecorator
		styler: 	a SHRBTextStyler
		shoutIsAvailable: 	nil
		text: 	a Text for 'newProcess
	"Answer a Process running the code in the receive...etc...
		replaceStart: 	1
		replaceStop: 	389


[ :strm | 
strm nextPutAll: self paragraph selectionRects.
self cursor ifNotNil: [ strm nextPut: self cursor bounds ] ] in RubEditingArea(RubAbstractTextArea)>>selectionRects
	Receiver: a RubEditingArea(876337920)
	Arguments and temporary variables: 
		strm: 	a WriteStream
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (596@221)
		owner: 	a TransformWithLayoutMorph(1057974528)
		submorphs: 	an Array(a RubCursor(217051392) a RubPrimarySelectionMorph(482306816...etc...
		fullBounds: 	(0@0) corner: (596@221)
		color: 	Color transparent
		extension: 	a MorphExtension (457391872) [other:  (announcer -> an Announcer)]
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(468012288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	nil
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(217051392)
		segments: 	nil
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	false
		editorClass: 	RubSmalltalkEditor


Array class(SequenceableCollection class)>>new:streamContents:
	Receiver: Array
	Arguments and temporary variables: 
		newSize: 	100
		blockWithArg: 	[ :strm | 
strm nextPutAll: self paragraph selectionRects.
self c...etc...
		stream: 	a WriteStream
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#'+*'->Array>>#'+*' #asArray->Array>>#asArray #a...etc...
		format: 	131072
		layout: 	a VariableLayout
		organization: 	a ClassOrganization
		subclasses: 	{WeakArray. MetacelloMethodSectionPath. WeakActionSequence. Cubic}
		name: 	#Array
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Sequenceable-Base'


Array class(SequenceableCollection class)>>streamContents:
	Receiver: Array
	Arguments and temporary variables: 
		blockWithArg: 	[ :strm | 
strm nextPutAll: self paragraph selectionRects.
self c...etc...
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#'+*'->Array>>#'+*' #asArray->Array>>#asArray #a...etc...
		format: 	131072
		layout: 	a VariableLayout
		organization: 	a ClassOrganization
		subclasses: 	{WeakArray. MetacelloMethodSectionPath. WeakActionSequence. Cubic}
		name: 	#Array
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Sequenceable-Base'


RubEditingArea(RubAbstractTextArea)>>selectionRects
	Receiver: a RubEditingArea(876337920)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (596@221)
		owner: 	a TransformWithLayoutMorph(1057974528)
		submorphs: 	an Array(a RubCursor(217051392) a RubPrimarySelectionMorph(482306816...etc...
		fullBounds: 	(0@0) corner: (596@221)
		color: 	Color transparent
		extension: 	a MorphExtension (457391872) [other:  (announcer -> an Announcer)]
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(468012288)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	nil
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(217051392)
		segments: 	nil
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	false
		editorClass: 	RubSmalltalkEditor


RubTextScrollPane>>scrollSelectionIntoView:
	Receiver: a RubTextScrollPane(468012288)
	Arguments and temporary variables: 
		event: 	nil
		selRects: 	nil
		delta: 	nil
		selRect: 	nil
		rectToTest: 	nil
		transform: 	nil
		cpHere: 	nil
		editor: 	a RubSmalltalkEditor
		bnds: 	nil
	Receiver's instance variables: 
		bounds: 	(19.0@0.0) corner: (50.0@40.0)
		owner: 	a RubScrolledTextMorph(485921536)
		submorphs: 	an Array(a RubScrollBar(3479808) a RubScrollBar(506839296) a Transfo...etc...
		fullBounds: 	(19@0) corner: (61@42)
		color: 	Color transparent
		extension: 	a MorphExtension (454695680) [other:  (announcer -> an Announcer)]
		scroller: 	a TransformWithLayoutMorph(1057974528)
		hScrollbar: 	a RubScrollBar(3479808)
		vScrollbar: 	a RubScrollBar(506839296)
		drawFocusBorder: 	true


RubTextScrollPane>>scrollSelectionIntoView
	Receiver: a RubTextScrollPane(468012288)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(19.0@0.0) corner: (50.0@40.0)
		owner: 	a RubScrolledTextMorph(485921536)
		submorphs: 	an Array(a RubScrollBar(3479808) a RubScrollBar(506839296) a Transfo...etc...
		fullBounds: 	(19@0) corner: (61@42)
		color: 	Color transparent
		extension: 	a MorphExtension (454695680) [other:  (announcer -> an Announcer)]
		scroller: 	a TransformWithLayoutMorph(1057974528)
		hScrollbar: 	a RubScrollBar(3479808)
		vScrollbar: 	a RubScrollBar(506839296)
		drawFocusBorder: 	true


RubScrolledTextMorph>>setTextAreaSelection:
	Receiver: a RubScrolledTextMorph(485921536)
	Arguments and temporary variables: 
		aSelectionInterval: 	(302 to: 305)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a RubTextScrollPane(468012288) a RubAdornmentDisplayer(1361...etc...
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (548701952) [other:  (announcer -> an Announcer)]
		hasEditingConflicts: 	nil
		hasUnacceptedEdits: 	nil
		alwaysAccept: 	nil
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	nil
		scrollPane: 	a RubTextScrollPane(468012288)
		rulers: 	a SortedCollection(a RubTextSegmentIconDisplayer(739460352) a RubAdornm...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


RubScrolledTextMorph>>setSelection:
	Receiver: a RubScrolledTextMorph(485921536)
	Arguments and temporary variables: 
		aSelectionInterval: 	(302 to: 305)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a RubTextScrollPane(468012288) a RubAdornmentDisplayer(1361...etc...
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (548701952) [other:  (announcer -> an Announcer)]
		hasEditingConflicts: 	nil
		hasUnacceptedEdits: 	nil
		alwaysAccept: 	nil
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	nil
		scrollPane: 	a RubTextScrollPane(468012288)
		rulers: 	a SortedCollection(a RubTextSegmentIconDisplayer(739460352) a RubAdornm...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


RubScrolledTextMorph>>model:
	Receiver: a RubScrolledTextMorph(485921536)
	Arguments and temporary variables: 
		aModel: 	a GLMRubricSmalltalkTextModel
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a RubTextScrollPane(468012288) a RubAdornmentDisplayer(1361...etc...
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (548701952) [other:  (announcer -> an Announcer)]
		hasEditingConflicts: 	nil
		hasUnacceptedEdits: 	nil
		alwaysAccept: 	nil
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	nil
		scrollPane: 	a RubTextScrollPane(468012288)
		rulers: 	a SortedCollection(a RubTextSegmentIconDisplayer(739460352) a RubAdornm...etc...
		enabled: 	true
		highlights: 	an OrderedCollection()


GLMMorphicPharoMethodRenderer>>morph
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	nil
		textModel: 	a GLMRubricSmalltalkTextModel


GLMMorphicPharoMethodRenderer(GLMMorphicRubricTextRenderer)>>render:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPharoMethodPresentation(id=184567552 title='Source' pane=a ...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	nil
		textModel: 	a GLMRubricSmalltalkTextModel


GLMMorphicPharoMethodRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:35.827106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmallInteger(Number)>>negative
	Receiver: 255
	Arguments and temporary variables: 

	Receiver's instance variables: 
255

SmallInteger(Integer)>>bitShift:
	Receiver: 255
	Arguments and temporary variables: 
		shiftCount: 	24
		magnitudeShift: 	4278190080
	Receiver's instance variables: 
255

SmallInteger>>bitShift:
	Receiver: 255
	Arguments and temporary variables: 
		arg: 	24
	Receiver's instance variables: 
255

Color>>pixelValueForDepth:
	Receiver: (Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Arguments and temporary variables: 
		d: 	32
		basicPixelWord: 	4293322470
	Receiver's instance variables: 
		rgb: 	967732122
		cachedDepth: 	nil
		cachedBitPattern: 	nil
		alpha: 	255


Color>>pixelWordForDepth:
	Receiver: (Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Arguments and temporary variables: 
		depth: 	32
		pixelValue: 	nil
		basicPixelWord: 	nil
	Receiver's instance variables: 
		rgb: 	967732122
		cachedDepth: 	nil
		cachedBitPattern: 	nil
		alpha: 	255


Color>>scaledPixelValue32
	Receiver: (Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Arguments and temporary variables: 
		pv32: 	nil
		a: 	nil
		b: 	nil
		g: 	nil
		r: 	nil
	Receiver's instance variables: 
		rgb: 	967732122
		cachedDepth: 	nil
		cachedBitPattern: 	nil
		alpha: 	255


SolidFillStyle>>color:
	Receiver: a SolidFillStyle((Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0))
	Arguments and temporary variables: 
		aColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Receiver's instance variables: 
		color: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		pixelValue32: 	nil


SolidFillStyle class>>color:
	Receiver: SolidFillStyle
	Arguments and temporary variables: 
		aColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Receiver's instance variables: 
		superclass: 	FillStyle
		methodDict: 	a MethodDictionary(#addFillStyleMenuItems:hand:from:->SolidFillStyl...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorFillStyle}
		name: 	#SolidFillStyle
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Balloon-Fills'


PharoLightTheme>>glamorousNormalFillStyleFor:height:
	Receiver: a PharoLightTheme
	Arguments and temporary variables: 
		aMorph: 	a GLMPluggableButtonMorph(462219520)
		anInteger: 	24
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		settings: 	a ThemeSettings
		forms: 	a Dictionary(#buttonBottomLeft->Form(12x12x32) #buttonBottomMiddle->Form...etc...
		soundTheme: 	nil
		focusIndicator: 	a FTTableMorph(1913600)->a BorderedMorph(1027127040)
		windowActiveDropShadowStyle: 	#diffuse


PharoLightTheme(UITheme)>>buttonNormalFillStyleFor:
	Receiver: a PharoLightTheme
	Arguments and temporary variables: 
		aButton: 	a GLMPluggableButtonMorph(462219520)
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		settings: 	a ThemeSettings
		forms: 	a Dictionary(#buttonBottomLeft->Form(12x12x32) #buttonBottomMiddle->Form...etc...
		soundTheme: 	nil
		focusIndicator: 	a FTTableMorph(1913600)->a BorderedMorph(1027127040)
		windowActiveDropShadowStyle: 	#diffuse


GLMPluggableButtonMorph(PluggableButtonMorph)>>normalFillStyle
	Receiver: a GLMPluggableButtonMorph(462219520)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (24@24)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		extension: 	a MorphExtension (982330112) [balloonText] 
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a GLMGenericAction
		label: 	nil
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	nil
		actionSelector: 	#morphicActOn:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	nil
		getFontSelector: 	nil
		labelMorph: 	a LabelMorph(168444160)nil
		iconMorph: 	nil
		iconPosition: 	nil
		lastState: 	false


GLMPluggableButtonMorph(PluggableButtonMorph)>>fillStyleToUse
	Receiver: a GLMPluggableButtonMorph(462219520)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (24@24)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		extension: 	a MorphExtension (982330112) [balloonText] 
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a GLMGenericAction
		label: 	nil
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	nil
		actionSelector: 	#morphicActOn:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	nil
		getFontSelector: 	nil
		labelMorph: 	a LabelMorph(168444160)nil
		iconMorph: 	nil
		iconPosition: 	nil
		lastState: 	false


GLMPluggableButtonMorph(PluggableButtonMorph)>>changed
	Receiver: a GLMPluggableButtonMorph(462219520)
	Arguments and temporary variables: 
		lc: 	nil
		pc: 	nil
		bs: 	(SimpleBorder width: 1 color: (Color r: 0.784 g: 0.784 b: 0.784 alpha: 1.0)...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (24@24)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		extension: 	a MorphExtension (982330112) [balloonText] 
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a GLMGenericAction
		label: 	nil
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	nil
		actionSelector: 	#morphicActOn:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	nil
		getFontSelector: 	nil
		labelMorph: 	a LabelMorph(168444160)nil
		iconMorph: 	nil
		iconPosition: 	nil
		lastState: 	false


GLMPluggableButtonMorph(Morph)>>extent:
	Receiver: a GLMPluggableButtonMorph(462219520)
	Arguments and temporary variables: 
		aPoint: 	(24@24)
		newExtent: 	(24@24)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (24@24)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		extension: 	a MorphExtension (982330112) [balloonText] 
		borderWidth: 	1
		borderColor: 	#simple
		model: 	a GLMGenericAction
		label: 	nil
		icon: 	nil
		getIconSelector: 	nil
		getStateSelector: 	nil
		actionSelector: 	#morphicActOn:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	#()
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	nil
		getFontSelector: 	nil
		labelMorph: 	a LabelMorph(168444160)nil
		iconMorph: 	nil
		iconPosition: 	nil
		lastState: 	false


GLMMorphicActionRenderer>>render:
	Receiver: a GLMMorphicActionRenderer
	Arguments and temporary variables: 
		anAction: 	a GLMGenericAction
		b: 	a GLMPluggableButtonMorph(462219520)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer


GLMMorphicActionRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicActionRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMGenericAction
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicWidgetRenderer
		methodDict: 	a MethodDictionary(#actionArguments->GLMMorphicActionRenderer>>#act...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{GLMMorphicPopupActionRenderer}
		name: 	#GLMMorphicActionRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'


GLMMorphicRenderer>>renderAction:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		anAction: 	a GLMGenericAction
	Receiver's instance variables: 
		window: 	nil


GLMGenericAction(GLMAction)>>renderGlamorouslyOn:
	Receiver: a GLMGenericAction
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	nil
		suspendedAnnouncemets: 	nil
		logger: 	a GLMNullLogger
		action: 	[ self execute ]
		title: 	'Into'
		help: 	'Step in the highlighted message, i.e. follow the sent message, taking de...etc...
		keymap: 	Meta + e
		position: 	nil
		category: 	nil
		icon: 	Form(16x16x32)
		condition: 	nil
		enabledCondition: 	nil
		separatorAfter: 	nil
		separatorBefore: 	nil
		shouldShowTitle: 	true


[ :each | 
| actionMorph |
actionMorph := each renderGlamorouslyOn: self renderer.
actionMorph arguments
	ifNil: [ actionMorph arguments: {aPresentation} ]
	ifNotNil: [ actionMorph arguments: {aPresentation} , actionMorph arguments ].
actionMorph ] in GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>toolbarButtonsForPresentation:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMFastTablePresentation(id=34173696 title='Stack' pane=a GLMP...etc...
		each: 	a GLMGenericAction
		actionMorph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	a LazyTabGroupMorph(979712256)


OrderedCollection>>collect:
	Receiver: an OrderedCollection(a GLMGenericAction a GLMGenericAction a GLMGenericAction a GLMGeneric...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
| actionMorph |
actionMorph := each renderGlamorouslyOn: sel...etc...
		newCollection: 	an OrderedCollection(a GLMPluggableButtonMorph(708960000) a GLMP...etc...
		index: 	3
	Receiver's instance variabTHERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:36.347106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

GLMBrickLayoutProperties>>widthDependencies
	Receiver: a GLMBrickLayoutProperties
	Arguments and temporary variables: 

	Receiver's instance variables: 
		hResizing: 	#rigid
		vResizing: 	#rigid
		disableLayout: 	false
		cellInset: 	0
		cellPositioning: 	#center
		cellSpacing: 	#none
		layoutInset: 	0
		listCentering: 	#topLeft
		listDirection: 	#topToBottom
		listSpacing: 	#none
		reverseTableCells: 	false
		rubberBandCells: 	false
		wrapCentering: 	#topLeft
		wrapDirection: 	#none
		minCellSize: 	0
		maxCellSize: 	1073741823
		floating: 	#none
		hAlign: 	#none
		heightDependencies: 	an OrderedCollection()
		maxHeight: 	Float infinity
		maxWidth: 	Float infinity
		minHeight: 	0
		vAlign: 	#none
		widthDependencies: 	an OrderedCollection()
		zIndex: 	nil
		minWidth: 	0
		isDirty: 	false
		hState: 	a GLMBrickLayoutParentState
		vState: 	a GLMBrickLayoutParentState


GLMBrickWidthTraverser>>customDependencies:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>hasCustomDependencies:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyCustomDependency:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

[ :each | 
each = aContextBrick
	ifFalse: [ each isBrick
			ifTrue: [ (self isDependsOnParent: each) & (self isClean: each)
					| (each layout floating = #none) not
					| (each layout vAlign = #none) not
					| (each layout hAlign = #none) not
					ifTrue: [ self markDirty: each.
						self markDirtyAround: each inContext: aBrick ] ] ] ] in GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	a GLMBrickWrapper
		each: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

OrderedCollection>>do:
	Receiver: an OrderedCollection(a GLMBrickWrapper a GLMBrickWrapper)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
each = aContextBrick
	ifFalse: [ each isBrick
			ifTrue: [ (...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMBrickWrapper a GLMBrickWrapper)
		firstIndex: 	1
		lastIndex: 	2


GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

[ :each | 
each = aContextBrick
	ifFalse: [ each isBrick
			ifTrue: [ (self isDependsOnParent: each) & (self isClean: each)
					| (each layout floating = #none) not
					| (each layout vAlign = #none) not
					| (each layout hAlign = #none) not
					ifTrue: [ self markDirty: each.
						self markDirtyAround: each inContext: aBrick ] ] ] ] in GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	a GLMBrickWrapper
		each: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

OrderedCollection>>do:
	Receiver: an OrderedCollection(a GLMBrickWrapper)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
each = aContextBrick
	ifFalse: [ each isBrick
			ifTrue: [ (...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMBrickWrapper)
		firstIndex: 	1
		lastIndex: 	1


GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

[ :each | 
each = aContextBrick
	ifFalse: [ each isBrick
			ifTrue: [ (self isDependsOnParent: each) & (self isClean: each)
					| (each layout floating = #none) not
					| (each layout vAlign = #none) not
					| (each layout hAlign = #none) not
					ifTrue: [ self markDirty: each.
						self markDirtyAround: each inContext: aBrick ] ] ] ] in GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	a GLMBrickWrapper
		each: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

OrderedCollection>>do:
	Receiver: an OrderedCollection(a GLMBrickWrapper)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
each = aContextBrick
	ifFalse: [ each isBrick
			ifTrue: [ (...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMBrickWrapper)
		firstIndex: 	1
		lastIndex: 	1


GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

[ :each | 
each = aContextBrick
	ifFalse: [ each isBrick
			ifTrue: [ (self isDependsOnParent: each) & (self isClean: each)
					| (each layout floating = #none) not
					| (each layout vAlign = #none) not
					| (each layout hAlign = #none) not
					ifTrue: [ self markDirty: each.
						self markDirtyAround: each inContext: aBrick ] ] ] ] in GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	nil
		each: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickWidthTraverser

OrderedCollection>>do:
	Receiver: an OrderedCollection(a GLMBrickWrapper)
	Arguments and temporary variables: 
		aBlock: 	[ :each | 
each = aContextBrick
	ifFalse: [ each isBrick
			ifTrue: [ (...etc...
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a GLMBrickWrapper)
		firstIndex: 	1
		lastIndex: 	1


GLMBrickWidthTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickWidthTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	nil
	Receiver's instance variables: 
a GLMBrickWidthTraverser

GLMBrickLayouter>>markDependent:
	Receiver: a GLMBrickLayouter
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickLayouter

GLMBrickLayouter>>layoutIn:
	Receiver: a GLMBrickLayouter
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickLayouter

GLMBrick>>doLayout
	Receiver: a GLMBrick(819327744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0.0@16.0) corner: (50.0@56.0)
		owner: 	a GLMTabSelectorBrick(94936320)
		submorphs: 	an OrderedCollection(a GLMTabLabelBrick(18144512))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (12672768) [other:  (brickRenderer -> a GLMBrickRen...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper


GLMBrick>>doLayoutForce
	Receiver: a GLMBrick(819327744)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0.0@16.0) corner: (50.0@56.0)
		owner: 	a GLMTabSelectorBrick(94936320)
		submorphs: 	an OrderedCollection(a GLMTabLabelBrick(18144512))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (12672768) [other:  (brickRenderer -> a GLMBrickRen...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper


GLMTabSelectorBrick(GLMFoundationBrick)>>extent:
	Receiver: a GLMTabSelectorBrick(94936320)
	Arguments and temporary variables: 
		aPoint: 	(2.0@24.0)
		left: 	0
		top: 	0
		right: 	2.0
		bottom: 	24.0
	Receiver's instance variables: 
		bounds: 	(0.0@16.0) corner: (2.0@40.0)
		owner: 	a PanelMorph(800514816)
		submorphs: 	an Array(a GLMBrick(819327744))
		fullBounds: 	(0.0@16.0) corner: (2.0@40.0)
		color: 	Color transparent
		extension: 	a MorphExtension (267995392) [other:  (minHeight -> 24) (announcer -...etc...
		brickRoot: 	a GLMBrick(819327744)
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	1
		font: 	a LogicalFont
 familyName: 'Source Sans Pro'
 emphasis: nil
 pointSize: 1...etc...
		tabs: 	an OrderedCollection(a GLMTabLabelBrick(18144512))


GLMTabSelectorBrick(Morph)>>bounds:
	Receiver: a GLMTabSelectorBrick(94936320)
	Arguments and temporary variables: 
		newBounds: 	(0.0@16.0) corner: (2.0@40.0)
		oldExtent: 	(2.0@24.0)
		newExtent: 	(2.0@24.0)
	Receiver's instance variables: 
		bounds: 	(0.0@16.0) corner: (2.0@40.0)
		owner: 	a PanelMorph(800514816)
		submorphs: 	an Array(a GLMBrick(819327744))
		fullBounds: 	(0.0@16.0) corner: (2.0@40.0)
		color: 	Color transparent
		extension: 	a MorphExtension (267995392) [other:  (minHeight -> 24) (announcer -...etc...
		brickRoot: 	a GLMBrick(819327744)
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	1
		font: 	a LogicalFont
 familTHERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:36.422106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:36.430106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:36.438106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:36.445106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:36.490106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

DelaySemaphoreScheduler>>schedule:
	Receiver: a DelaySemaphoreScheduler(345701632) on DelayMicrosecondTicker
	Arguments and temporary variables: 
		aDelay: 	a Delay(100 msecs; 57 msecs remaining)
	Receiver's instance variables: 
		ticker: 	a DelayMicrosecondTicker
		runTimerEventLoop: 	true
		timerEventLoop: 	a Process in DelayMicrosecondTicker>>waitForUserSignalled:orExp...etc...
		suspendedDelays: 	a Heap(a Delay(100 msecs; 33 msecs remaining) a Delay(100 msec...etc...
		activeDelay: 	a Delay(100 msecs; 24 msecs remaining)
		suspendSemaphore: 	nil
		timingSemaphore: 	a Semaphore(a Process in DelayMicrosecondTicker>>waitForUserSi...etc...
		debug: 	false
		delayToStart: 	nil
		delayToStop: 	nil
		readyToSchedule: 	a Semaphore()
		readyToUnschedule: 	a Semaphore()


Delay>>schedule
	Receiver: a Delay(100 msecs; 54 msecs remaining)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	true
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762289536551106


Delay>>wait
	Receiver: a Delay(100 msecs; 52 msecs remaining)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	true
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762289536551106


Duration>>wait
	Receiver: 0:00:00:00.1
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nanos: 	100000000
		seconds: 	0


[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
	Receiver: a GLMAsyncTask
	Arguments and temporary variables: 
		aBlock: 	[ :isSmooth | isSmooth ]
		aCollection: 	#(false)
		callbackBlock: 	[ :isSmooth | self scrollToRight: isSmooth ]
		aPriority: 	40
		anIntegerMilliseconds: 	100
		result: 	nil
	Receiver's instance variables: 
		process: 	a Process in DelaySemaphoreScheduler>>schedule:
		callback: 	[ :isSmooth | self scrollToRight: isSmooth ]
		delay: 	100
		task: 	[ :isSmooth | isSmooth ]
		priority: 	40
		arguments: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	GLMAsyncTask>>execute:withArguments:callback:priority:delay:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
DelaySemaphoreScheduler>>schedule:
Delay>>schedule
Delay>>wait
Duration>>wait
[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
21 March 2020 9:25:36.527106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

GLMBrickHeightTraverser(GLMBrickLayoutTraverser)>>markDirtyAround:inContext:
	Receiver: a GLMBrickHeightTraverser
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
		aContextBrick: 	nil
	Receiver's instance variables: 
a GLMBrickHeightTraverser

GLMBrickLayouter>>markDependent:
	Receiver: a GLMBrickLayouter
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickLayouter

GLMBrickLayouter>>layoutIn:
	Receiver: a GLMBrickLayouter
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickLayouter

GLMBrick>>doLayout
	Receiver: a GLMBrick(911767296)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMTabSelectorBrick(703911168)
		submorphs: 	an OrderedCollection()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151348480) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper


GLMBrick>>layoutAfter:
	Receiver: a GLMBrick(911767296)
	Arguments and temporary variables: 
		aBlock: 	[ :b | b wrappedBounds bounds: aRectangle ]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMTabSelectorBrick(703911168)
		submorphs: 	an OrderedCollection()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151348480) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper


GLMBrick>>bounds:
	Receiver: a GLMBrick(911767296)
	Arguments and temporary variables: 
		aRectangle: 	(0@0) corner: (2@24)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMTabSelectorBrick(703911168)
		submorphs: 	an OrderedCollection()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151348480) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper


[ self bounds: (self brickBounds withHeight: self customHeight) ] in GLMBrick>>updateHeight
	Receiver: a GLMBrick(911767296)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMTabSelectorBrick(703911168)
		submorphs: 	an OrderedCollection()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151348480) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper


BlockClosure>>on:do:
	Receiver: [ self bounds: (self brickBounds withHeight: self customHeight) ]
	Arguments and temporary variables: 
		exception: 	Exception
		handlerAction: 	[ "just skip and do nothing" ]
	Receiver's instance variables: 
		outerContext: 	GLMBrick>>updateHeight
		startpc: 	59
		numArgs: 	0


GLMBrick>>updateHeight
	Receiver: a GLMBrick(911767296)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMTabSelectorBrick(703911168)
		submorphs: 	an OrderedCollection()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151348480) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper


GLMBrick>>height:
	Receiver: a GLMBrick(911767296)
	Arguments and temporary variables: 
		anObject: 	24
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMTabSelectorBrick(703911168)
		submorphs: 	an OrderedCollection()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (151348480) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper


GLMTabSelectorBrick(GLMFoundationBrick)>>extent:
	Receiver: a GLMTabSelectorBrick(703911168)
	Arguments and temporary variables: 
		aPoint: 	(2@24)
		left: 	0
		top: 	0
		right: 	2
		bottom: 	24
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2@24)
		owner: 	a PanelMorph(321374976)
		submorphs: 	an Array(a GLMBrick(911767296))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (431611648) [other:  (minHeight -> 24) (announcer -...etc...
		brickRoot: 	a GLMBrick(911767296)
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>bounds:
	Receiver: a GLMTabSelectorBrick(703911168)
	Arguments and temporary variables: 
		newBounds: 	(0@16) corner: (2@40)
		oldExtent: 	(50@50)
		newExtent: 	(2@24)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2@24)
		owner: 	a PanelMorph(321374976)
		submorphs: 	an Array(a GLMBrick(911767296))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (431611648) [other:  (minHeight -> 24) (announcer -...etc...
		brickRoot: 	a GLMBrick(911767296)
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


GLMTabSelectorBrick(Morph)>>layoutInBounds:
	Receiver: a GLMTabSelectorBrick(703911168)
	Arguments and temporary variables: 
		cellBounds: 	(0@0) corner: (2@40)
		box: 	(0@16) corner: (2@40)
		aSymbol: 	#bottomCenter
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (2@24)
		owner: 	a PanelMorph(321374976)
		submorphs: 	an Array(a GLMBrick(911767296))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (431611648) [other:  (minHeight -> 24) (announcer -...etc...
		brickRoot: 	a GLMBrick(911767296)
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill
		selectedIndex: 	nil
		font: 	nil
		tabs: 	nil


TableLayout>>layoutLeftToRight:in:
	Receiver: a TableLayout
	Arguments and temporary variables: 
		aMorph: 	a PanelMorph(321374976)
		newBounds: 	(0@0) corner: (50@40)
		inset: 	0
		extent: 	(50@40)
		block: 	[ :m | 
| sizeY sizeX props |
props := m layoutProperties ifNil: [ m ].
...etc...
		posX: 	0
		posY: 	0
		centering: 	nil
		extraPerCell: 	0
		amount: 	nil
		minX: 	0
		minY: 	0
		maxX: 	1073741823
		maxY: 	1073741823
		sum: 	1
		first: 	a LayoutCell
		width: 	2
		vFill: 	true
		size: 	(50@2)
		extra: 	0
		last: 	0
		n: 	1
		cell: 	a LayoutCell
		height: 	40
	Receiver's instance variables: 
		properties: 	a TableLayoutProperties
		minExtentCache: 	nil


TableLayout>>layout:in:
	Receiver: a TableLayout
	Arguments and temporary variables: 
		aMorph: 	a PanelMorph(321374976)
		box: 	(0@0) corner: (50@40)
		cells: 	nil
		arrangement: 	nil
		horizontal: 	nil
		newBounds: 	(0@0) corner: (50@40)
	Receiver's instance variables: 
		properties: 	a TableLayoutProperties
		minExtentCache: 	nil


PanelMorph(Morph)>>doLayoutIn:
	Receiver: a PanelMorph(321374976)
	Arguments and temporary variables: 
		layoutBounds: 	(0@0) corner: (50@40)
		box: 	nil
		priorBounds: 	(0@0) corner: (50@40)
		layout: 	a TableLayout
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a GLMTabSelectorBrick(703911168) a GLMPanelMorph(51794688))...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (782981376) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


[ self doLayoutIn: self layoutBounds ] in PanelMorph(Morph)>>computeFullBounds
	Receiver: a PanelMorph(321374976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a GLMTabSelectorBrick(703911168) a GLMPanelMorph(51794688))...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (782981376) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


BlockClosure>>on:do:
	Receiver: [ self doLayoutIn: self layoutBounds ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
"This should do it unless you don't screw up the bounds...etc...
	Receiver's instance variables: 
		outerContext: 	PanelMorph(Morph)>>computeFullBounds
		startpc: 	37
		numArgs: 	0


PanelMorph(Morph)>>computeFullBounds
	Receiver: a PanelMorph(321374976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a GLMTabSelectorBrick(703911168) a GLMPanelMorph(51794688))...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (782981376) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


PanelMorph(Morph)>>fullBounds
	Receiver: a PanelMorph(321374976)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a GLMTabSelectorBrick(703911168) a GLMPanelMorph(51794688))...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (782981376) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


PanelMorph(Morph)>>clipSubmorphs:
	Receiver: a PanelMorph(321374976)
	Arguments and temporary variables: 
		aBool: 	true
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a GLMTabSelectorBrick(703911168) a GLMPanelMorph(51794688))...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (782981376) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


LazyTabGroupMorph>>headerMorph:
	Receiver: a LazyTabGroupMorph(758115072)
	Arguments and temporary variables: 
		anObject: 	a PanelMorph(321374976)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (92744960)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	a GLMTabSelectorBrick(703911168)
		contentMorph: 	a GLMPanelMorph(765693696)
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	a GLMPanelMorph(51794688)
		headerMorph: 	a PanelMorph(321374976)
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>initialize
	Receiver: a LazyTabGroupMorph(758115072)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (92744960)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	a GLMTabSelectorBrick(703911168)
		contentMorph: 	a GLMPanelMorph(765693696)
		pageMorphs: 	an OrderedCollection()
		announcer: 	nil
		toolbarMorph: 	a GLMPanelMorph(51794688)
		headerMorph: 	a PanelMorph(321374976)
		tabSelectorWidth: 	nil


LazyTabGroupMorph class(Behavior)>>new
	Receiver: LazyTabGroupMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	TabGroupMorph
		methodDict: 	a MethodDictionary(#addLazyPage:label:->LazyTabGroupMorph>>#addLazy...etc...
		format: 	65552
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#LazyTabGroupMorph
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Widgets'
		announcer: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	nil
		aPresentation: 	a GLMCompositePresentation(id=795830528 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=996061952 tit...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #primitiveFail in Bitmap failed
21 March 2020 9:25:40.489106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Bitmap(ProtoObject)>>primitiveFailed:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		selector: 	#primitiveFail
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap(ProtoObject)>>primitiveFailed
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 

	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap(ProtoObject)>>primitiveFail
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 

	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap>>decompress:fromByteArray:at:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		bm: 	a Bitmap of length 307200
		ba: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 160 11 25...etc...
		index: 	6
		i: 	319668
		code: 	3
		n: 	522332161
		anInt: 	2089328647
		data: 	2072485646
		end: 	882867
		k: 	109101
		pastEnd: 	307201
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 16...etc...
		s: 	a ReadStream
		bitmap: 	a Bitmap of length 307200
		size: 	307200
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Form>>unhibernate
	Receiver: Form(640x480x32)
	Arguments and temporary variables: 
		resBits: 	nil
	Receiver's instance variables: 
		bits: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 160 11 ...etc...
		width: 	640
		height: 	480
		depth: 	32
		offset: 	nil


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(640x480x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	nil
		jpegCompressStruct: 	nil
		jpegErrorMgr2Struct: 	nil
		buffer: 	nil
		byteCount: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(640x480x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(640x480x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(640x480x32)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 160 11 ...etc...
		width: 	640
		height: 	480
		depth: 	32
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(640x480x32)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		anObject: 	Form(640x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
		handler: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		actionBaseUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	a GRSmallDictionary2(#halosEnabled->false)


WAImageTag>>document:mimeType:fileName:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(640x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


WAImageTag>>document:mimeType:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(640x480x32)
		mimeType: 	'image/jpg'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];
					html: [ :r | self renderForm: formDeImagen withRenderer: r ]));
	with: [ :r | self renderForm: formDeImagen withRenderer: html ] ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new dr...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderForm:withRenderer:
		startpc: 	84
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAHtmlCanvas>>paragraph:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :r | self renderForm: formDeImagen withRenderer: r ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];
					html: [ :r | self renderForm: formDeImagen withRenderer: r ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	nil
		r: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ :r | self renderForm: formDeImagen withRenderer: r ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	scri...etc...
		startpc: 	115
		numArgs: 	1


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ :r | self renderForm: formDeImagen withRenderer: r ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ :r | self renderForm: formDeImagen withRenderer: r ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ (self rendererClass context: self renderContext)
	render: aRenderable;
	flush ] in JQLoad(JSObject)>>render:on:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=2CEizRkG4-wsYukT","_k=JWZB5Bq-l09dY16j","1","2="+enc...etc...
	Arguments and temporary variables: 
		aRenderable: 	[ :r | self renderForm: formDeImagen withRenderer: r ]
		aStream: 	a GRPharoUtf8CodecStream
		document: 	a WAHtmlDocument
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=2CEizRkG4-wsYukT","_k=JWZB5Bq...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=2CEizRkG4-w...etc...
		callback: 	[ self requestContext respond: aBlock ]
		callbackId: 	'1'
		selector: 	nil


[ document := aDocument.
aBlock value ] in WARenderContext>>document:during:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		aDocument: 	a WAHtmlDocument
		aBlock: 	[ (self rendererClass context: self renderContext)
	render: aRenderable...etc...
		previous: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		actionBaseUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	a GRSmallDictionary2(#halosEnabled->false)


BlockClosure>>ensure:
	Receiver: [ document := aDocument.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ document := previous ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARenderContext>>document:during:
		startpc: 	25
		numArgs: 	0


WARenderContext>>document:during:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		aDocument: 	a WAHtmlDocument
		aBlock: 	[ (self rendererClass context: self renderContext)
	render: aRenderable...etc...
		previous: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		actionBaseUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	a GRSmallDictionary2(#halosEnabled->false)


JQLoad(JSObject)>>render:on:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=2CEizRkG4-wsYukT","_k=JWZB5Bq-l09dY16j","1","2="+enc...etc...
	Arguments and temporary variables: 
		aRenderable: 	[ :r | self renderForm: formDeImagen withRenderer: r ]
		aStream: 	a GRPharoUtf8CodecStream
		document: 	a WAHtmlDocument
	Receiver's instance variables: 
THERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #primitiveFail in Bitmap failed
21 March 2020 9:25:54.714106 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Bitmap(ProtoObject)>>primitiveFailed:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		selector: 	#primitiveFail
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap(ProtoObject)>>primitiveFailed
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 

	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap(ProtoObject)>>primitiveFail
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 

	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap>>decompress:fromByteArray:at:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		bm: 	a Bitmap of length 307200
		ba: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 160 11 25...etc...
		index: 	6
		i: 	319668
		code: 	3
		n: 	522332161
		anInt: 	2089328647
		data: 	2072485646
		end: 	882867
		k: 	109101
		pastEnd: 	307201
	Receiver's instance variables: 
a Bitmap of length 307200

Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 16...etc...
		s: 	a ReadStream
		bitmap: 	a Bitmap of length 307200
		size: 	307200
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Form>>unhibernate
	Receiver: Form(640x480x32)
	Arguments and temporary variables: 
		resBits: 	nil
	Receiver's instance variables: 
		bits: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 160 11 ...etc...
		width: 	640
		height: 	480
		depth: 	32
		offset: 	nil


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(640x480x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	nil
		jpegCompressStruct: 	nil
		jpegErrorMgr2Struct: 	nil
		buffer: 	nil
		byteCount: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(640x480x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(640x480x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(640x480x32)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	#[255 0 4 176 0 11 255 125 132 158 255 127 134 160 10 255 125 135 160 11 ...etc...
		width: 	640
		height: 	480
		depth: 	32
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(640x480x32)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		anObject: 	Form(640x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
		handler: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		actionBaseUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	a GRSmallDictionary2(#halosEnabled->false)


WAImageTag>>document:mimeType:fileName:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(640x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


WAImageTag>>document:mimeType:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(640x480x32)
		mimeType: 	'image/jpg'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];
					html: [ :r | self renderForm: formDeImagen withRenderer: r ]));
	with: [ :r | self renderForm: formDeImagen withRenderer: html ] ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new dr...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderForm:withRenderer:
		startpc: 	84
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAHtmlCanvas>>paragraph:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :r | self renderForm: formDeImagen withRenderer: r ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ];
					html: [ :r | self renderForm: formDeImagen withRenderer: r ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(640x480x32)
		html: 	nil
		r: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ :r | self renderForm: formDeImagen withRenderer: r ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	[ html image
	document: formDeImagen mimeType: 'image/jpg';
	scri...etc...
		startpc: 	115
		numArgs: 	1


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ :r | self renderForm: formDeImagen withRenderer: r ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ :r | self renderForm: formDeImagen withRenderer: r ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ (self rendererClass context: self renderContext)
	render: aRenderable;
	flush ] in JQLoad(JSObject)>>render:on:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=2CEizRkG4-wsYukT","_k=JWZB5Bq-l09dY16j","1","2="+enc...etc...
	Arguments and temporary variables: 
		aRenderable: 	[ :r | self renderForm: formDeImagen withRenderer: r ]
		aStream: 	a GRPharoUtf8CodecStream
		document: 	a WAHtmlDocument
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=2CEizRkG4-wsYukT","_k=JWZB5Bq...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=2CEizRkG4-w...etc...
		callback: 	[ self requestContext respond: aBlock ]
		callbackId: 	'1'
		selector: 	nil


[ document := aDocument.
aBlock value ] in WARenderContext>>document:during:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		aDocument: 	a WAHtmlDocument
		aBlock: 	[ (self rendererClass context: self renderContext)
	render: aRenderable...etc...
		previous: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		actionBaseUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	a GRSmallDictionary2(#halosEnabled->false)


BlockClosure>>ensure:
	Receiver: [ document := aDocument.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ document := previous ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARenderContext>>document:during:
		startpc: 	25
		numArgs: 	0


WARenderContext>>document:during:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		aDocument: 	a WAHtmlDocument
		aBlock: 	[ (self rendererClass context: self renderContext)
	render: aRenderable...etc...
		previous: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		actionBaseUrl: 	/poemas?_s=2CEizRkG4-wsYukT&_k=JWZB5Bq-l09dY16j
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	a GRSmallDictionary2(#halosEnabled->false)


JQLoad(JSObject)>>render:on:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=2CEizRkG4-wsYukT","_k=JWZB5Bq-l09dY16j","1","2="+enc...etc...
	Arguments and temporary variables: 
		aRenderable: 	[ :r | self renderForm: formDeImagen withRenderer: r ]
		aStream: 	a GRPharoUtf8CodecStream
		document: 	a WAHtmlDocument
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=2CEizRkG4-wsYukT","_k=JWZB5Bq...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=2CEizRkG4-w...etc...
		callback: 	[ self requestContext respond: aBlock ]
		callbackId: 	'1'
		selector: 	nil


[ :response | 
response
	doNotCache;
	contentType: self application contentType.
self render: aRenderable on: response stream ] in JQLoad(JQAjax)>>html:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=2CEizRkG4-wsYukT","_k=JWZB5Bq-l09dY16j","1","2="+enc...etc...
	Arguments and temporary variables: 
		aRenderable: 	[ :r | self renderForm: formDeImagen withRenderer: r ]
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=2CEizRkG4-wsYukT","_k=JWZB5Bq...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=2CEizRkG4-w...etc...
		callback: 	[ self requestContext respond: aBlock ]
		callbackId: 	'1'
		selector: 	nil


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/poemas?1&2=id163%2Cid163%2C-96%2C-593%2C201%2C493.453125&_s=2CEi...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :response | 
response
	doNotCache;
	contentType: self application con...etc...
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id163%2Cid163%2C-96%2C-5THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.074106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(19 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	19
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338295515106


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	36
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(19 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	19
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338295515106


WorldState>>interCyclePause:
	Receiver: a WorldState
	Arguments and temporary variables: 
		milliSecs: 	20
		wait: 	19
		wait2: 	19
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	58555811
		lastStepMessage: 	nil
		lastCycleTime: 	58565304
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(622739712)))
		lastAlarmTime: 	58565305
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	58555811
		lastStepMessage: 	nil
		lastCycleTime: 	58565304
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(622739712)))
		lastAlarmTime: 	58565305
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a Syste...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
WorldState>>interCyclePause:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.110106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.119106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.127106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.134106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.142106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.149106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.247106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

InsetBorder>>trackColorFrom:
	Receiver: (InsetBorder width: 1 color: (Color r: 0.6 g: 0.6 b: 0.8 alpha: 1.0))
	Arguments and temporary variables: 
		aMorph: 	a BorderedMorph(685448960)
	Receiver's instance variables: 
		baseColor: 	nil
		color: 	(Color r: 0.6 g: 0.6 b: 0.8 alpha: 1.0)
		width: 	1


BorderedMorph>>borderStyle
	Receiver: a BorderedMorph(685448960)
	Arguments and temporary variables: 
		style: 	(InsetBorder width: 1 color: (Color r: 0.6 g: 0.6 b: 0.8 alpha: 1.0))
	Receiver's instance variables: 
		bounds: 	(18.0@13.0) corner: (31.0@29.0)
		owner: 	a Morph(64697600)
		submorphs: 	#()
		fullBounds: 	nil
		color: 	(Color r: 0.6 g: 0.6 b: 0.8 alpha: 1.0)
		extension: 	a MorphExtension (749602048)[not visible] 
		borderWidth: 	1
		borderColor: 	#inset


BorderedMorph(Morph)>>privateMoveBy:
	Receiver: a BorderedMorph(685448960)
	Arguments and temporary variables: 
		delta: 	(-19.0@0.0)
		fill: 	(Color r: 0.6 g: 0.6 b: 0.8 alpha: 1.0)
		border: 	nil
	Receiver's instance variables: 
		bounds: 	(18.0@13.0) corner: (31.0@29.0)
		owner: 	a Morph(64697600)
		submorphs: 	#()
		fullBounds: 	nil
		color: 	(Color r: 0.6 g: 0.6 b: 0.8 alpha: 1.0)
		extension: 	a MorphExtension (749602048)[not visible] 
		borderWidth: 	1
		borderColor: 	#inset


BorderedMorph(Morph)>>privateFullMoveBy:
	Receiver: a BorderedMorph(685448960)
	Arguments and temporary variables: 
		delta: 	(-19.0@0.0)
	Receiver's instance variables: 
		bounds: 	(18.0@13.0) corner: (31.0@29.0)
		owner: 	a Morph(64697600)
		submorphs: 	#()
		fullBounds: 	nil
		color: 	(Color r: 0.6 g: 0.6 b: 0.8 alpha: 1.0)
		extension: 	a MorphExtension (749602048)[not visible] 
		borderWidth: 	1
		borderColor: 	#inset


[ :each | each privateFullMoveBy: delta ] in Morph>>privateFullMoveBy:
	Receiver: a Morph(64697600)
	Arguments and temporary variables: 
		delta: 	(-19.0@0.0)
		each: 	a BorderedMorph(685448960)
	Receiver's instance variables: 
		bounds: 	(18.0@13.0) corner: (31.0@29.0)
		owner: 	a RubScrollBar(557005056)
		submorphs: 	an Array(a BorderedMorph(685448960))
		fullBounds: 	(18.0@13.0) corner: (31.0@29.0)
		color: 	(Color r: 0.96 g: 0.96 b: 0.96 alpha: 1.0)
		extension: 	a MorphExtension (703292160) [eventHandler = a MorphicEventHandler] ...etc...


Array(SequenceableCollection)>>do:
	Receiver: an Array(a BorderedMorph(685448960))
	Arguments and temporary variables: 
		aBlock: 	[ :each | each privateFullMoveBy: delta ]
		index: 	1
	Receiver's instance variables: 
an Array(a BorderedMorph(685448960))

Morph>>privateFullMoveBy:
	Receiver: a Morph(64697600)
	Arguments and temporary variables: 
		delta: 	(-19.0@0.0)
	Receiver's instance variables: 
		bounds: 	(18.0@13.0) corner: (31.0@29.0)
		owner: 	a RubScrollBar(557005056)
		submorphs: 	an Array(a BorderedMorph(685448960))
		fullBounds: 	(18.0@13.0) corner: (31.0@29.0)
		color: 	(Color r: 0.96 g: 0.96 b: 0.96 alpha: 1.0)
		extension: 	a MorphExtension (703292160) [eventHandler = a MorphicEventHandler] ...etc...


[ :each | each privateFullMoveBy: delta ] in RubScrollBar(Morph)>>privateFullMoveBy:
	Receiver: a RubScrollBar(557005056)
	Arguments and temporary variables: 
		delta: 	(-19.0@0.0)
		each: 	a Morph(64697600)
	Receiver's instance variables: 
		bounds: 	(18.0@0.0) corner: (31.0@42.0)
		owner: 	a RubTextScrollPane(239610112)
		submorphs: 	an Array(a BorderedMorph(599077120) a Morph(64697600) a BorderedMorp...etc...
		fullBounds: 	(18.0@0.0) corner: (31.0@42.0)
		color: 	(Color r: 0.96 g: 0.96 b: 0.96 alpha: 1.0)
		extension: 	a MorphExtension (212609792) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	0
		borderColor: 	#inset
		model: 	a RubTextScrollPane(239610112)
		slider: 	a BorderedMorph(599077120)
		value: 	0.0
		setValueSelector: 	#vScrollbarValue:
		sliderShadow: 	a BorderedMorph(685448960)
		sliderColor: 	(Color r: 0.767 g: 0.763 b: 0.763 alpha: 1.0)
		descending: 	false
		upButton: 	a BorderedMorph(997490432)
		downButton: 	a BorderedMorph(491130112)
		pagingArea: 	a Morph(64697600)
		scrollDelta: 	0.0010095911155981827
		pageDelta: 	0.010095911155981827
		interval: 	0.009995002498750625
		timeOfMouseDown: 	nil
		timeOfLastScroll: 	nil
		nextPageDirection: 	nil
		currentScrollDelay: 	nil
		lastPaneColor: 	(Color r: 0.767 g: 0.763 b: 0.763 alpha: 1.0)
		showState: 	#whenNeeded


Array(SequenceableCollection)>>do:
	Receiver: an Array(a BorderedMorph(599077120) a Morph(64697600) a BorderedMorph(491130112) a Bordere...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | each privateFullMoveBy: delta ]
		index: 	2
	Receiver's instance variables: 
an Array(a BorderedMorph(599077120) a Morph(64697600) a BorderedMorph(491130112) a Bordere...etc...

RubScrollBar(Morph)>>privateFullMoveBy:
	Receiver: a RubScrollBar(557005056)
	Arguments and temporary variables: 
		delta: 	(-19.0@0.0)
	Receiver's instance variables: 
		bounds: 	(18.0@0.0) corner: (31.0@42.0)
		owner: 	a RubTextScrollPane(239610112)
		submorphs: 	an Array(a BorderedMorph(599077120) a Morph(64697600) a BorderedMorp...etc...
		fullBounds: 	(18.0@0.0) corner: (31.0@42.0)
		color: 	(Color r: 0.96 g: 0.96 b: 0.96 alpha: 1.0)
		extension: 	a MorphExtension (212609792) [eventHandler = a MorphicEventHandler] ...etc...
		borderWidth: 	0
		borderColor: 	#inset
		model: 	a RubTextScrollPane(239610112)
		slider: 	a BorderedMorph(599077120)
		value: 	0.0
		setValueSelector: 	#vScrollbarValue:
		sliderShadow: 	a BorderedMorph(685448960)
		sliderColor: 	(Color r: 0.767 g: 0.763 b: 0.763 alpha: 1.0)
		descending: 	false
		upButton: 	a BorderedMorph(997490432)
		downButton: 	a BorderedMorph(491130112)
		pagingArea: 	a Morph(64697600)
		scrollDelta: 	0.0010095911155981827
		pageDelta: 	0.010095911155981827
		interval: 	0.009995002498750625
		timeOfMouseDown: 	nil
		timeOfLastScroll: 	nil
		nextPageDirection: 	nil
		currentScrollDelay: 	nil
		lastPaneColor: 	(Color r: 0.767 g: 0.763 b: 0.763 alpha: 1.0)
		showState: 	#whenNeeded


[ :each | each privateFullMoveBy: delta ] in RubTextScrollPane(Morph)>>privateFullMoveBy:
	Receiver: a RubTextScrollPane(239610112)
	Arguments and temporary variables: 
		delta: 	(-19.0@0.0)
		each: 	a RubScrollBar(557005056)
	Receiver's instance variables: 
		bounds: 	(0.0@0.0) corner: (31.0@40.0)
		owner: 	a RubScrolledTextMorph(574156032)
		submorphs: 	an Array(a RubScrollBar(557005056) a TransformWithLayoutMorph(123195...etc...
		fullBounds: 	(0.0@0.0) corner: (31.0@42.0)
		color: 	Color transparent
		extension: 	a MorphExtension (370178816) [other:  (announcer -> an Announcer)]
		scroller: 	a TransformWithLayoutMorph(123195136)
		hScrollbar: 	a RubScrollBar(335769856)
		vScrollbar: 	a RubScrollBar(557005056)
		drawFocusBorder: 	true


Array(SequenceableCollection)>>do:
	Receiver: an Array(a RubScrollBar(557005056) a TransformWithLayoutMorph(123195136))
	Arguments and temporary variables: 
		aBlock: 	[ :each | each privateFullMoveBy: delta ]
		index: 	1
	Receiver's instance variables: 
an Array(a RubScrollBar(557005056) a TransformWithLayoutMorph(123195136))

RubTextScrollPane(Morph)>>privateFullMoveBy:
	Receiver: a RubTextScrollPane(239610112)
	Arguments and temporary variables: 
		delta: 	(-19.0@0.0)
	Receiver's instance variables: 
		bounds: 	(0.0@0.0) corner: (31.0@40.0)
		owner: 	a RubScrolledTextMorph(574156032)
		submorphs: 	an Array(a RubScrollBar(557005056) a TransformWithLayoutMorph(123195...etc...
		fullBounds: 	(0.0@0.0) corner: (31.0@42.0)
		color: 	Color transparent
		extension: 	a MorphExtension (370178816) [other:  (announcer -> an Announcer)]
		scroller: 	a TransformWithLayoutMorph(123195136)
		hScrollbar: 	a RubScrollBar(335769856)
		vScrollbar: 	a RubScrollBar(557005056)
		drawFocusBorder: 	true


RubTextScrollPane(Morph)>>position:
	Receiver: a RubTextScrollPane(239610112)
	Arguments and temporary variables: 
		aPoint: 	(0@0)
		delta: 	(-19.0@0.0)
		box: 	(19@0) corner: (50@42)
	Receiver's instance variables: 
		bounds: 	(0.0@0.0) corner: (31.0@40.0)
		owner: 	a RubScrolledTextMorph(574156032)
		submorphs: 	an Array(a RubScrollBar(557005056) a TransformWithLayoutMorph(123195...etc...
		fullBounds: 	(0.0@0.0) corner: (31.0@42.0)
		color: 	Color transparent
		extension: 	a MorphExtension (370178816) [other:  (announcer -> an Announcer)]
		scroller: 	a TransformWithLayoutMorph(123195136)
		hScrollbar: 	a RubScrollBar(335769856)
		vScrollbar: 	a RubScrollBar(557005056)
		drawFocusBorder: 	true


RubTextScrollPane>>position:
	Receiver: a RubTextScrollPane(239610112)
	Arguments and temporary variables: 
		aPoint: 	(0@0)
		previousBounds: 	(19.0@0.0) corner: (50.0@40.0)
	Receiver's instance variables: 
		bounds: 	(0.0@0.0) corner: (31.0@40.0)
		owner: 	a RubScrolledTextMorph(574156032)
		submorphs: 	an Array(a RubScrollBar(557005056) a TransformWithLayoutMorph(123195...etc...
		fullBounds: 	(0.0@0.0) corner: (31.0@42.0)
		color: 	Color transparent
		extension: 	a MorphExtension (370178816) [other:  (announcer -> an Announcer)]
		scroller: 	a TransformWithLayoutMorph(123195136)
		hScrollbar: 	a RubScrollBar(335769856)
		vScrollbar: 	a RubScrollBar(557005056)
		drawFocusBorder: 	true


RubScrolledTextMorph>>manageLayoutInBounds:
	Receiver: a RubScrolledTextMorph(574156032)
	Arguments and temporary variables: 
		aRectangle: 	(0@0) corner: (50@40)
		myBounds: 	(0@0) corner: (50@40)
		scrollpane: 	a RubTextScrollPane(239610112)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a RubTextScrollPane(239610112) a RubAdornmentDisplayer(5611...etc...
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (142006016) [other:  (announcer -> an Announcer)]
		hasEditingConflicts: 	nil
		hasUnacceptedEdits: 	nil
		alwaysAccept: 	nil
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	nil
		scrollPane: 	a RubTextScrollPane(239610112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(561124096))
		enabled: 	true
		highlights: 	an OrderedCollection()


RubScrolledTextMorph>>manageLayout
	Receiver: a RubScrolledTextMorph(574156032)
	Arguments and temporary variables: 
		ret: 	nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a RubTextScrollPane(239610112) a RubAdornmentDisplayer(5611...etc...
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (142006016) [other:  (announcer -> an Announcer)]
		hasEditingConflicts: 	nil
		hasUnacceptedEdits: 	nil
		alwaysAccept: 	nil
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	nil
		scrollPane: 	a RubTextScrollPane(239610112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(561124096))
		enabled: 	true
		highlights: 	an OrderedCollection()


RubScrolledTextMorph>>withoutRuler:
	Receiver: a RubScrolledTextMorph(574156032)
	Arguments and temporary variables: 
		aRuler: 	a RubTextSegmentIconDisplayer(101482240)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a RubTextScrollPane(239610112) a RubAdornmentDisplayer(5611...etc...
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (142006016) [other:  (announcer -> an Announcer)]
		hasEditingConflicts: 	nil
		hasUnacceptedEdits: 	nil
		alwaysAccept: 	nil
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	nil
		scrollPane: 	a RubTextScrollPane(239610112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(561124096))
		enabled: 	true
		highlights: 	an OrderedCollection()


RubScrolledTextMorph>>withoutRulerNamed:
	Receiver: a RubScrolledTextMorph(574156032)
	Arguments and temporary variables: 
		aKey: 	#textSegmentIcons
		m: 	a RubTextSegmentIconDisplayer(101482240)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a RubTextScrollPane(239610112) a RubAdornmentDisplayer(5611...etc...
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (142006016) [other:  (announcer -> an Announcer)]
		hasEditingConflicts: 	nil
		hasUnacceptedEdits: 	nil
		alwaysAccept: 	nil
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	nil
		scrollPane: 	a RubTextScrollPane(239610112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(561124096))
		enabled: 	true
		highlights: 	an OrderedCollection()


RubScrolledTextMorph>>withoutTextSegmentIcons
	Receiver: a RubScrolledTextMorph(574156032)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a RubTextScrollPane(239610112) a RubAdornmentDisplayer(5611...etc...
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (142006016) [other:  (announcer -> an Announcer)]
		hasEditingConflicts: 	nil
		hasUnacceptedEdits: 	nil
		alwaysAccept: 	nil
		setTextSelector: 	nil
		getTextSelector: 	#getText
		getSelectionSelector: 	#primarySelectionInterval
		setSelectionSelector: 	nil
		autoAccept: 	nil
		scrollPane: 	a RubTextScrollPane(239610112)
		rulers: 	a SortedCollection(a RubAdornmentDisplayer(561124096))
		enabled: 	true
		highlights: 	an OrderedCollection()


GLMMorphicPharoMethodRenderer(GLMMorphicRubricTextRenderer)>>render:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.586106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Rectangle>>setPoint:point:
	Receiver: nil corner: nil
	Arguments and temporary variables: 
		pt1: 	(0.0@31.0)
		pt2: 	(50.0@39.0)
	Receiver's instance variables: 
		origin: 	nil
		corner: 	nil


Rectangle class>>origin:corner:
	Receiver: Rectangle
	Arguments and temporary variables: 
		originPoint: 	(0.0@31.0)
		cornerPoint: 	(50.0@39.0)
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(size 111)
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{CharacterBlock}
		name: 	#Rectangle
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-BasicObjects'


Rectangle>>translateBy:
	Receiver: (0@0) corner: (50@8)
	Arguments and temporary variables: 
		factor: 	(0.0@31.0)
	Receiver's instance variables: 
		origin: 	(0@0)
		corner: 	(50@8)


GLMFoundationBrick(Morph)>>privateMoveBy:
	Receiver: a GLMFoundationBrick(114048768)
	Arguments and temporary variables: 
		delta: 	(0.0@31.0)
		fill: 	nil
		border: 	nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@8)
		owner: 	a GLMPanelMorph(192252672)
		submorphs: 	an Array(a GLMPagerBrick(302047488))
		fullBounds: 	(0@0) corner: (50@8)
		color: 	Color transparent
		extension: 	a MorphExtension (938293504) [other:  (brickApi -> a GLMBrickMorphWr...etc...
		brickRoot: 	a GLMPagerBrick(302047488)
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


GLMFoundationBrick(Morph)>>privateFullMoveBy:
	Receiver: a GLMFoundationBrick(114048768)
	Arguments and temporary variables: 
		delta: 	(0.0@31.0)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@8)
		owner: 	a GLMPanelMorph(192252672)
		submorphs: 	an Array(a GLMPagerBrick(302047488))
		fullBounds: 	(0@0) corner: (50@8)
		color: 	Color transparent
		extension: 	a MorphExtension (938293504) [other:  (brickApi -> a GLMBrickMorphWr...etc...
		brickRoot: 	a GLMPagerBrick(302047488)
		vResizing: 	#spaceFill
		hResizing: 	#spaceFill


[ :each | each privateFullMoveBy: delta ] in GLMPanelMorph(Morph)>>privateFullMoveBy:
	Receiver: a GLMPanelMorph(192252672)
	Arguments and temporary variables: 
		delta: 	(0.0@31.0)
		each: 	a GLMFoundationBrick(114048768)
	Receiver's instance variables: 
		bounds: 	(0.0@31.0) corner: (50.0@39.0)
		owner: 	a GLMPanelMorph(927032064)
		submorphs: 	an Array(a GLMFoundationBrick(114048768))
		fullBounds: 	(0.0@31.0) corner: (50.0@39.0)
		color: 	Color transparent
		extension: 	a MorphExtension (637798144) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


Array(SequenceableCollection)>>do:
	Receiver: an Array(a GLMFoundationBrick(114048768))
	Arguments and temporary variables: 
		aBlock: 	[ :each | each privateFullMoveBy: delta ]
		index: 	1
	Receiver's instance variables: 
an Array(a GLMFoundationBrick(114048768))

GLMPanelMorph(Morph)>>privateFullMoveBy:
	Receiver: a GLMPanelMorph(192252672)
	Arguments and temporary variables: 
		delta: 	(0.0@31.0)
	Receiver's instance variables: 
		bounds: 	(0.0@31.0) corner: (50.0@39.0)
		owner: 	a GLMPanelMorph(927032064)
		submorphs: 	an Array(a GLMFoundationBrick(114048768))
		fullBounds: 	(0.0@31.0) corner: (50.0@39.0)
		color: 	Color transparent
		extension: 	a MorphExtension (637798144) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


[ :each | each privateFullMoveBy: delta ] in GLMPanelMorph(Morph)>>privateFullMoveBy:
	Receiver: a GLMPanelMorph(927032064)
	Arguments and temporary variables: 
		delta: 	(0.0@31.0)
		each: 	a GLMPanelMorph(192252672)
	Receiver's instance variables: 
		bounds: 	(0.0@31.0) corner: (50.0@39.0)
		owner: 	a GLMPanelMorph(309314816)
		submorphs: 	an Array(a GLMPanelMorph(192252672))
		fullBounds: 	(0.0@31.0) corner: (50.0@39.0)
		color: 	Color transparent
		extension: 	a MorphExtension (673707264) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


Array(SequenceableCollection)>>do:
	Receiver: an Array(a GLMPanelMorph(192252672))
	Arguments and temporary variables: 
		aBlock: 	[ :each | each privateFullMoveBy: delta ]
		index: 	1
	Receiver's instance variables: 
an Array(a GLMPanelMorph(192252672))

GLMPanelMorph(Morph)>>privateFullMoveBy:
	Receiver: a GLMPanelMorph(927032064)
	Arguments and temporary variables: 
		delta: 	(0.0@31.0)
	Receiver's instance variables: 
		bounds: 	(0.0@31.0) corner: (50.0@39.0)
		owner: 	a GLMPanelMorph(309314816)
		submorphs: 	an Array(a GLMPanelMorph(192252672))
		fullBounds: 	(0.0@31.0) corner: (50.0@39.0)
		color: 	Color transparent
		extension: 	a MorphExtension (673707264) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


GLMPanelMorph(Morph)>>position:
	Receiver: a GLMPanelMorph(927032064)
	Arguments and temporary variables: 
		aPoint: 	(0@31)
		delta: 	(0.0@31.0)
		box: 	(0@0) corner: (50@8)
	Receiver's instance variables: 
		bounds: 	(0.0@31.0) corner: (50.0@39.0)
		owner: 	a GLMPanelMorph(309314816)
		submorphs: 	an Array(a GLMPanelMorph(192252672))
		fullBounds: 	(0.0@31.0) corner: (50.0@39.0)
		color: 	Color transparent
		extension: 	a MorphExtension (673707264) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


GLMPanelMorph(Morph)>>bounds:
	Receiver: a GLMPanelMorph(927032064)
	Arguments and temporary variables: 
		newBounds: 	(0@31) corner: (50@39)
		oldExtent: 	(50@40)
		newExtent: 	(50@8)
	Receiver's instance variables: 
		bounds: 	(0.0@31.0) corner: (50.0@39.0)
		owner: 	a GLMPanelMorph(309314816)
		submorphs: 	an Array(a GLMPanelMorph(192252672))
		fullBounds: 	(0.0@31.0) corner: (50.0@39.0)
		color: 	Color transparent
		extension: 	a MorphExtension (673707264) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


GLMPanelMorph(Morph)>>layoutInBounds:
	Receiver: a GLMPanelMorph(927032064)
	Arguments and temporary variables: 
		cellBounds: 	(0@31) corner: (50@39)
		box: 	(0@31) corner: (50@39)
		aSymbol: 	#center
	Receiver's instance variables: 
		bounds: 	(0.0@31.0) corner: (50.0@39.0)
		owner: 	a GLMPanelMorph(309314816)
		submorphs: 	an Array(a GLMPanelMorph(192252672))
		fullBounds: 	(0.0@31.0) corner: (50.0@39.0)
		color: 	Color transparent
		extension: 	a MorphExtension (673707264) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


GLMPanelMorph(Morph)>>layoutProportionallyIn:
	Receiver: a GLMPanelMorph(927032064)
	Arguments and temporary variables: 
		newBounds: 	(0@0) corner: (50@40)
		box: 	(0@31) corner: (50@39)
		frame: 	a LayoutFrame ( (0@(3/4)) + (0@1)px corner: (1@1) + (0@ -1)px ) 
	Receiver's instance variables: 
		bounds: 	(0.0@31.0) corner: (50.0@39.0)
		owner: 	a GLMPanelMorph(309314816)
		submorphs: 	an Array(a GLMPanelMorph(192252672))
		fullBounds: 	(0.0@31.0) corner: (50.0@39.0)
		color: 	Color transparent
		extension: 	a MorphExtension (673707264) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


[ :m | m layoutProportionallyIn: newBounds ] in ProportionalLayout>>layout:in:
	Receiver: a ProportionalLayout
	Arguments and temporary variables: 
		aMorph: 	a GLMPanelMorph(309314816)
		newBounds: 	(0@0) corner: (50@40)
		m: 	a GLMPanelMorph(927032064)
	Receiver's instance variables: 
a ProportionalLayout

Array(SequenceableCollection)>>do:
	Receiver: an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitterMorph(679466240) a G...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :m | m layoutProportionallyIn: newBounds ]
		index: 	5
	Receiver's instance variables: 
an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitterMorph(679466240) a G...etc...

GLMPanelMorph(Morph)>>submorphsDo:
	Receiver: a GLMPanelMorph(309314816)
	Arguments and temporary variables: 
		aBlock: 	[ :m | m layoutProportionallyIn: newBounds ]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMSystemWindow(836716800) named: User Interrupt
		submorphs: 	an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitt...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (980095232) [sticky] 
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...


ProportionalLayout>>layout:in:
	Receiver: a ProportionalLayout
	Arguments and temporary variables: 
		aMorph: 	a GLMPanelMorph(309314816)
		newBounds: 	(0@0) corner: (50@40)
	Receiver's instance variables: 
a ProportionalLayout

GLMPanelMorph(Morph)>>doLayoutIn:
	Receiver: a GLMPanelMorph(309314816)
	Arguments and temporary variables: 
		layoutBounds: 	(0@0) corner: (50@40)
		box: 	nil
		priorBounds: 	(0@0) corner: (50@40)
		layout: 	a ProportionalLayout
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMSystemWindow(836716800) named: User Interrupt
		submorphs: 	an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitt...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (980095232) [sticky] 
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...


[ self doLayoutIn: self layoutBounds ] in GLMPanelMorph(Morph)>>computeFullBounds
	Receiver: a GLMPanelMorph(309314816)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMSystemWindow(836716800) named: User Interrupt
		submorphs: 	an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitt...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (980095232) [sticky] 
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...


BlockClosure>>on:do:
	Receiver: [ self doLayoutIn: self layoutBounds ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
"This should do it unless you don't screw up the bounds...etc...
	Receiver's instance variables: 
		outerContext: 	GLMPanelMorph(Morph)>>computeFullBounds
		startpc: 	37
		numArgs: 	0


GLMPanelMorph(Morph)>>computeFullBounds
	Receiver: a GLMPanelMorph(309314816)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMSystemWindow(836716800) named: User Interrupt
		submorphs: 	an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitt...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (980095232) [sticky] 
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...


GLMPanelMorph(Morph)>>fullBounds
	Receiver: a GLMPanelMorph(309314816)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMSystemWindow(836716800) named: User Interrupt
		submorphs: 	an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitt...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (980095232) [sticky] 
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...


GLMPanelMorph(Morph)>>position:
	Receiver: a GLMPanelMorph(309314816)
	Arguments and temporary variables: 
		aPoint: 	(5@32)
		delta: 	(5.0@32.0)
		box: 	nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMSystemWindow(836716800) named: User Interrupt
		submorphs: 	an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitt...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (980095232) [sticky] 
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...


GLMPanelMorph(Morph)>>bounds:
	Receiver: a GLMPanelMorph(309314816)
	Arguments and temporary variables: 
		newBounds: 	(5@32) corner: (295@195)
		oldExtent: 	(50@40)
		newExtent: 	(290@163)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMSystemWindow(836716800) named: User Interrupt
		submorphs: 	an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitt...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (980095232) [sticky] 
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...


GLMPanelMorph(Morph)>>layoutInBounds:
	Receiver: a GLMPanelMorph(309314816)
	Arguments and temporary variables: 
		cellBounds: 	(5@32) corner: (295@195)
		box: 	(5@32) corner: (295@195)
		aSymbol: 	#topLeft
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMSystemWindow(836716800) named: User Interrupt
		submorphs: 	an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitt...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (980095232) [sticky] 
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...


GLMPanelMorph(Morph)>>layoutProportionallyIn:
	Receiver: a GLMPanelMorph(309314816)
	Arguments and temporary variables: 
		newBounds: 	(1@28.0) corner: (299@199)
		box: 	(5@32) corner: (295@195)
		frame: 	a LayoutFrame ( (0@0) + (4@4)px corner: (1@1) + (-4@ -4)px ) 
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	a GLMSystemWindow(836716800) named: User Interrupt
		submorphs: 	an Array(a ProportionalSplitterMorph(529851648) a ProportionalSplitt...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (980095232) [sticky] 
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...


[ :m | m layoutProportionallyIn: newBounds ] in ProportionalLayout>>layout:in:
	Receiver: a ProportionalLayout
	Arguments and temporary variables: 
		aMorph: 	a GLMSystemWindow(836716800) named: User Interrupt
		newBounds: 	(1@28.0) corner: (299@199)
		m: 	a GLMPanelMorph(309314816)
	Receiver's instance variables: 
a ProportionalLayout

Array(SequenceableCollection)>>do:
	Receiver: an Array(a WindowEdgeGripMorph(865355520) a WindowEdgeGripMorph(200983296) a WindowEdgeGri...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :m | m layoutProportionallyIn: newBounds ]
		index: 	10
	Receiver's instance variables: 
an Array(a WindowEdgeGripMorph(865355520) a WindowEdgeGripMorph(200983296) a WindowEdgeGri...etc...

GLMSystemWindow(Morph)>>submorphsDo:
	Receiver: a GLMSystemWindow(836716800) named: User Interrupt
	Arguments and temporary variables: 
		aBlock: 	[ :m | m layoutProportionallyIn: newBounds ]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (300@200)
		owner: 	nil
		submorphs: 	an Array(a WindowEdgeGripMorph(865355520) a WindowEdgeGripMorph(2009...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (1008756992) [eventHandler = a MorphicEventHandler]...etc...
THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:26.927106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

DelaySemaphoreScheduler>>schedule:
	Receiver: a DelaySemaphoreScheduler(345701632) on DelayMicrosecondTicker
	Arguments and temporary variables: 
		aDelay: 	a Delay(100 msecs; 42 msecs remaining)
	Receiver's instance variables: 
		ticker: 	a DelayMicrosecondTicker
		runTimerEventLoop: 	true
		timerEventLoop: 	a Process in DelayMicrosecondTicker>>waitForUserSignalled:orExp...etc...
		suspendedDelays: 	a Heap(a Delay(100 msecs; 81 msecs remaining) a DelayWaitTimeo...etc...
		activeDelay: 	a Delay(100 msecs; 40 msecs remaining)
		suspendSemaphore: 	nil
		timingSemaphore: 	a Semaphore(a Process in DelayMicrosecondTicker>>waitForUserSi...etc...
		debug: 	false
		delayToStart: 	nil
		delayToStop: 	a DelayWaitTimeout(300000 msecs)
		readyToSchedule: 	a Semaphore()
		readyToUnschedule: 	a Semaphore()


Delay>>schedule
	Receiver: a Delay(100 msecs; 39 msecs remaining)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	true
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338846973106


Delay>>wait
	Receiver: a Delay(100 msecs; 37 msecs remaining)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	true
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338846973106


Duration>>wait
	Receiver: 0:00:00:00.1
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nanos: 	100000000
		seconds: 	0


[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
	Receiver: a GLMAsyncTask
	Arguments and temporary variables: 
		aBlock: 	[ :isSmooth | isSmooth ]
		aCollection: 	#(false)
		callbackBlock: 	[ :isSmooth | self scrollToRight: isSmooth ]
		aPriority: 	40
		anIntegerMilliseconds: 	100
		result: 	nil
	Receiver's instance variables: 
		process: 	a Process in DelaySemaphoreScheduler>>schedule:
		callback: 	[ :isSmooth | self scrollToRight: isSmooth ]
		delay: 	100
		task: 	[ :isSmooth | isSmooth ]
		priority: 	40
		arguments: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	GLMAsyncTask>>execute:withArguments:callback:priority:delay:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
DelaySemaphoreScheduler>>schedule:
Delay>>schedule
Delay>>wait
Duration>>wait
[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:27.265106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

GLMPagerScrollBrick(GLMBrick)>>wrappedBounds
	Receiver: a GLMPagerScrollBrick(18709248)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMScrollPaneBandBrick(456502016))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (544588032) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		band: 	a GLMScrollPaneBandBrick(456502016)
		currentFocus: 	nil
		pagerModel: 	nil
		maxPanes: 	2
		focus: 	a Dictionary()
		currentScrollDelta: 	0
		animation: 	nil


GLMBrickWrapper>>isWidthDirty
	Receiver: a GLMBrickWrapper
	Arguments and temporary variables: 

	Receiver's instance variables: 
		brick: 	a GLMPagerScrollBrick(18709248)


GLMBrickLayouter>>markDependent:
	Receiver: a GLMBrickLayouter
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickLayouter

GLMBrickLayouter>>layoutIn:
	Receiver: a GLMBrickLayouter
	Arguments and temporary variables: 
		aBrick: 	a GLMBrickWrapper
	Receiver's instance variables: 
a GLMBrickLayouter

GLMPagerScrollBrick(GLMBrick)>>doLayout
	Receiver: a GLMPagerScrollBrick(18709248)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMScrollPaneBandBrick(456502016))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (544588032) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		band: 	a GLMScrollPaneBandBrick(456502016)
		currentFocus: 	nil
		pagerModel: 	nil
		maxPanes: 	2
		focus: 	a Dictionary()
		currentScrollDelta: 	0
		animation: 	nil


GLMPagerScrollBrick(GLMBrick)>>doLayoutForce
	Receiver: a GLMPagerScrollBrick(18709248)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMScrollPaneBandBrick(456502016))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (544588032) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		band: 	a GLMScrollPaneBandBrick(456502016)
		currentFocus: 	nil
		pagerModel: 	nil
		maxPanes: 	2
		focus: 	a Dictionary()
		currentScrollDelta: 	0
		animation: 	nil


GLMPagerScrollBrick(GLMBrick)>>addBrickBack:
	Receiver: a GLMPagerScrollBrick(18709248)
	Arguments and temporary variables: 
		aBrick: 	a GLMScrollPaneBandBrick(456502016)
		result: 	a GLMScrollPaneBandBrick(456502016)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMScrollPaneBandBrick(456502016))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (544588032) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		band: 	a GLMScrollPaneBandBrick(456502016)
		currentFocus: 	nil
		pagerModel: 	nil
		maxPanes: 	2
		focus: 	a Dictionary()
		currentScrollDelta: 	0
		animation: 	nil


GLMPagerScrollBrick>>band:
	Receiver: a GLMPagerScrollBrick(18709248)
	Arguments and temporary variables: 
		aBrick: 	a GLMScrollPaneBandBrick(456502016)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMScrollPaneBandBrick(456502016))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (544588032) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		band: 	a GLMScrollPaneBandBrick(456502016)
		currentFocus: 	nil
		pagerModel: 	nil
		maxPanes: 	2
		focus: 	a Dictionary()
		currentScrollDelta: 	0
		animation: 	nil


GLMPagerScrollBrick>>initialize
	Receiver: a GLMPagerScrollBrick(18709248)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection(a GLMScrollPaneBandBrick(456502016))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (544588032) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	a GLMBrickBounds
		brickApi: 	a GLMBrickWrapper
		band: 	a GLMScrollPaneBandBrick(456502016)
		currentFocus: 	nil
		pagerModel: 	nil
		maxPanes: 	2
		focus: 	a Dictionary()
		currentScrollDelta: 	0
		animation: 	nil


GLMPagerScrollBrick class(Behavior)>>new
	Receiver: GLMPagerScrollBrick
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	GLMBrick
		methodDict: 	a MethodDictionary(#animation->GLMPagerScrollBrick>>#animation #ban...etc...
		format: 	65551
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#GLMPagerScrollBrick
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Brick'
		announcer: 	nil
		users: 	nil


GLMPagerBrick>>newScrollBrick
	Receiver: a GLMPagerBrick(912220928)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (798618880) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	nil
		brickApi: 	nil
		firstCombination: 	nil
		pagerBar: 	nil
		scrollBrick: 	nil
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMPagerBrick>>pagerModel:
	Receiver: a GLMPagerBrick(912220928)
	Arguments and temporary variables: 
		aModel: 	a GLMPagerModel
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an OrderedCollection()
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (798618880) [other:  (brickRenderer -> a GLMBrickRe...etc...
		brickBounds: 	nil
		brickApi: 	nil
		firstCombination: 	nil
		pagerBar: 	nil
		scrollBrick: 	nil
		pagerModel: 	a GLMPagerModel
		showScrollBarWhenNeeded: 	nil


GLMMorphicPagerRenderer>>render:
	Receiver: a GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=274851072 title=nil pane=a GLMPane(185177856 inspector)...etc...
		pagerModel: 	a GLMPagerModel
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		container: 	nil


GLMMorphicPagerRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicPagerRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=274851072 title=nil pane=a GLMPane(185177856 inspe...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFinderRenderer
		methodDict: 	a MethodDictionary(#actOnPaneAdded:->GLMMorphicPagerRenderer>>#actO...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicPagerRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Pager-Glamour'


GLMMorphicRenderer>>renderPager:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aBrowser: 	a GLMPager(id=274851072 title=nil pane=a GLMPane(185177856 inspector)...etc...
	Receiver's instance variables: 
		window: 	nil


GLMPager>>renderGlamorouslyOn:
	Receiver: a GLMPager(id=274851072 title=nil pane=a GLMPane(185177856 inspector))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(185177856 inspector)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		transmissions: 	an OrderedCollection()
		panes: 	an OrderedCollection(a GLMPane(105172224 1))
		initialExtent: 	nil
		watcherPane: 	nil
		presentations: 	nil
		transmission: 	GLMTransmission (origins=an OrderedCollection() destination=nil)
		hasFixedSizePanes: 	true
		fixedSizePanes: 	2
		lastActivePresentation: 	nil
		firstTransmission: 	GLMTransmission (origins=an OrderedCollection() destination=...etc...
		scrollButtonIconRenderBlock: 	nil
		minimumPageNumberForScrollbar: 	2


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMPager(id=274851072 title=nil pane=a GLMPane(185177856 inspect...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMPager(id=274851072 title=nil pane=a GLMPane(185177856 inspector)...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMPager(id=274851072 title=nil pane=a GLMPane(185177856 inspe...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTDebuggerInspector(id=608814336 title=nil pane=a GLMPane(1851...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-Morphic-Renderer'


GLMMorphicRenderer>>renderTabbedCompositePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aCompositePresentation: 	a GTDebuggerInspector(id=608814336 title=nil pane=a GLM...etc...
	Receiver's instance variables: 
		window: 	nil


GLMTabbedArrangement>>renderGlamorouslyOn:
	Receiver: a GLMTabbedArrangement
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		composite: 	a GTDebuggerInspector(id=608814336 title=nil pane=a GLMPane(18517785...etc...


GTDebuggerInspector(GLMCompositePresentation)>>renderGlamorouslyOn:
	Receiver: a GTDebuggerInspector(id=608814336 title=nil pane=a GLMPane(185177856 inspector))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(185177856 inspector)
		title: 	nil
		titleIcon: 	nil
		transformation: 	nil
		actions: 	nil
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	nil
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	nil
		acceptsSelection: 	nil
		parentPrototype: 	nil
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	nil
		selectionDynamicActionsBlock: 	nil
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	nil
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		presentations: 	an OrderedCollection(a GLMPager(id=274851072 title=nil pane=a GL...etc...
		arrangement: 	a GLMTabbedArrangement
		presentationFilter: 	a GTInspectorTagFilter
		debugger: 	a GTGenericStackDebugger(id=650456320 title='User Interrupt' pane=a G...etc...
		notifyPaneRemoved: 	true


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GTDebuggerInspector(id=608814336 title=nil pane=a GLMPane(185177...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GTDebuggerInspector(id=608814336 title=nil pane=a GLMPane(185177856...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderWithTitleOrNil:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GTDebuggerInspector(id=608814336 title=nil pane=a GLMPane(1851...etc...
		morph: 	nil
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	nil


GLMMorphicTabbedRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMCompositePresentation(id=486571776 title=nil pane=a GLMPane...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicCompositeRenderer
		methodDict: 	a MethodDictionary(#actOnContextChanged:->GLMMorphicTabbedRenderer>...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicTabbedRenderer
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
	THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:27.446106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

DelaySemaphoreScheduler>>schedule:
	Receiver: a DelaySemaphoreScheduler(345701632) on DelayMicrosecondTicker
	Arguments and temporary variables: 
		aDelay: 	a Delay(100 msecs; 10 msecs remaining)
	Receiver's instance variables: 
		ticker: 	a DelayMicrosecondTicker
		runTimerEventLoop: 	true
		timerEventLoop: 	a Process in DelayMicrosecondTicker>>waitForUserSignalled:orExp...etc...
		suspendedDelays: 	a Heap(a Delay(100 msecs; 9 msecs remaining) a DelayWaitTimeou...etc...
		activeDelay: 	a Delay(100 msecs; 8 msecs remaining)
		suspendSemaphore: 	nil
		timingSemaphore: 	a Semaphore(a Process in DelayMicrosecondTicker>>waitForUserSi...etc...
		debug: 	false
		delayToStart: 	nil
		delayToStop: 	a DelayWaitTimeout(300000 msecs)
		readyToSchedule: 	a Semaphore()
		readyToUnschedule: 	a Semaphore()


Delay>>schedule
	Receiver: a Delay(100 msecs; 7 msecs remaining)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	true
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338847460106


Delay>>wait
	Receiver: a Delay(100 msecs; 6 msecs remaining)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	true
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338847460106


Duration>>wait
	Receiver: 0:00:00:00.1
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nanos: 	100000000
		seconds: 	0


[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
	Receiver: a GLMAsyncTask
	Arguments and temporary variables: 
		aBlock: 	[ :isSmooth | isSmooth ]
		aCollection: 	#(false)
		callbackBlock: 	[ :isSmooth | self scrollToRight: isSmooth ]
		aPriority: 	40
		anIntegerMilliseconds: 	100
		result: 	nil
	Receiver's instance variables: 
		process: 	a Process in DelaySemaphoreScheduler>>schedule:
		callback: 	[ :isSmooth | self scrollToRight: isSmooth ]
		delay: 	100
		task: 	[ :isSmooth | isSmooth ]
		priority: 	40
		arguments: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	GLMAsyncTask>>execute:withArguments:callback:priority:delay:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
DelaySemaphoreScheduler>>schedule:
Delay>>schedule
Delay>>wait
Duration>>wait
[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:27.614106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(100 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338847571106


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	36
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(100 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338847571106


Duration>>wait
	Receiver: 0:00:00:00.1
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nanos: 	100000000
		seconds: 	0


[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
	Receiver: a GLMAsyncTask
	Arguments and temporary variables: 
		aBlock: 	[ :isSmooth | isSmooth ]
		aCollection: 	#(false)
		callbackBlock: 	[ :isSmooth | self scrollToRight: isSmooth ]
		aPriority: 	40
		anIntegerMilliseconds: 	100
		result: 	nil
	Receiver's instance variables: 
		process: 	a Process in [ delaySemaphore wait ] in Delay>>wait
		callback: 	[ :isSmooth | self scrollToRight: isSmooth ]
		delay: 	100
		task: 	[ :isSmooth | isSmooth ]
		priority: 	40
		arguments: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	GLMAsyncTask>>execute:withArguments:callback:priority:delay:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
Duration>>wait
[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:27.978106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

FTTableMorph>>recalculateVerticalScrollBarVisibilityIfHidden:
	Receiver: a FTTableMorph(751768832)
	Arguments and temporary variables: 
		aBlock: 	[ ^ self ]
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a FTTableContainerMorph(871762688) a ScrollBar(512073472))
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (378662144) [other:  (announcer -> an Announcer) (k...etc...
		container: 	a FTTableContainerMorph(871762688)
		verticalScrollBar: 	a ScrollBar(512073472)
		horizontalScrollBar: 	nil
		selectionColor: 	nil
		showIndex: 	1
		dataSource: 	a GLMFastTableDataSource
		intercellSpacing: 	(3@1)
		rowHeight: 	20.333333333333336
		selectedRowIndexes: 	#()
		highlightedRowIndexes: 	#()
		selectionStrategy: 	a FTSimpleSelection
		columns: 	an Array(a FTColumn)
		secondarySelectionColor: 	nil
		headerColor: 	nil
		showColumnHeaders: 	false
		allowsDeselection: 	false
		needToggleAtMouseUp: 	false
		function: 	a FTSearchFunction
		resizable: 	true
		trialHSB: 	nil


FTTableMorph>>recalculateVerticalScrollBar
	Receiver: a FTTableMorph(751768832)
	Arguments and temporary variables: 
		interval: 	nil
		delta: 	nil
		pageDelta: 	nil
		visibleRows: 	nil
		numberOfRows: 	nil
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a FTTableContainerMorph(871762688) a ScrollBar(512073472))
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (378662144) [other:  (announcer -> an Announcer) (k...etc...
		container: 	a FTTableContainerMorph(871762688)
		verticalScrollBar: 	a ScrollBar(512073472)
		horizontalScrollBar: 	nil
		selectionColor: 	nil
		showIndex: 	1
		dataSource: 	a GLMFastTableDataSource
		intercellSpacing: 	(3@1)
		rowHeight: 	20.333333333333336
		selectedRowIndexes: 	#()
		highlightedRowIndexes: 	#()
		selectionStrategy: 	a FTSimpleSelection
		columns: 	an Array(a FTColumn)
		secondarySelectionColor: 	nil
		headerColor: 	nil
		showColumnHeaders: 	false
		allowsDeselection: 	false
		needToggleAtMouseUp: 	false
		function: 	a FTSearchFunction
		resizable: 	true
		trialHSB: 	nil


FTTableMorph>>refresh
	Receiver: a FTTableMorph(751768832)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a FTTableContainerMorph(871762688) a ScrollBar(512073472))
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (378662144) [other:  (announcer -> an Announcer) (k...etc...
		container: 	a FTTableContainerMorph(871762688)
		verticalScrollBar: 	a ScrollBar(512073472)
		horizontalScrollBar: 	nil
		selectionColor: 	nil
		showIndex: 	1
		dataSource: 	a GLMFastTableDataSource
		intercellSpacing: 	(3@1)
		rowHeight: 	20.333333333333336
		selectedRowIndexes: 	#()
		highlightedRowIndexes: 	#()
		selectionStrategy: 	a FTSimpleSelection
		columns: 	an Array(a FTColumn)
		secondarySelectionColor: 	nil
		headerColor: 	nil
		showColumnHeaders: 	false
		allowsDeselection: 	false
		needToggleAtMouseUp: 	false
		function: 	a FTSearchFunction
		resizable: 	true
		trialHSB: 	nil


FTTableMorph>>hideColumnHeaders
	Receiver: a FTTableMorph(751768832)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	an Array(a FTTableContainerMorph(871762688) a ScrollBar(512073472))
		fullBounds: 	nil
		color: 	Color white
		extension: 	a MorphExtension (378662144) [other:  (announcer -> an Announcer) (k...etc...
		container: 	a FTTableContainerMorph(871762688)
		verticalScrollBar: 	a ScrollBar(512073472)
		horizontalScrollBar: 	nil
		selectionColor: 	nil
		showIndex: 	1
		dataSource: 	a GLMFastTableDataSource
		intercellSpacing: 	(3@1)
		rowHeight: 	20.333333333333336
		selectedRowIndexes: 	#()
		highlightedRowIndexes: 	#()
		selectionStrategy: 	a FTSimpleSelection
		columns: 	an Array(a FTColumn)
		secondarySelectionColor: 	nil
		headerColor: 	nil
		showColumnHeaders: 	false
		allowsDeselection: 	false
		needToggleAtMouseUp: 	false
		function: 	a FTSearchFunction
		resizable: 	true
		trialHSB: 	nil


GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>specificTableMorphColumnsInitialization
	Receiver: a GLMMorphicFastTableRenderer
	Arguments and temporary variables: 
		presentation: 	a GLMFastTablePresentation(id=1043283712 title='Stack' pane=a GLM...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tableModel: 	a GLMFastTableDataSource
		tableMorph: 	a FTTableMorph(751768832)


GLMMorphicFastTableRenderer>>specificTableMorphInitializiation
	Receiver: a GLMMorphicFastTableRenderer
	Arguments and temporary variables: 

	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tableModel: 	a GLMFastTableDataSource
		tableMorph: 	a FTTableMorph(751768832)


GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>initializeTableMorph
	Receiver: a GLMMorphicFastTableRenderer
	Arguments and temporary variables: 
		presentation: 	a GLMFastTablePresentation(id=1043283712 title='Stack' pane=a GLM...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tableModel: 	a GLMFastTableDataSource
		tableMorph: 	a FTTableMorph(751768832)


GLMMorphicFastTableRenderer(GLMMorphicFTRenderer)>>render:
	Receiver: a GLMMorphicFastTableRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMFastTablePresentation(id=1043283712 title='Stack' pane=a GL...etc...
		container: 	a GLMPanelMorph(743493376)
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tableModel: 	a GLMFastTableDataSource
		tableMorph: 	a FTTableMorph(751768832)


GLMMorphicFastTableRenderer class(GLMMorphicWidgetRenderer class)>>render:from:
	Receiver: GLMMorphicFastTableRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMFastTablePresentation(id=1043283712 title='Stack' pane=a GL...etc...
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		superclass: 	GLMMorphicFTRenderer
		methodDict: 	a MethodDictionary(#createDataSourceFrom:->GLMMorphicFastTableRende...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#GLMMorphicFastTableRenderer
		classPool: 	a Dictionary()
		sharedPools: 	nil
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Glamour-FastTable-Morphic-Renderer'


GLMMorphicRenderer>>renderFastTablePresentation:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aPresentation: 	a GLMFastTablePresentation(id=1043283712 title='Stack' pane=a GL...etc...
	Receiver's instance variables: 
		window: 	nil


GLMFastTablePresentation>>renderGlamorouslyOn:
	Receiver: a GLMFastTablePresentation(id=1043283712 title='Stack' pane=a GLMPane(598223104 stack))
	Arguments and temporary variables: 
		aRenderer: 	a GLMMorphicRenderer
	Receiver's instance variables: 
		registry: 	a SubscriptionRegistry
		suspendAll: 	false
		suspendedAnnouncemets: 	an OrderedCollection()
		logger: 	a GLMNullLogger
		pane: 	a GLMPane(598223104 stack)
		title: 	'Stack'
		titleIcon: 	nil
		transformation: 	[ :aSession | self retrieveStackFrom: aSession ]
		actions: 	an OrderedCollection()
		condition: 	[ true ]
		implicitNotNil: 	true
		dynamicActionsBlock: 	[ :presentation | 
self
	actionsForPragmas: (aSymbolsColle...etc...
		color: 	nil
		customValidation: 	nil
		shouldValidate: 	false
		acceptsSelection: 	nil
		parentPrototype: 	a GLMFastTablePresentation(id=889975040 title='Stack' pane=a G...etc...
		registeredAnnouncers: 	nil
		updateActions: 	an OrderedCollection()
		selectionActions: 	an OrderedCollection()
		selectionDynamicActionsBlock: 	[ :presentation | 
self
	actionsForPragmas:
		(aS...etc...
		implicitAllNil: 	false
		rawSelectionTransmissions: 	an IdentitySet(GLMTransmission (origins=an OrderedCo...etc...
		statusPane: 	nil
		sourceLink: 	nil
		initializationBlock: 	nil
		cachedDisplayedValue: 	an OrderedCollection(GLMPagerScrollBrick(GLMBrick)>>wrapp...etc...
		labelActionBlock: 	nil
		portChangeActions: 	an OrderedCollection()
		wantsSteps: 	nil
		stepTime: 	nil
		stepCondition: 	nil
		wantsAutomaticRefresh: 	nil
		format: 	nil
		icon: 	nil
		searchBlock: 	nil
		filterBlock: 	nil
		amountToShowBlock: 	nil
		allowsMultipleSelection: 	false
		allowsDeselection: 	false
		tagsStyle: 	nil
		helpMessage: 	nil
		sortBlock: 	nil
		textBackgroundColor: 	nil
		dropOnItemBlock: 	nil
		allowDropOnItemBlock: 	nil
		allowItemDragBlock: 	nil
		transformDraggedItemBlock: 	nil
		allowsRecursiveSearch: 	nil
		columns: 	an OrderedCollection(a GLMTableColumn a GLMTableColumn a GLMTableColum...etc...
		children: 	[ #() ]
		rootsExpanded: 	nil
		shouldShowHeader: 	false
		parameters: 	a Dictionary('shouldUseCache'->true )


GLMMorphicRenderer(GLMRenderer)>>render:
	Receiver: a GLMMorphicRenderer
	Arguments and temporary variables: 
		aRenderable: 	a GLMFastTablePresentation(id=1043283712 title='Stack' pane=a GLMP...etc...
	Receiver's instance variables: 
		window: 	nil


GLMMorphicTabbedRenderer(GLMMorphicWidgetRenderer)>>renderObject:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		anObject: 	a GLMFastTablePresentation(id=1043283712 title='Stack' pane=a GLMPane...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	a LazyTabGroupMorph(747225856)


[ self renderObject: each ] in [ :each | 
tabs
	addLazyPage: [ self renderObject: each ]
	label: (self titleOrIconOf: each in: tabs)
	toolbar: (self renderToolbarForPresentation: each inMorph: tabs)
	action: (self labelActionBrickFor: each) ] in GLMMorphicTabbedRenderer>>render:
	Receiver: a GLMMorphicTabbedRenderer
	Arguments and temporary variables: 
		index: 	1
		aPresentation: 	a GLMCompositePresentation(id=144353024 title=nil pane=a GLMPane...etc...
		presentations: 	an OrderedCollection(a GLMFastTablePresentation(id=1043283712 ti...etc...
		each: 	a GLMFastTablePresentation(id=1043283712 title='Stack' pane=a GLMPane(598...etc...
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		tabs: 	a LazyTabGroupMorph(747225856)


LazyTabPage>>actualPageMorph
	Receiver: a LazyTabPage(559031552)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (50@40)
		owner: 	nil
		submorphs: 	#()
		fullBounds: 	nil
		color: 	Color blue
		extension: 	a MorphExtension (818401536)
		borderWidth: 	1
		borderColor: 	Color black
		actualPageMorph: 	nil
		labelMorph: 	'Stack'
		lazyPageMorphCreation: 	[ self renderObject: each ]
		toolbar: 	a ToolDockingBarMorph(242387712)


LazyTabGroupMorph>>pageAt:
	Receiver: a LazyTabGroupMorph(747225856)
	Arguments and temporary variables: 
		index: 	1
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	an Array(a GLMPanelMorph(962039040) a PanelMorph(586297088))
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (170203904)
		borderWidth: 	0
		borderColor: 	Color yellow
		model: 	nil
		tabSelectorMorph: 	a GLMTabSelectorBrick(169332992)
		contentMorph: 	a GLMPanelMorph(962039040)
		pageMorphs: 	an OrderedCollection(a LazyTabPage(559031552))
		announcer: 	a GLMAnnouncer
		toolbarMorph: 	a GLMPanelMorph(567527680)
		headerMorph: 	a PanelMorph(586297088)
		tabSelectorWidth: 	nil


LazyTabGroupMorph>>updatePageIndex:
	Receiver: a LazyTabGroupMorph(747225856)
	Arguments and temporary variables: 
		index: 	1
		p: 	nil
		oldPage: 	a GLMTabLabelBrick(82605312)
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (200@100)
		owner: 	nil
		submorphs: 	an Array(a GLMPanelMorph(962039040) a PanelMorph(586297088))
		fTHERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:28.292106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

RxsPiece>>initializeAtom:min:max:
	Receiver: a RxsPiece
	Arguments and temporary variables: 
		anAtom: 	a RxsRegex
		minOccurrences: 	1
		maxOccurrences: 	1
	Receiver's instance variables: 
		atom: 	nil
		min: 	nil
		max: 	nil


RxsPiece>>initializeAtom:
	Receiver: a RxsPiece
	Arguments and temporary variables: 
		anAtom: 	a RxsRegex
	Receiver's instance variables: 
		atom: 	nil
		min: 	nil
		max: 	nil


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	a RxsRegex
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	$>


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	$>


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	$>


RxParser>>atom
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	$>


RxParser>>piece
	Receiver: a RxParser
	Arguments and temporary variables: 
		atom: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	$>


RxParser>>branch
	Receiver: a RxParser
	Arguments and temporary variables: 
		piece: 	nil
		branch: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	$>


RxParser>>regex
	Receiver: a RxParser
	Arguments and temporary variables: 
		branch: 	nil
		regex: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	$>


RxParser>>parseStream:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		tree: 	nil
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	$>


RxParser>>parse:
	Receiver: a RxParser
	Arguments and temporary variables: 
		aString: 	'(([^[:cntrl:]]*)>>>\3?([^[:cntrl:]]*))'
	Receiver's instance variables: 
		input: 	a ReadStream
		lookahead: 	$>


ByteString(String)>>asRegex
	Receiver: '(([^[:cntrl:]]*)>>>\3?([^[:cntrl:]]*))'
	Arguments and temporary variables: 

	Receiver's instance variables: 
'(([^[:cntrl:]]*)>>>\3?([^[:cntrl:]]*))'

PharoDocCommentNode class>>docCommentRangesIn:
	Receiver: PharoDocCommentNode
	Arguments and temporary variables: 
		aText: 	'Schedule this Delay, then wait on its semaphore. The current process wi...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#asTriplet->PharoDocCommentNode>>#asTriplet #exp...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PharoDocCommentNode
		classPool: 	a Dictionary(#DocCommentEnabled->true )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'PharoDocComment-Base'


PharoDocCommentNode class>>parseDocComments:
	Receiver: PharoDocCommentNode
	Arguments and temporary variables: 
		aRBCommentNode: 	a RBComment "Schedule this Delay, then wait on its semaphore. T...etc...
		ranges: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#asTriplet->PharoDocCommentNode>>#asTriplet #exp...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PharoDocCommentNode
		classPool: 	a Dictionary(#DocCommentEnabled->true )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'PharoDocComment-Base'


RBComment>>pharoDocCommentNodes
	Receiver: a RBComment "Schedule this Delay, then wait on its semaphore. The current process will be ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		contents: 	'Schedule this Delay, then wait on its semaphore. The current process...etc...
		start: 	7


SHRBTextStyler>>styleDocComment:
	Receiver: a SHRBTextStyler
	Arguments and temporary variables: 
		aRBComment: 	a RBComment "Schedule this Delay, then wait on its semaphore. The c...etc...
	Receiver's instance variables: 
		backgroundProcess: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		monitor: 	a Monitor
		view: 	a RubShoutStylerDecorator
		stylingEnabled: 	true
		charAttr: 	an Array(an Array(a TextColor code: Color black) an Array(a TextColor...etc...
		parentheseLevel: 	0
		bracketLevel: 	0
		classOrMetaClass: 	Delay
		font: 	nil
		isForWorkspace: 	nil
		pixelHeight: 	13.333333333333334
		workspace: 	nil


[ :comment | self styleDocComment: comment ] in SHRBTextStyler>>visitMethodComments:
	Receiver: a SHRBTextStyler
	Arguments and temporary variables: 
		comments: 	an Array(a RBComment "Schedule this Delay, then wait on its semaphore...etc...
		comment: 	a RBComment "Schedule this Delay, then wait on its semaphore. The curr...etc...
	Receiver's instance variables: 
		backgroundProcess: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		monitor: 	a Monitor
		view: 	a RubShoutStylerDecorator
		stylingEnabled: 	true
		charAttr: 	an Array(an Array(a TextColor code: Color black) an Array(a TextColor...etc...
		parentheseLevel: 	0
		bracketLevel: 	0
		classOrMetaClass: 	Delay
		font: 	nil
		isForWorkspace: 	nil
		pixelHeight: 	13.333333333333334
		workspace: 	nil


Array(SequenceableCollection)>>do:
	Receiver: an Array(a RBComment "Schedule this Delay, then wait on its semaphore. The current process...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :comment | self styleDocComment: comment ]
		index: 	1
	Receiver's instance variables: 
an Array(a RBComment "Schedule this Delay, then wait on its semaphore. The current process...etc...

SHRBTextStyler>>visitMethodComments:
	Receiver: a SHRBTextStyler
	Arguments and temporary variables: 
		comments: 	an Array(a RBComment "Schedule this Delay, then wait on its semaphore...etc...
	Receiver's instance variables: 
		backgroundProcess: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		monitor: 	a Monitor
		view: 	a RubShoutStylerDecorator
		stylingEnabled: 	true
		charAttr: 	an Array(an Array(a TextColor code: Color black) an Array(a TextColor...etc...
		parentheseLevel: 	0
		bracketLevel: 	0
		classOrMetaClass: 	Delay
		font: 	nil
		isForWorkspace: 	nil
		pixelHeight: 	13.333333333333334
		workspace: 	nil


SHRBTextStyler>>visitMethodNode:
	Receiver: a SHRBTextStyler
	Arguments and temporary variables: 
		aMethodNode: 	wait
	"Schedule this Delay, then wait on its semaphore. The curren...etc...
		link: 	nil
	Receiver's instance variables: 
		backgroundProcess: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		monitor: 	a Monitor
		view: 	a RubShoutStylerDecorator
		stylingEnabled: 	true
		charAttr: 	an Array(an Array(a TextColor code: Color black) an Array(a TextColor...etc...
		parentheseLevel: 	0
		bracketLevel: 	0
		classOrMetaClass: 	Delay
		font: 	nil
		isForWorkspace: 	nil
		pixelHeight: 	13.333333333333334
		workspace: 	nil


RBMethodNode>>acceptVisitor:
	Receiver: wait
	"Schedule this Delay, then wait on its semaphore. The current process will be suspen...etc...
	Arguments and temporary variables: 
		aProgramNodeVisitor: 	a SHRBTextStyler
	Receiver's instance variables: 
		parent: 	nil
		properties: 	a SmallDictionary(#comments->an Array(a RBComment "Schedule this De...etc...
		scope: 	an OCMethodScope 3
		selector: 	#wait
		keywordsPositions: 	an IntegerArray(1)
		body: 	RBSequenceNode(self schedule.
[ delaySemaphore wait ]
	ifCurtailed: [ sel...etc...
		source: 	'wait
	"Schedule this Delay, then wait on its semaphore. The current pr...etc...
		arguments: 	#()
		pragmas: 	nil
		replacements: 	a SortedCollection()
		nodeReplacements: 	an IdentityDictionary()
		compilationContext: 	a CompilationContext


SHRBTextStyler>>style:ast:
	Receiver: a SHRBTextStyler
	Arguments and temporary variables: 
		aText: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The ...etc...
		ast: 	wait
	"Schedule this Delay, then wait on its semaphore. The current proces...etc...
	Receiver's instance variables: 
		backgroundProcess: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		monitor: 	a Monitor
		view: 	a RubShoutStylerDecorator
		stylingEnabled: 	true
		charAttr: 	an Array(an Array(a TextColor code: Color black) an Array(a TextColor...etc...
		parentheseLevel: 	0
		bracketLevel: 	0
		classOrMetaClass: 	Delay
		font: 	nil
		isForWorkspace: 	nil
		pixelHeight: 	13.333333333333334
		workspace: 	nil


SHRBTextStyler>>privateStyle:
	Receiver: a SHRBTextStyler
	Arguments and temporary variables: 
		aText: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The ...etc...
		ast: 	wait
	"Schedule this Delay, then wait on its semaphore. The current proces...etc...
	Receiver's instance variables: 
		backgroundProcess: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		monitor: 	a Monitor
		view: 	a RubShoutStylerDecorator
		stylingEnabled: 	true
		charAttr: 	an Array(an Array(a TextColor code: Color black) an Array(a TextColor...etc...
		parentheseLevel: 	0
		bracketLevel: 	0
		classOrMetaClass: 	Delay
		font: 	nil
		isForWorkspace: 	nil
		pixelHeight: 	13.333333333333334
		workspace: 	nil


SHRBTextStyler(SHTextStyler)>>style:
	Receiver: a SHRBTextStyler
	Arguments and temporary variables: 
		aText: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The ...etc...
	Receiver's instance variables: 
		backgroundProcess: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		monitor: 	a Monitor
		view: 	a RubShoutStylerDecorator
		stylingEnabled: 	true
		charAttr: 	an Array(an Array(a TextColor code: Color black) an Array(a TextColor...etc...
		parentheseLevel: 	0
		bracketLevel: 	0
		classOrMetaClass: 	Delay
		font: 	nil
		isForWorkspace: 	nil
		pixelHeight: 	13.333333333333334
		workspace: 	nil


[ ^ self styler style: aText ] in RubShoutStylerDecorator>>style:
	Receiver: a RubShoutStylerDecorator
	Arguments and temporary variables: 
		aText: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The ...etc...
	Receiver's instance variables: 
		next: 	a RubCurrentLineBarDecorator
		styler: 	a SHRBTextStyler
		shoutIsAvailable: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		replaceStart: 	1
		replaceStop: 	228


BlockClosure>>on:do:
	Receiver: [ ^ self styler style: aText ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
ex logCr.
^ aText ]
	Receiver's instance variables: 
		outerContext: 	RubShoutStylerDecorator>>style:
		startpc: 	38
		numArgs: 	0


RubShoutStylerDecorator>>style:
	Receiver: a RubShoutStylerDecorator
	Arguments and temporary variables: 
		aText: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The ...etc...
	Receiver's instance variables: 
		next: 	a RubCurrentLineBarDecorator
		styler: 	a SHRBTextStyler
		shoutIsAvailable: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		replaceStart: 	1
		replaceStop: 	228


[ aText addAttribute: self defaultFontChange.
next text: (text := self styler format: aText).
replaceStart := 1.
replaceStop := text size.
self style: text ] in RubShoutStylerDecorator>>text:
	Receiver: a RubShoutStylerDecorator
	Arguments and temporary variables: 
		aText: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The ...etc...
	Receiver's instance variables: 
		next: 	a RubCurrentLineBarDecorator
		styler: 	a SHRBTextStyler
		shoutIsAvailable: 	nil
		text: 	a Text for 'wait
	"Schedule this Delay, then wait on its semaphore. The c...etc...
		replaceStart: 	1
		replaceStop: 	228


BlockClosure>>ensure:
	Receiver: [ aText addAttribute: self defaultFontChange.
next text: (text := self styler format: aTex...etc...
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:28.586106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(100 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338848474106


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	36
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(100 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338848474106


Duration>>wait
	Receiver: 0:00:00:00.1
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nanos: 	100000000
		seconds: 	0


[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
	Receiver: a GLMAsyncTask
	Arguments and temporary variables: 
		aBlock: 	[ :isSmooth | isSmooth ]
		aCollection: 	#(false)
		callbackBlock: 	[ :isSmooth | self scrollToRight: isSmooth ]
		aPriority: 	40
		anIntegerMilliseconds: 	100
		result: 	nil
	Receiver's instance variables: 
		process: 	a Process in [ delaySemaphore wait ] in Delay>>wait
		callback: 	[ :isSmooth | self scrollToRight: isSmooth ]
		delay: 	100
		task: 	[ :isSmooth | isSmooth ]
		priority: 	40
		arguments: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	GLMAsyncTask>>execute:withArguments:callback:priority:delay:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
Duration>>wait
[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:28.754106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(100 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338848705106


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	36
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(100 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	100
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3762338848705106


Duration>>wait
	Receiver: 0:00:00:00.1
	Arguments and temporary variables: 

	Receiver's instance variables: 
		nanos: 	100000000
		seconds: 	0


[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
	Receiver: a GLMAsyncTask
	Arguments and temporary variables: 
		aBlock: 	[ :isSmooth | isSmooth ]
		aCollection: 	#(false)
		callbackBlock: 	[ :isSmooth | self scrollToRight: isSmooth ]
		aPriority: 	40
		anIntegerMilliseconds: 	100
		result: 	nil
	Receiver's instance variables: 
		process: 	a Process in [ delaySemaphore wait ] in Delay>>wait
		callback: 	[ :isSmooth | self scrollToRight: isSmooth ]
		delay: 	100
		task: 	[ :isSmooth | isSmooth ]
		priority: 	40
		arguments: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	GLMAsyncTask>>execute:withArguments:callback:priority:delay:
		startpc: 	74
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
Duration>>wait
[ | result |
anIntegerMilliseconds > 0
	ifTrue: [ anIntegerMilliseconds milliSeconds wait ].
result := aBlock valueWithEnoughArguments: aCollection.
"we use it to pass result from background thread and execute callback block in UI thread"
UIManager default
	defer: [ self complete: result callback: callbackBlock ] ] in GLMAsyncTask>>execute:withArguments:callback:priority:delay:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
22 March 2020 11:07:28.926106 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MorphExtension>>borderStyle:
	Receiver: a MorphExtension (538559232) [balloonText]  [other:  (noBorder -> true) (noFill -> true) (...etc...
	Arguments and temporary variables: 
		anObject: 	(SimpleBorder width: 0 color: Color transparent)
	Receiver's instance variables: 
		locked: 	false
		visible: 	true
		sticky: 	false
		balloonText: 	'Relinquish debugger control and proceed
execution from the curren...etc...
		externalName: 	nil
		eventHandler: 	nil
		otherProperties: 	a SmallIdentityDictionary(#noBorder->true #noFill->true #wants...etc...
		fillStyle: 	a SolidFillStyle(Color transparent)
		layoutPolicy: 	a TableLayout
		layoutFrame: 	nil
		layoutProperties: 	a TableLayoutProperties
		borderStyle: 	(SimpleBorder width: 0 color: Color transparent)
		cornerStyle: 	nil
		actionMap: 	nil
		clipSubmorphs: 	true


GLMPluggableButtonMorph(PluggableButtonMorph)>>changed
	Receiver: a GLMPluggableButtonMorph(740594944)
	Arguments and temporary variables: 
		lc: 	nil
		pc: 	nil
		bs: 	(SimpleBorder width: 0 color: Color transparent)
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1049.0@115.0)
		owner: 	a ToolDockingBarMorph(799119104)
		submorphs: 	an Array(an AlignmentMorph(432583936))
		fullBounds: 	(987@91) corner: (1049@115)
		color: 	Color transparent
		extension: 	a MorphExtension (538559232) [balloonText]  [other:  (noBorder -> tr...etc...
		borderWidth: 	0
		borderColor: 	#simple
		model: 	a GLMGenericAction
		label: 	'Proceed'
		icon: 	Form(7x10x32)
		getIconSelector: 	nil
		getStateSelector: 	nil
		actionSelector: 	#morphicActOn:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	an Array(a GLMFastTablePresentation(id=136086784 title='Stack' pane=...etc...
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	nil
		getFontSelector: 	nil
		labelMorph: 	a LabelMorph(141031168)'Proceed'
		iconMorph: 	an ImageMorph(566399744)
		iconPosition: 	#left
		lastState: 	false


GLMPluggableButtonMorph(PluggableButtonMorph)>>paneColorChanged
	Receiver: a GLMPluggableButtonMorph(740594944)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1049.0@115.0)
		owner: 	a ToolDockingBarMorph(799119104)
		submorphs: 	an Array(an AlignmentMorph(432583936))
		fullBounds: 	(987@91) corner: (1049@115)
		color: 	Color transparent
		extension: 	a MorphExtension (538559232) [balloonText]  [other:  (noBorder -> tr...etc...
		borderWidth: 	0
		borderColor: 	#simple
		model: 	a GLMGenericAction
		label: 	'Proceed'
		icon: 	Form(7x10x32)
		getIconSelector: 	nil
		getStateSelector: 	nil
		actionSelector: 	#morphicActOn:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	an Array(a GLMFastTablePresentation(id=136086784 title='Stack' pane=...etc...
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	nil
		getFontSelector: 	nil
		labelMorph: 	a LabelMorph(141031168)'Proceed'
		iconMorph: 	an ImageMorph(566399744)
		iconPosition: 	#left
		lastState: 	false


GLMPluggableButtonMorph(PluggableButtonMorph)>>adoptColor:
	Receiver: a GLMPluggableButtonMorph(740594944)
	Arguments and temporary variables: 
		aColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1049.0@115.0)
		owner: 	a ToolDockingBarMorph(799119104)
		submorphs: 	an Array(an AlignmentMorph(432583936))
		fullBounds: 	(987@91) corner: (1049@115)
		color: 	Color transparent
		extension: 	a MorphExtension (538559232) [balloonText]  [other:  (noBorder -> tr...etc...
		borderWidth: 	0
		borderColor: 	#simple
		model: 	a GLMGenericAction
		label: 	'Proceed'
		icon: 	Form(7x10x32)
		getIconSelector: 	nil
		getStateSelector: 	nil
		actionSelector: 	#morphicActOn:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	an Array(a GLMFastTablePresentation(id=136086784 title='Stack' pane=...etc...
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	nil
		getFontSelector: 	nil
		labelMorph: 	a LabelMorph(141031168)'Proceed'
		iconMorph: 	an ImageMorph(566399744)
		iconPosition: 	#left
		lastState: 	false


GLMPluggableButtonMorph(PluggableButtonMorph)>>adoptPaneColor:
	Receiver: a GLMPluggableButtonMorph(740594944)
	Arguments and temporary variables: 
		aColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1049.0@115.0)
		owner: 	a ToolDockingBarMorph(799119104)
		submorphs: 	an Array(an AlignmentMorph(432583936))
		fullBounds: 	(987@91) corner: (1049@115)
		color: 	Color transparent
		extension: 	a MorphExtension (538559232) [balloonText]  [other:  (noBorder -> tr...etc...
		borderWidth: 	0
		borderColor: 	#simple
		model: 	a GLMGenericAction
		label: 	'Proceed'
		icon: 	Form(7x10x32)
		getIconSelector: 	nil
		getStateSelector: 	nil
		actionSelector: 	#morphicActOn:
		font: 	nil
		getLabelSelector: 	nil
		getMenuSelector: 	nil
		shortcutCharacter: 	nil
		askBeforeChanging: 	false
		triggerOnMouseDown: 	false
		offColor: 	nil
		onColor: 	nil
		feedbackColor: 	nil
		showSelectionFeedback: 	false
		allButtons: 	nil
		arguments: 	an Array(a GLMFastTablePresentation(id=136086784 title='Stack' pane=...etc...
		argumentsProvider: 	nil
		argumentsSelector: 	nil
		enabled: 	true
		actionBlock: 	nil
		getColorSelector: 	nil
		getEnabledSelector: 	nil
		getFontSelector: 	nil
		labelMorph: 	a LabelMorph(141031168)'Proceed'
		iconMorph: 	an ImageMorph(566399744)
		iconPosition: 	#left
		lastState: 	false


[ :m | m adoptPaneColor: paneColor ] in ToolDockingBarMorph(Morph)>>adoptPaneColor:
	Receiver: a ToolDockingBarMorph(799119104)
	Arguments and temporary variables: 
		paneColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		m: 	a GLMPluggableButtonMorph(740594944)
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1305.0@115.0)
		owner: 	a GLMPanelMorph(162642176)
		submorphs: 	an Array(a GLMPluggableButtonMorph(740594944) a GLMPluggableButtonMo...etc...
		fullBounds: 	(987@91) corner: (1305@115)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (854647552)
		borderWidth: 	0
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		originalColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		gradientRamp: 	nil
		fillsOwner: 	true
		avoidVisibleBordersAtEdge: 	true
		autoGradient: 	false
		selectedItem: 	nil
		activeSubMenu: 	nil


Array(SequenceableCollection)>>do:
	Receiver: an Array(a GLMPluggableButtonMorph(740594944) a GLMPluggableButtonMorph(620791552) a GLMPl...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :m | m adoptPaneColor: paneColor ]
		index: 	1
	Receiver's instance variables: 
an Array(a GLMPluggableButtonMorph(740594944) a GLMPluggableButtonMorph(620791552) a GLMPl...etc...

ToolDockingBarMorph(Morph)>>submorphsDo:
	Receiver: a ToolDockingBarMorph(799119104)
	Arguments and temporary variables: 
		aBlock: 	[ :m | m adoptPaneColor: paneColor ]
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1305.0@115.0)
		owner: 	a GLMPanelMorph(162642176)
		submorphs: 	an Array(a GLMPluggableButtonMorph(740594944) a GLMPluggableButtonMo...etc...
		fullBounds: 	(987@91) corner: (1305@115)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (854647552)
		borderWidth: 	0
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		originalColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		gradientRamp: 	nil
		fillsOwner: 	true
		avoidVisibleBordersAtEdge: 	true
		autoGradient: 	false
		selectedItem: 	nil
		activeSubMenu: 	nil


ToolDockingBarMorph(Morph)>>adoptPaneColor:
	Receiver: a ToolDockingBarMorph(799119104)
	Arguments and temporary variables: 
		paneColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1305.0@115.0)
		owner: 	a GLMPanelMorph(162642176)
		submorphs: 	an Array(a GLMPluggableButtonMorph(740594944) a GLMPluggableButtonMo...etc...
		fullBounds: 	(987@91) corner: (1305@115)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (854647552)
		borderWidth: 	0
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		originalColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		gradientRamp: 	nil
		fillsOwner: 	true
		avoidVisibleBordersAtEdge: 	true
		autoGradient: 	false
		selectedItem: 	nil
		activeSubMenu: 	nil


ToolDockingBarMorph(DockingBarMorph)>>adoptPaneColor:
	Receiver: a ToolDockingBarMorph(799119104)
	Arguments and temporary variables: 
		paneColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1305.0@115.0)
		owner: 	a GLMPanelMorph(162642176)
		submorphs: 	an Array(a GLMPluggableButtonMorph(740594944) a GLMPluggableButtonMo...etc...
		fullBounds: 	(987@91) corner: (1305@115)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (854647552)
		borderWidth: 	0
		borderColor: 	(Color r: 0.674 g: 0.674 b: 0.674 alpha: 1.0)
		originalColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		gradientRamp: 	nil
		fillsOwner: 	true
		avoidVisibleBordersAtEdge: 	true
		autoGradient: 	false
		selectedItem: 	nil
		activeSubMenu: 	nil


[ :m | m adoptPaneColor: paneColor ] in GLMPanelMorph>>adoptPaneColor:
	Receiver: a GLMPanelMorph(162642176)
	Arguments and temporary variables: 
		paneColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		m: 	a ToolDockingBarMorph(799119104)
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1305.0@115.0)
		owner: 	a PanelMorph(1011198208)
		submorphs: 	an Array(a ToolDockingBarMorph(799119104))
		fullBounds: 	(987@91) corner: (1305@115)
		color: 	Color transparent
		extension: 	a MorphExtension (26456320) [sticky] 
		borderWidth: 	0
		borderColor: 	Color gray


Array(SequenceableCollection)>>do:
	Receiver: an Array(a ToolDockingBarMorph(799119104))
	Arguments and temporary variables: 
		aBlock: 	[ :m | m adoptPaneColor: paneColor ]
		index: 	1
	Receiver's instance variables: 
an Array(a ToolDockingBarMorph(799119104))

GLMPanelMorph(Morph)>>submorphsDo:
	Receiver: a GLMPanelMorph(162642176)
	Arguments and temporary variables: 
		aBlock: 	[ :m | m adoptPaneColor: paneColor ]
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1305.0@115.0)
		owner: 	a PanelMorph(1011198208)
		submorphs: 	an Array(a ToolDockingBarMorph(799119104))
		fullBounds: 	(987@91) corner: (1305@115)
		color: 	Color transparent
		extension: 	a MorphExtension (26456320) [sticky] 
		borderWidth: 	0
		borderColor: 	Color gray


GLMPanelMorph>>adoptPaneColor:
	Receiver: a GLMPanelMorph(162642176)
	Arguments and temporary variables: 
		paneColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Receiver's instance variables: 
		bounds: 	(987.0@91.0) corner: (1305.0@115.0)
		owner: 	a PanelMorph(1011198208)
		submorphs: 	an Array(a ToolDockingBarMorph(799119104))
		fullBounds: 	(987@91) corner: (1305@115)
		color: 	Color transparent
		extension: 	a MorphExtension (26456320) [sticky] 
		borderWidth: 	0
		borderColor: 	Color gray


[ :m | m adoptPaneColor: paneColor ] in PanelMorph(Morph)>>adoptPaneColor:
	Receiver: a PanelMorph(1011198208)
	Arguments and temporary variables: 
		paneColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
		m: 	a GLMPanelMorph(162642176)
	Receiver's instance variables: 
		bounds: 	(45.0@91.0) corner: (1305.0@115.0)
		owner: 	a LazyTabGroupMorph(122792704)
		submorphs: 	an Array(a GLMTabSelectorBrick(48955136) a GLMPanelMorph(162642176))...etc...
		fullBounds: 	(45@91) corner: (1305@115)
		color: 	Color transparent
		extension: 	a MorphExtension (303271168) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


Array(SequenceableCollection)>>do:
	Receiver: an Array(a GLMTabSelectorBrick(48955136) a GLMPanelMorph(162642176))
	Arguments and temporary variables: 
		aBlock: 	[ :m | m adoptPaneColor: paneColor ]
		index: 	2
	Receiver's instance variables: 
an Array(a GLMTabSelectorBrick(48955136) a GLMPanelMorph(162642176))

PanelMorph(Morph)>>submorphsDo:
	Receiver: a PanelMorph(1011198208)
	Arguments and temporary variables: 
		aBlock: 	[ :m | m adoptPaneColor: paneColor ]
	Receiver's instance variables: 
		bounds: 	(45.0@91.0) corner: (1305.0@115.0)
		owner: 	a LazyTabGroupMorph(122792704)
		submorphs: 	an Array(a GLMTabSelectorBrick(48955136) a GLMPanelMorph(162642176))...etc...
		fullBounds: 	(45@91) corner: (1305@115)
		color: 	Color transparent
		extension: 	a MorphExtension (303271168) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


PanelMorph(Morph)>>adoptPaneColor:
	Receiver: a PanelMorph(1011198208)
	Arguments and temporary variables: 
		paneColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Receiver's instance variables: 
		bounds: 	(45.0@91.0) corner: (1305.0@115.0)
		owner: 	a LazyTabGroupMorph(122792704)
		submorphs: 	an Array(a GLMTabSelectorBrick(48955136) a GLMPanelMorph(162642176))...etc...
		fullBounds: 	(45@91) corner: (1305@115)
		color: 	Color transparent
		extension: 	a MorphExtension (303271168) [sticky] 
		borderWidth: 	0
		borderColor: 	Color black


PanelMorph>>adoptPaneColor:
	Receiver: a PanelMorph(1011198208)
	Arguments and temporary variables: 
		paneColor: 	(Color r: 0.901 g: 0.901 b: 0.901 alpha: 1.0)
	Receiver's instance variables: 
		bounds: 	(45.0@91.0) corner: (1305.0@115.0)
		owner: 	a LazyTabGroupMorph(122792704)
		submorphs: 	an Array(a GLMTabSelectorBrick(48955136) a GLMPanelMorph(162THERE_BE_DRAGONS_HERE

22 March 2020 11:06:02.552487 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Process>>terminate
	Receiver: a Process in [ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Arguments and temporary variables: 
		tmp1: 	nil
		tmp2: 	nil
		tmp3: 	nil
		tmp4: 	nil
		tmp5: 	nil
		tmp6: 	nil
	Receiver's instance variables: 
		nextLink: 	nil
		suspendedContext: 	[ self value.
Processor terminateActive ] in BlockClosure>>ne...etc...
		priority: 	50
		myList: 	nil
		name: 	'WeakArray Finalization Process'
		env: 	a WeakArray(a DefaultExecutionEnvironment nil nil nil nil nil nil nil nil ...etc...
		effectiveProcess: 	nil
		terminating: 	true
		level: 	nil


WeakArray class>>restartFinalizationProcess
	Receiver: WeakArray
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


WeakArray class>>startUp:
	Receiver: WeakArray
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


ClassSessionHandler>>startup:
	Receiver: a ClassSessionHandler(WeakArray)
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		registeredClassName: 	#WeakArray


[ :arg2 | arg2 startup: arg1 ] in WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	a ClassSessionHandler(WeakArray)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:06:02.344487-03:00


[ arg2 value: arg3 ] in [ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
		arg3: 	a ClassSessionHandler(WeakArray)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:06:02.344487-03:00


BlockClosure>>on:do:
	Receiver: [ arg2 value: arg3 ]
	Arguments and temporary variables: 
		arg1: 	Exception
		arg2: 	[ :arg4 | self errorHandler handleError: arg4 ]
	Receiver's instance variables: 
		outerContext: 	[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | sel...etc...
		startpc: 	41
		numArgs: 	0


[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
		arg3: 	a ClassSessionHandler(WeakArray)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:06:02.344487-03:00


Array(SequenceableCollection)>>do:
	Receiver: an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...

WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:06:02.344487-03:00


WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:06:02.344487-03:00


WorkingSession>>start:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:06:02.344487-03:00


SessionManager>>launchSnapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	false
		tmp1: 	true
		tmp2: 	true
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)


[ tmp3 := self launchSnapshot: arg1 andQuit: arg2.
tmp1 signal ] in SessionManager>>snapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ tmp3 := self launchSnapshot: arg1 andQuit: arg2.
tmp1 signal ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	SessionManager>>snapshot:andQuit:
		startpc: 	79
		numArgs: 	0



--- The full stack ---
Process>>terminate
WeakArray class>>restartFinalizationProcess
WeakArray class>>startUp:
ClassSessionHandler>>startup:
[ :arg2 | arg2 startup: arg1 ] in WorkingSession>>runStartup:
[ arg2 value: arg3 ] in [ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
BlockClosure>>on:do:
[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
Array(SequenceableCollection)>>do:
WorkingSession>>runList:do:
WorkingSession>>runStartup:
WorkingSession>>start:
SessionManager>>launchSnapshot:andQuit:
[ tmp3 := self launchSnapshot: arg1 andQuit: arg2.
tmp1 signal ] in SessionManager>>snapshot:andQuit:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE

22 March 2020 11:09:35.358713 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Process>>terminate
	Receiver: a Process in [ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Arguments and temporary variables: 
		tmp1: 	nil
		tmp2: 	nil
		tmp3: 	nil
		tmp4: 	nil
		tmp5: 	nil
		tmp6: 	nil
	Receiver's instance variables: 
		nextLink: 	nil
		suspendedContext: 	[ self value.
Processor terminateActive ] in BlockClosure>>ne...etc...
		priority: 	50
		myList: 	nil
		name: 	'WeakArray Finalization Process'
		env: 	a WeakArray(a DefaultExecutionEnvironment nil nil nil nil nil nil nil nil ...etc...
		effectiveProcess: 	nil
		terminating: 	true
		level: 	nil


WeakArray class>>restartFinalizationProcess
	Receiver: WeakArray
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


WeakArray class>>startUp:
	Receiver: WeakArray
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


ClassSessionHandler>>startup:
	Receiver: a ClassSessionHandler(WeakArray)
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		registeredClassName: 	#WeakArray


[ :arg2 | arg2 startup: arg1 ] in WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	a ClassSessionHandler(WeakArray)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:09:35.284713-03:00


[ arg2 value: arg3 ] in [ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
		arg3: 	a ClassSessionHandler(WeakArray)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:09:35.284713-03:00


BlockClosure>>on:do:
	Receiver: [ arg2 value: arg3 ]
	Arguments and temporary variables: 
		arg1: 	Exception
		arg2: 	[ :arg4 | self errorHandler handleError: arg4 ]
	Receiver's instance variables: 
		outerContext: 	[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | sel...etc...
		startpc: 	41
		numArgs: 	0


[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
		arg3: 	a ClassSessionHandler(WeakArray)
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:09:35.284713-03:00


Array(SequenceableCollection)>>do:
	Receiver: an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(SmallInteger) a Cla...etc...

WorkingSession>>runList:do:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	an Array(a ClassSessionHandler(GlobalIdentifier) a ClassSessionHandler(Sm...etc...
		arg2: 	[ :arg2 | arg2 startup: arg1 ]
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:09:35.284713-03:00


WorkingSession>>runStartup:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:09:35.284713-03:00


WorkingSession>>start:
	Receiver: a WorkingSession
	Arguments and temporary variables: 
		arg1: 	true
	Receiver's instance variables: 
		manager: 	a SessionManager
		deferredStartupActions: 	an OrderedCollection()
		id: 	nil
		creationTime: 	2020-03-22T11:09:35.284713-03:00


SessionManager>>launchSnapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
		arg1: 	true
		arg2: 	false
		tmp1: 	true
		tmp2: 	true
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)


[ tmp3 := self launchSnapshot: arg1 andQuit: arg2.
tmp1 signal ] in SessionManager>>snapshot:andQuit:
	Receiver: a SessionManager
	Arguments and temporary variables: 
<<error during printing>
	Receiver's instance variables: 
		currentSession: 	a WorkingSession
		categories: 	an OrderedCollection(a SessionCategory(System) a SessionCategory(Ne...etc...
		guiCategory: 	a SessionCategory(Graphical User Interface)
		toolsCategory: 	a SessionCategory(Tools)
		networkCategory: 	a SessionCategory(Network)
		systemCategory: 	a SessionCategory(System)
		userCategory: 	a SessionCategory(User)


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ tmp3 := self launchSnapshot: arg1 andQuit: arg2.
tmp1 signal ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	SessionManager>>snapshot:andQuit:
		startpc: 	79
		numArgs: 	0



--- The full stack ---
Process>>terminate
WeakArray class>>restartFinalizationProcess
WeakArray class>>startUp:
ClassSessionHandler>>startup:
[ :arg2 | arg2 startup: arg1 ] in WorkingSession>>runStartup:
[ arg2 value: arg3 ] in [ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
BlockClosure>>on:do:
[ :arg3 | 
[ arg2 value: arg3 ]
	on: Exception
	do: [ :arg4 | self errorHandler handleError: arg4 ] ] in WorkingSession>>runList:do:
Array(SequenceableCollection)>>do:
WorkingSession>>runList:do:
WorkingSession>>runStartup:
WorkingSession>>start:
SessionManager>>launchSnapshot:andQuit:
[ tmp3 := self launchSnapshot: arg1 andQuit: arg2.
tmp1 signal ] in SessionManager>>snapshot:andQuit:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
CannotDeleteFileException: C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/10.jpeg
22 March 2020 11:10:03.312713 am

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File>>openForWrite:
	Receiver: a File
	Arguments and temporary variables: 
		writeMode: 	true
		fileHandle: 	nil
	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/10.jpeg'


File>>openForWrite
	Receiver: a File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		name: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/10.jpeg'


File class>>openForWriteFileNamed:
	Receiver: File
	Arguments and temporary variables: 
		aName: 	'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/10.jpeg'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString trimLeft: [ :char | char = $/ ]) ] in Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
File
	openForWriteFileNamed: (pathOfFile pathString tr...etc...
		newCollection: 	#(nil nil nil nil nil nil nil nil nil nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

Imagenes>>imageStreams
	Receiver: an Imagenes
	Arguments and temporary variables: 
		streams: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes>>initializeWithPath:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	nil


Imagenes class>>dePath:
	Receiver: Imagenes
	Arguments and temporary variables: 
		pathDeImagenes: 	'.\imagenes\'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#convertImageWith:inForm:->Imagenes>>#convertIma...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Imagenes
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas>>initializeConMuestra:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	nil


ConstruccionDePoemas class>>conMuestra:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		unaMuestraDePoemas: 	a MuestraDePoemas
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		muestra: 	a MuestraDePoemas
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Bitmap>>basicNextPut:
22 March 2020 5:47:03.495713 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Bitmap(Object)>>doesNotUnderstand: #basicNextPut:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		aMessage: 	basicNextPut: 101
		exception: 	MessageNotUnderstood: Bitmap>>basicNextPut:
		resumeValue: 	nil
	Receiver's instance variables: 
a Bitmap of length 307200

Character>>storeBinaryOn:
	Receiver: $e
	Arguments and temporary variables: 
		aStream: 	a Bitmap of length 307200
	Receiver's instance variables: 
$e

[ :character | character storeBinaryOn: bitmap ] in Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	acomodas
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'es posible que el tiempo
eche raíces en lugares insólitos
mie...etc...
		bitmap: 	a Bitmap of length 307200
		character: 	$e
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


ByteString(SequenceableCollection)>>do:
	Receiver: 'es posible que el tiempo
eche raíces en lugares insólitos
mientras vos acomodas tu pelo
p...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :character | character storeBinaryOn: bitmap ]
		index: 	1
	Receiver's instance variables: 
'es posible que el tiempo
eche raíces en lugares insólitos
mientras vos acomodas tu pelo
p...etc...

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	acomodas
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'es posible que el tiempo
eche raíces en lugares insólitos
mie...etc...
		bitmap: 	a Bitmap of length 307200
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(480x640x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->acomodas #helper->acomodas #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=KCjIJnlmqOzpYty0","_k=fsh4wXKRyMDvVl80","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: formD...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id45,id45,176,-661,325,426.3125'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=KCjIJnlmqOzpYty0","_k=fsh4wXK...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=KCjIJnlmqOz...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id45,id45,176,-661,325,426.3125')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id45,id45,176,-661,325,426.3125'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id45,id45,176,-661,325,426.3125')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 389)
		nextKey: 	395


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 389)
		nextKey: 	395


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		confTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Bitmap>>basicNextPut:
22 March 2020 5:48:09.133713 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Bitmap(Object)>>doesNotUnderstand: #basicNextPut:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		aMessage: 	basicNextPut: 101
		exception: 	MessageNotUnderstood: Bitmap>>basicNextPut:
		resumeValue: 	nil
	Receiver's instance variables: 
a Bitmap of length 307200

Character>>storeBinaryOn:
	Receiver: $e
	Arguments and temporary variables: 
		aStream: 	a Bitmap of length 307200
	Receiver's instance variables: 
$e

[ :character | character storeBinaryOn: bitmap ] in Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	mientras
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'es posible que el tiempo
eche raíces en lugares insólitos
mie...etc...
		bitmap: 	a Bitmap of length 307200
		character: 	$e
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


ByteString(SequenceableCollection)>>do:
	Receiver: 'es posible que el tiempo
eche raíces en lugares insólitos
mientras vos acomodas tu pelo
p...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :character | character storeBinaryOn: bitmap ]
		index: 	1
	Receiver's instance variables: 
'es posible que el tiempo
eche raíces en lugares insólitos
mientras vos acomodas tu pelo
p...etc...

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	mientras
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'es posible que el tiempo
eche raíces en lugares insólitos
mie...etc...
		bitmap: 	a Bitmap of length 307200
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(480x640x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->mientras #helper->mientras #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=KCjIJnlmqOzpYty0","_k=fsh4wXKRyMDvVl80","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: formD...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id41,id41,174,-585,323,407.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=KCjIJnlmqOzpYty0","_k=fsh4wXK...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=KCjIJnlmqOz...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id41,id41,174,-585,323,407.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id41,id41,174,-585,323,407.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id41,id41,174,-585,323,407.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id41%2Cid41%2C174%2C-585%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 389)
		nextKey: 	395


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id41%2Cid41%2C174%2C-585%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 389)
		nextKey: 	395


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id41%2Cid41%2C174%2C-585%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id41%2Cid41%2C174%2C-585%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id41%2Cid41%2C174%2C-585%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContextTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Bitmap>>basicNextPut:
22 March 2020 6:08:21.710713 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Bitmap(Object)>>doesNotUnderstand: #basicNextPut:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		aMessage: 	basicNextPut: 101
		exception: 	MessageNotUnderstood: Bitmap>>basicNextPut:
		resumeValue: 	nil
	Receiver's instance variables: 
a Bitmap of length 307200

Character>>storeBinaryOn:
	Receiver: $e
	Arguments and temporary variables: 
		aStream: 	a Bitmap of length 307200
	Receiver's instance variables: 
$e

[ :character | character storeBinaryOn: bitmap ] in Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	acomodas
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'es posible que el tiempo
eche raíces en lugares insólitos
mie...etc...
		bitmap: 	a Bitmap of length 307200
		character: 	$e
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


ByteString(SequenceableCollection)>>do:
	Receiver: 'es posible que el tiempo
eche raíces en lugares insólitos
mientras vos acomodas tu pelo
p...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :character | character storeBinaryOn: bitmap ]
		index: 	1
	Receiver's instance variables: 
'es posible que el tiempo
eche raíces en lugares insólitos
mientras vos acomodas tu pelo
p...etc...

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	acomodas
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'es posible que el tiempo
eche raíces en lugares insólitos
mie...etc...
		bitmap: 	a Bitmap of length 307200
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ] in [ html image
	document: formDeImagen mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: formDeImagen ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		formDeImagen: 	Form(480x640x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->acomodas #helper->acomodas #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=KCjIJnlmqOzpYty0","_k=fsh4wXKRyMDvVl80","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: formD...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id45,id45,176,-661,325,426.3125'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=KCjIJnlmqOzpYty0","_k=fsh4wXK...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=KCjIJnlmqOz...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id45,id45,176,-661,325,426.3125')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id45,id45,176,-661,325,426.3125'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id45,id45,176,-661,325,426.3125')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 389)
		nextKey: 	395


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 389)
		nextKey: 	395


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%2C325%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%2C325%2...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%2C325%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%2C325%2...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%2C325%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%2C325%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C176%2C-661%2C325%2C426.3125&_s=KCjIJnlm...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id45%2Cid45%2C176%2C-661%2C32...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContTHERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #atEnd: in File class failed
23 March 2020 5:52:01.625833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File class(ProtoObject)>>primitiveFailed:
	Receiver: File
	Arguments and temporary variables: 
		selector: 	#atEnd:
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


File class(ProtoObject)>>primitiveFailed
	Receiver: File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


File class>>atEnd:
	Receiver: File
	Arguments and temporary variables: 
		id: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


BinaryFileStream(AbstractBinaryFileStream)>>atEnd
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/9.jpeg'
	Arguments and temporary variables: 

	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


BinaryFileStream>>peek
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/9.jpeg'
	Arguments and temporary variables: 
		next: 	nil
	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/...etc...
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: fileStream ])) ] in WAImagenes>>renderFileStream:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		fileStream: 	BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/ima...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'image/jpg';
	script...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderFileStream:withRenderer:
		startpc: 	80
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[THERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #getPosition: in File class failed
23 March 2020 5:53:36.232833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File class(ProtoObject)>>primitiveFailed:
	Receiver: File
	Arguments and temporary variables: 
		selector: 	#getPosition:
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


File class(ProtoObject)>>primitiveFailed
	Receiver: File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


File class>>getPosition:
	Receiver: File
	Arguments and temporary variables: 
		id: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


BinaryFileStream(AbstractBinaryFileStream)>>position
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/9.jpeg'
	Arguments and temporary variables: 

	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


BinaryFileStream(AbstractBinaryFileStream)>>contents
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/9.jpeg'
	Arguments and temporary variables: 
		savedPosition: 	nil
		contents: 	nil
	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


WAImagenes>>DoItIn:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		ThisContext: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeTy...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) contents
		source: 	a ReadStream
		context: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: ...etc...
		receiver: 	a WAImagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAImagenes
		ctxt: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'im...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1064664576)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1064664576)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(652156672)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1064664576)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@240)
		owner: 	a TransformWithLayoutMorph(984849152)
		submorphs: 	an Array(a RubCursor(603214592) a RubPrimarySelectionMorph(43873792)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (835912448) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(632707584)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(603214592)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(345715200))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(652156672)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(166666752))(a DropList...etc...
		lastStepTime: 	908958
		lastStepMessage: 	nil
		lastCycleTime: 	909023
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(603214592)))
		lastAlarmTime: 	908958
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(166666752))(a DropList...etc...
		lastStepTime: 	908958
		lastStepMessage: 	nil
		lastCycleTime: 	909023
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(603214592)))
		lastAlarmTime: 	908958
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currTHERE_BE_DRAGONS_HERE
Instance of BinaryFileStream did not understand #reopen
23 March 2020 5:53:49.853833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

BinaryFileStream(Object)>>doesNotUnderstand: #reopen
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/9.jpeg'
	Arguments and temporary variables: 
		aMessage: 	reopen
		exception: 	MessageNotUnderstood: BinaryFileStream>>reopen
		resumeValue: 	nil
	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


WAImagenes>>DoItIn:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		ThisContext: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeTy...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) reopen
		source: 	a ReadStream
		context: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: ...etc...
		receiver: 	a WAImagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAImagenes
		ctxt: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'im...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1064664576)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1064664576)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(652156672)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1064664576)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@240)
		owner: 	a TransformWithLayoutMorph(984849152)
		submorphs: 	an Array(a RubCursor(603214592) a RubPrimarySelectionMorph(43873792)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (835912448) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(632707584)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(603214592)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(749537024))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(652156672)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(166666752))(a DropList...etc...
		lastStepTime: 	922599
		lastStepMessage: 	nil
		lastCycleTime: 	922657
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(603214592)))
		lastAlarmTime: 	922599
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(166666752))(a DropList...etc...
		lastStepTime: 	922599
		lastStepMessage: 	nil
		lastCycleTime: 	922657
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(603214592)))
		lastAlarmTime: 	922599
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(166666752))(a DropList...etc...
		lastStepTime: 	922599
		lastStepMessage: 	nil
		lastCycleTime: 	922657
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(603214592)))
		lastAlarmTime: 	922599
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
BinaryFileStream(Object)>>doesNotUnderstand: #reopen
WAImagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of BinaryFileStream did not understand #open
23 March 2020 5:54:00.342833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

BinaryFileStream(Object)>>doesNotUnderstand: #open
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/9.jpeg'
	Arguments and temporary variables: 
		aMessage: 	open
		exception: 	MessageNotUnderstood: BinaryFileStream>>open
		resumeValue: 	nil
	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


WAImagenes>>DoItIn:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		ThisContext: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeTy...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) open
		source: 	a ReadStream
		context: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: ...etc...
		receiver: 	a WAImagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAImagenes
		ctxt: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'im...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1064664576)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1064664576)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(652156672)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1064664576)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@240)
		owner: 	a TransformWithLayoutMorph(984849152)
		submorphs: 	an Array(a RubCursor(603214592) a RubPrimarySelectionMorph(43873792)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (835912448) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(632707584)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(603214592)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(819342848))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(652156672)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(166666752))(a DropList...etc...
		lastStepTime: 	933125
		lastStepMessage: 	nil
		lastCycleTime: 	933156
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(603214592)))
		lastAlarmTime: 	933125
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(166666752))(a DropList...etc...
		lastStepTime: 	933125
		lastStepMessage: 	nil
		lastCycleTime: 	933156
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(603214592)))
		lastAlarmTime: 	933125
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(166666752))(a DropList...etc...
		lastStepTime: 	933125
		lastStepMessage: 	nil
		lastCycleTime: 	933156
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(603214592)))
		lastAlarmTime: 	933125
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
BinaryFileStream(Object)>>doesNotUnderstand: #open
WAImagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #atEnd: in File class failed
23 March 2020 5:54:30.772833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File class(ProtoObject)>>primitiveFailed:
	Receiver: File
	Arguments and temporary variables: 
		selector: 	#atEnd:
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


File class(ProtoObject)>>primitiveFailed
	Receiver: File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


File class>>atEnd:
	Receiver: File
	Arguments and temporary variables: 
		id: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


BinaryFileStream(AbstractBinaryFileStream)>>atEnd
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/5.jpeg'
	Arguments and temporary variables: 

	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


BinaryFileStream>>peek
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/5.jpeg'
	Arguments and temporary variables: 
		next: 	nil
	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/...etc...
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: fileStream ])) ] in WAImagenes>>renderFileStream:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		fileStream: 	BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/ima...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'image/jpg';
	script...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderFileStream:withRenderer:
		startpc: 	80
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAHtmlCanvas>>paragraph:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAImagenes>>renderFileStream:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		fileStream: 	BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/ima...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :fileStream | waComponent renderFileStream: fileStream withRenderer: html ] in Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAImagenes
		html: 	a WAHtmlCanvas
		fileStream: 	BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/ima...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		imageStreams: 	an Array(BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/image...etc...


Array(SequenceableCollection)>>do:
	Receiver: an Array(BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/5.jpeg' ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :fileStream | waComponent renderFileStream: fileStream withRenderer: ...etc...
		index: 	1
	Receiver's instance variables: 
an Array(BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/5.jpeg' ...etc...

Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAImagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		imageStreams: 	an Array(BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/image...etc...


[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	w...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderImagenes:withRenderer:
		startpc: 	61
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	aTHERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #atEnd: in File class failed
23 March 2020 5:54:33.640833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

File class(ProtoObject)>>primitiveFailed:
	Receiver: File
	Arguments and temporary variables: 
		selector: 	#atEnd:
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


File class(ProtoObject)>>primitiveFailed
	Receiver: File
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


File class>>atEnd:
	Receiver: File
	Arguments and temporary variables: 
		id: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#basename->File>>#basename #basicOpenForWrite:->...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#File
		classPool: 	a Dictionary(#Registry->a WeakRegistry(<this WeakRegistry is locked>...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Core'


BinaryFileStream(AbstractBinaryFileStream)>>atEnd
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/10.jpeg'
	Arguments and temporary variables: 

	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


BinaryFileStream>>peek
	Receiver: BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/imagenes/10.jpeg'
	Arguments and temporary variables: 
		next: 	nil
	Receiver's instance variables: 
		file: 	a File
		handle: 	nil
		forWrite: 	true


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/...etc...
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: fileStream ])) ] in WAImagenes>>renderFileStream:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		fileStream: 	BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/ima...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'image/jpg';
	script...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderFileStream:withRenderer:
		startpc: 	80
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAHtmlCanvas>>paragraph:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAImagenes>>renderFileStream:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		fileStream: 	BinaryFileStream: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/ima...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :fileStream | waComponent rendeTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: ByteArray>>peek
23 March 2020 5:55:50.976833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteArray(Object)>>doesNotUnderstand: #peek
	Receiver: #[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 225 0 52 69 120 105 102 0 0 7...etc...
	Arguments and temporary variables: 
		aMessage: 	peek
		exception: 	MessageNotUnderstood: ByteArray>>peek
		resumeValue: 	nil
	Receiver's instance variables: 
#[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 225 0 52 69 120 105 102 0 0 7...etc...

Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	#[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 225...etc...
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: fileStream ])) ] in WAImagenes>>renderFileStream:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		fileStream: 	#[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 225 0 ...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'image/jpg';
	script...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderFileStream:withRenderer:
		startpc: 	80
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAHtmlCanvas>>paragraph:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAImagenes>>renderFileStream:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		fileStream: 	#[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 225 0 ...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :fileStream | waComponent renderFileStream: fileStream withRenderer: html ] in Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAImagenes
		html: 	a WAHtmlCanvas
		fileStream: 	#[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 225 0 ...etc...
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		imageStreams: 	#(#[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 22...etc...


Array(SequenceableCollection)>>do:
	Receiver: #(#[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 225 0 52 69 120 105 102 0 0...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :fileStream | waComponent renderFileStream: fileStream withRenderer: ...etc...
		index: 	1
	Receiver's instance variables: 
#(#[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 225 0 52 69 120 105 102 0 0...etc...

Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAImagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		imageStreams: 	#(#[255 216 255 224 0 16 74 70 73 70 0 1 1 0 0 72 0 72 0 0 255 22...etc...


[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	w...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderImagenes:withRenderer:
		startpc: 	61
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag



--- The full stack ---
ByteArray(Object)>>doesNotUnderstand: #peek
Form class>>fromBinaryStream:
[ html image
	document: (Form fromBinaryStream: fileStream) mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Bitmap>>basicNextPut:
23 March 2020 6:02:52.063833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Bitmap(Object)>>doesNotUnderstand: #basicNextPut:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		aMessage: 	basicNextPut: 115
		exception: 	MessageNotUnderstood: Bitmap>>basicNextPut:
		resumeValue: 	nil
	Receiver's instance variables: 
a Bitmap of length 307200

Character>>storeBinaryOn:
	Receiver: $s
	Arguments and temporary variables: 
		aStream: 	a Bitmap of length 307200
	Receiver's instance variables: 
$s

[ :character | character storeBinaryOn: bitmap ] in Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	fuerza
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		bitmap: 	a Bitmap of length 307200
		character: 	$s
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


ByteString(SequenceableCollection)>>do:
	Receiver: 'seremos frágiles
como una flor en el pantano
nos daremos
la medida justa del silencio
nue...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :character | character storeBinaryOn: bitmap ]
		index: 	1
	Receiver's instance variables: 
'seremos frágiles
como una flor en el pantano
nos daremos
la medida justa del silencio
nue...etc...

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	fuerza
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		bitmap: 	a Bitmap of length 307200
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(480x640x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->fuerza #helper->fuerza #position->a GRS...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=qqejRjbGHr1lt5Ue","_k=RX0UIN2M2u4fwhi9","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id85,id85,-52,-578,277,461.296875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=qqejRjbGHr1lt5Ue","_k=RX0UIN2...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=qqejRjbGHr1...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id85,id85,-52,-578,277,461.296875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id85,id85,-52,-578,277,461.296875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id85,id85,-52,-578,277,461.296875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 345)
		nextKey: 	351


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 345)
		nextKey: 	351


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2C277%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2C277%2...etc...
	Receiver's instance variables: 
		index: 	THERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
23 March 2020 6:08:34.839833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteString(Object)>>error:
	Receiver: '                    '
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object'
	Receiver's instance variables: 
'                    '

ByteString(Object)>>errorImproperStore
	Receiver: '                    '
	Arguments and temporary variables: 

	Receiver's instance variables: 
'                    '

ByteString>>at:put:
	Receiver: '                    '
	Arguments and temporary variables: 
		index: 	1
		aCharacter: 	128
	Receiver's instance variables: 
'                    '

ReadWriteStream(WriteStream)>>pastEndPut:
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 
		anObject: 	128
	Receiver's instance variables: 
		collection: 	'                    '
		position: 	1
		readLimit: 	0
		writeLimit: 	20


ReadWriteStream(WriteStream)>>nextPut:
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 
		anObject: 	128
	Receiver's instance variables: 
		collection: 	'                    '
		position: 	1
		readLimit: 	0
		writeLimit: 	20


Bitmap>>writeOn:
	Receiver: a Bitmap of length 307200
	Arguments and temporary variables: 
		aStream: 	a ReadWriteStream
		b: 	nil
	Receiver's instance variables: 
a Bitmap of length 307200

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (forms detect: [ :each | each = (ThisContext namedT...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1018071808)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(1018071808)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(21431808)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(1018071808)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@183)
		owner: 	a TransformWithLayoutMorph(660138496)
		submorphs: 	an Array(a RubCursor(498504192) a RubPrimarySelectionMorph(730196736...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (298894080) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(1048252160)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(498504192)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(551776768))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(21431808)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	1807618
		lastStepMessage: 	nil
		lastCycleTime: 	1807653
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(498504192)))
		lastAlarmTime: 	1807618
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	1807618
		lastStepMessage: 	nil
		lastCycleTime: 	1807653
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(498504192)))
		lastAlarmTime: 	1807618
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	1807618
		lastStepMessage: 	nil
		lastCycleTime: 	1807653
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(498504192)))
		lastAlarmTime: 	1807618
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteString(Object)>>error:
ByteString(Object)>>errorImproperStore
ByteString>>at:put:
ReadWriteStream(WriteStream)>>pastEndPut:
ReadWriteStream(WriteStream)>>nextPut:
Bitmap>>writeOn:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "adaptToNumber:andSend:" is nil
23 March 2020 6:12:35.954833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #adaptToNumber:andSend:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	adaptToNumber: 29184 andSend: #+
		exception: 	MessageNotUnderstood: receiver of "adaptToNumber:andSend:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>adaptToInteger:andSend:
	Receiver: nil
	Arguments and temporary variables: 
		rcvr: 	29184
		selector: 	#+
	Receiver's instance variables: 
nil

SmallInteger(Integer)>>+
	Receiver: 29184
	Arguments and temporary variables: 
		aNumber: 	nil
	Receiver's instance variables: 
29184

SmallInteger>>+
	Receiver: 29184
	Arguments and temporary variables: 
		aNumber: 	nil
	Receiver's instance variables: 
29184

ReadWriteStream(PositionableStream)>>nextInt32
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 
		s: 	114
		i: 	2
	Receiver's instance variables: 
		collection: 	an OrderedCollection(128 255 0 18 52 96 255 0 4 176 0 11 255 19 10 ...etc...
		position: 	1193465
		readLimit: 	1193465
		writeLimit: 	1310720


Bitmap class>>newFromStream:
	Receiver: Bitmap
	Arguments and temporary variables: 
		s: 	a ReadWriteStream
		len: 	nil
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	fuerza
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		bitmap: 	nil
		stream: 	a ReadWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(480x640x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->fuerza #helper->fuerza #position->a GRS...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=qqejRjbGHr1lt5Ue","_k=RX0UIN2M2u4fwhi9","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id85,id85,-52,-578,277,461.296875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=qqejRjbGHr1lt5Ue","_k=RX0UIN2...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=qqejRjbGHr1...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id85,id85,-52,-578,277,461.296875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id85,id85,-52,-578,277,461.296875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id85,id85,-52,-578,277,461.296875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 345)
		nextKey: 	351


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 345)
		nextKey: 	351


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2C277%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2C277%2...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2C277%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2C277%2...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2C277%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id85%2Cid85%2C-52%2C-578%2C277%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-CoTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "adaptToNumber:andSend:" is nil
23 March 2020 6:13:53.094833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #adaptToNumber:andSend:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	adaptToNumber: 8192 andSend: #+
		exception: 	MessageNotUnderstood: receiver of "adaptToNumber:andSend:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>adaptToInteger:andSend:
	Receiver: nil
	Arguments and temporary variables: 
		rcvr: 	8192
		selector: 	#+
	Receiver's instance variables: 
nil

SmallInteger(Integer)>>+
	Receiver: 8192
	Arguments and temporary variables: 
		aNumber: 	nil
	Receiver's instance variables: 
8192

SmallInteger>>+
	Receiver: 8192
	Arguments and temporary variables: 
		aNumber: 	nil
	Receiver's instance variables: 
8192

ReadWriteStream(PositionableStream)>>nextInt32
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 
		s: 	32
		i: 	2
	Receiver's instance variables: 
		collection: 	an OrderedCollection(128 255 0 18 52 96 255 0 4 176 0 11 255 19 10 ...etc...
		position: 	1193172
		readLimit: 	1193172
		writeLimit: 	1310720


Bitmap class>>newFromStream:
	Receiver: Bitmap
	Arguments and temporary variables: 
		s: 	a ReadWriteStream
		len: 	nil
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	aprendimos
		unForm: 	Form(480x640x32)
		poemaConPalabra: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ...etc...
		stream: 	a ReadWriteStream
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(480x640x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->aprendimos #helper->aprendimos #positio...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=pYmm4qYmL2CQt2q5","_k=0UUVcpJP7s91A1YE","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id39,id39,203,-462,352,530.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=pYmm4qYmL2CQt2q5","_k=0UUVcpJ...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=pYmm4qYmL2C...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id39,id39,203,-462,352,530.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id39,id39,203,-462,352,530.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id39,id39,203,-462,352,530.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C203%2C-462%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 369)
		nextKey: 	375


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C203%2C-462%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 369)
		nextKey: 	375


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
THERE_BE_DRAGONS_HERE
Instance of ReadWriteStream did not understand #reject:
23 March 2020 6:16:39.736833 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ReadWriteStream(Object)>>doesNotUnderstand: #reject:
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 
		aMessage: 	reject: [ :each | each isNil ]
		exception: 	MessageNotUnderstood: ReadWriteStream>>reject:
		resumeValue: 	nil
	Receiver's instance variables: 
		collection: 	an OrderedCollection(128 255 0 18 52 96 255 0 4 176 0 11 255 19 10 ...etc...
		position: 	1193062
		readLimit: 	0
		writeLimit: 	1310720


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(480x640x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 4) reject: [ :each | each...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(256170752)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(256170752)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(986854912)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(256170752)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@202)
		owner: 	a TransformWithLayoutMorph(834083328)
		submorphs: 	an Array(a RubCursor(1031347712) a RubPrimarySelectionMorph(92138240...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (384702976) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(740056832)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(1031347712)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(704470784))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(986854912)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	2292508
		lastStepMessage: 	nil
		lastCycleTime: 	2292548
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1031347712)))
		lastAlarmTime: 	2292508
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	2292508
		lastStepMessage: 	nil
		lastCycleTime: 	2292548
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1031347712)))
		lastAlarmTime: 	2292508
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	2292508
		lastStepMessage: 	nil
		lastCycleTime: 	2292548
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(1031347712)))
		lastAlarmTime: 	2292508
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ReadWriteStream(Object)>>doesNotUnderstand: #reject:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Break
24 March 2020 4:03:09.921934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	estoy
		unForm: 	Form(640x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	nil
		xPoint: 	nil
		yPoint: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(640x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->estoy #helper->estoy #position->a GRSma...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=6Qt9uMqwWw79XvoU","_k=l9Ic07UbZLX22D9E","4","5="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id181,id181,73,-409,762,619.625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=6Qt9uMqwWw79XvoU","_k=l9Ic07U...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=6Qt9uMqwWw7...etc...
		callback: 	nil
		callbackId: 	'4'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id181,id181,73,-409,762,619.625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id181,id181,73,-409,762,619.625'
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id181,id181,73,-409,762,619.625')
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id181%2Cid181%2C73%2C-409...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 295)
		nextKey: 	301


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id181%2Cid181%2C73%2C-409...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 295)
		nextKey: 	301


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?4&5=id181%2Cid181%2C73%2C-409%...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id181%2Cid181%2C73%2CTHERE_BE_DRAGONS_HERE
Break
24 March 2020 4:04:17.287934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	estoy
		unForm: 	Form(640x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	nil
		xPoint: 	nil
		yPoint: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(640x480x32) Form(640x480x32) Form(640x480x32) Form(640x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(640x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->estoy #helper->estoy #position->a GRSma...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=6Qt9uMqwWw79XvoU","_k=l9Ic07UbZLX22D9E","4","5="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id181,id181,73,-409,762,619.625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=6Qt9uMqwWw79XvoU","_k=l9Ic07U...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=6Qt9uMqwWw7...etc...
		callback: 	nil
		callbackId: 	'4'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id181,id181,73,-409,762,619.625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id181,id181,73,-409,762,619.625'
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id181,id181,73,-409,762,619.625')
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id181%2Cid181%2C73%2C-409...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 295)
		nextKey: 	301


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id181%2Cid181%2C73%2C-409...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 295)
		nextKey: 	301


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?4&5=id181%2Cid181%2C73%2C-409%...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id181%2Cid181%2C73%2C-409...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id181%2Cid181%2C73%2C-409...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		reTHERE_BE_DRAGONS_HERE
Break
24 March 2020 4:10:01.861934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	cambió
		unForm: 	Form(481x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	nil
		xPoint: 	nil
		yPoint: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->cambió #helper->cambió #position->a GRS...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=qSPOFlCc5hBmdSHy","_k=mfynt-uv1s2s4MDN","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id19,id19,113,-602,190,412.390625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=qSPOFlCc5hBmdSHy","_k=mfynt-u...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=qSPOFlCc5hB...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id19,id19,113,-602,190,412.390625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id19,id19,113,-602,190,412.390625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id19,id19,113,-602,190,412.390625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 471)
		nextKey: 	477


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 471)
		nextKey: 	477


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayTHERE_BE_DRAGONS_HERE
Error: Improper store into indexable object
24 March 2020 4:15:59.749934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteArray(Object)>>error:
	Receiver: #[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
	Arguments and temporary variables: 
		aString: 	'Improper store into indexable object'
	Receiver's instance variables: 
#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...

ByteArray(Object)>>errorImproperStore
	Receiver: #[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...

ByteArray(Object)>>at:put:
	Receiver: #[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
	Arguments and temporary variables: 
		index: 	1
		value: 	$ÿ
	Receiver's instance variables: 
#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...

ByteArray(SequenceableCollection)>>collect:
	Receiver: #[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 118 255 79 111 12...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | each asCharacter ]
		newCollection: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		index: 	1
	Receiver's instance variables: 
#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 118 255 79 111 12...etc...

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 2) bits asByteArray
		col...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(376502016)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(376502016)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(684551936)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(376502016)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@259)
		owner: 	a TransformWithLayoutMorph(311234048)
		submorphs: 	an Array(a RubCursor(755745792) a RubPrimarySelectionMorph(123912192...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (433947392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(718253568)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	true
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(755745792)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(501768704))
		getMenuPolicy: 	a RubEditingArea(376502016)
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(684551936)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	966228
		lastStepMessage: 	nil
		lastCycleTime: 	966268
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(755745792)))
		lastAlarmTime: 	966228
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	966228
		lastStepMessage: 	nil
		lastCycleTime: 	966268
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(755745792)))
		lastAlarmTime: 	966228
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	966228
		lastStepMessage: 	nil
		lastCycleTime: 	966268
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(755745792)))
		lastAlarmTime: 	966228
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteArray(Object)>>error:
ByteArray(Object)>>errorImproperStore
ByteArray(Object)>>at:put:
ByteArray(SequenceableCollection)>>collect:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Break
24 March 2020 4:37:45.604934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	cambió
		unForm: 	Form(481x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	nil
		xPoint: 	nil
		yPoint: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->cambió #helper->cambió #position->a GRS...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=qSPOFlCc5hBmdSHy","_k=mfynt-uv1s2s4MDN","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id19,id19,113,-602,190,412.390625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=qSPOFlCc5hBmdSHy","_k=mfynt-u...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=qSPOFlCc5hB...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id19,id19,113,-602,190,412.390625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id19,id19,113,-602,190,412.390625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id19,id19,113,-602,190,412.390625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 471)
		nextKey: 	477


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 471)
		nextKey: 	477


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C113%2C-602%2C190%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDiTHERE_BE_DRAGONS_HERE
Break
24 March 2020 4:39:09.154934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	daremos
		unForm: 	Form(481x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	nil
		xPoint: 	nil
		yPoint: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->daremos #helper->daremos #position->a G...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=Y9qjWs9tlTtuYyfQ","_k=xll8nzAzMgkKgvWN","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id39,id39,-51,-493,98,529.390625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=Y9qjWs9tlTtuYyfQ","_k=xll8nzA...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=Y9qjWs9tlTt...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id39,id39,-51,-493,98,529.390625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id39,id39,-51,-493,98,529.390625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id39,id39,-51,-493,98,529.390625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 339)
		nextKey: 	345


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 339)
		nextKey: 	345


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%2C98%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%2C98%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%2C98%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%2C98%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C-51%2C-493%2C98%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	THERE_BE_DRAGONS_HERE
Error: Instances of UndefinedObject are not indexable
24 March 2020 4:41:17.414934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>error:
	Receiver: nil
	Arguments and temporary variables: 
		aString: 	'Instances of UndefinedObject are not indexable'
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>errorNotIndexable
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

UndefinedObject(Object)>>size
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

ByteString(SequenceableCollection)>>copyReplaceFrom:to:with:
	Receiver: 'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿPoÿJi{ÿDcuÿLk}ÿKj|ÿIhzÿ...etc...
	Arguments and temporary variables: 
		start: 	923521
		stop: 	923520
		replacementCollection: 	nil
		newSequenceableCollection: 	nil
		newSize: 	nil
		endReplacement: 	nil
	Receiver's instance variables: 
'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿPoÿJi{ÿDcuÿLk}ÿKj|ÿIhzÿ...etc...

ByteString(SequenceableCollection)>>,
	Receiver: 'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿPoÿJi{ÿDcuÿLk}ÿKj|ÿIhzÿ...etc...
	Arguments and temporary variables: 
		otherCollection: 	nil
	Receiver's instance variables: 
'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿPoÿJi{ÿDcuÿLk}ÿKj|ÿIhzÿ...etc...

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 2) bits asByteArray asStr...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(714312960)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(714312960)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(508799232)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(714312960)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@259)
		owner: 	a TransformWithLayoutMorph(1026746368)
		submorphs: 	an Array(a RubPrimarySelectionMorph(384010496) a RubCursor(312999424...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (591697920) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(425387008)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(312999424)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(747942912))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(508799232)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	2483872
		lastStepMessage: 	nil
		lastCycleTime: 	2483932
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(312999424)))
		lastAlarmTime: 	2483872
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	2483872
		lastStepMessage: 	nil
		lastCycleTime: 	2483932
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(312999424)))
		lastAlarmTime: 	2483872
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	2483872
		lastStepMessage: 	nil
		lastCycleTime: 	2483932
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(312999424)))
		lastAlarmTime: 	2483872
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>error:
UndefinedObject(Object)>>errorNotIndexable
UndefinedObject(Object)>>size
ByteString(SequenceableCollection)>>copyReplaceFrom:to:with:
ByteString(SequenceableCollection)>>,
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of SmallInteger did not understand #to
24 March 2020 4:44:10.964934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmallInteger(Object)>>doesNotUnderstand: #to
	Receiver: 100
	Arguments and temporary variables: 
		aMessage: 	to
		exception: 	MessageNotUnderstood: SmallInteger>>to
		resumeValue: 	nil
	Receiver's instance variables: 
100

Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ 100 to byteString size atRandom
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(714312960)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(714312960)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(508799232)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(714312960)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@297)
		owner: 	a TransformWithLayoutMorph(1026746368)
		submorphs: 	an Array(a RubPrimarySelectionMorph(384010496) a RubCursor(312999424...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (591697920) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(425387008)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(312999424)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(207113216))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(508799232)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	2657445
		lastStepMessage: 	nil
		lastCycleTime: 	2657499
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(312999424)))
		lastAlarmTime: 	2657445
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	2657445
		lastStepMessage: 	nil
		lastCycleTime: 	2657499
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(312999424)))
		lastAlarmTime: 	2657445
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	2657445
		lastStepMessage: 	nil
		lastCycleTime: 	2657499
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(312999424)))
		lastAlarmTime: 	2657445
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
SmallInteger(Object)>>doesNotUnderstand: #to
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Break
24 March 2020 4:46:51.712934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	que
		unForm: 	Form(481x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	nil
		byteString: 	nil
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->que #helper->que #position->a GRSmallDi...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=Y9qjWs9tlTtuYyfQ","_k=xll8nzAzMgkKgvWN","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id73,id73,-65,-559,228,473.171875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=Y9qjWs9tlTtuYyfQ","_k=xll8nzA...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=Y9qjWs9tlTt...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id73,id73,-65,-559,228,473.171875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id73,id73,-65,-559,228,473.171875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id73,id73,-65,-559,228,473.171875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 339)
		nextKey: 	345


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 339)
		nextKey: 	345


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%2C228%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%2C228%2...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%2C228%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%2C228%2...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%2C228%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%2C228%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C-65%2C-559%2C228%2C473.171875&_s=Y9qjWs...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id73%2Cid73%2C-65%2C-559%2C22...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathTHERE_BE_DRAGONS_HERE
Instance of ByteArray did not understand #next
24 March 2020 5:09:08.840934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteArray(Object)>>doesNotUnderstand: #next
	Receiver: #[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 118 255 79 111 12...etc...
	Arguments and temporary variables: 
		aMessage: 	next
		exception: 	MessageNotUnderstood: ByteArray>>next
		resumeValue: 	nil
	Receiver's instance variables: 
#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 118 255 79 111 12...etc...

Bitmap class>>newFromStream:
	Receiver: Bitmap
	Arguments and temporary variables: 
		s: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 118...etc...
		len: 	nil
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Bitmap newFromStream: (ThisContext namedTempAt: 4) ...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(5452288)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(5452288)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(53746688)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(5452288)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@259)
		owner: 	a TransformWithLayoutMorph(370969344)
		submorphs: 	an Array(a RubCursor(31638016) a RubPrimarySelectionMorph(619377920)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (240352000) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(740768000)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(31638016)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(183355648))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(53746688)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	4155309
		lastStepMessage: 	nil
		lastCycleTime: 	4155372
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(31638016)))
		lastAlarmTime: 	4155309
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	4155309
		lastStepMessage: 	nil
		lastCycleTime: 	4155372
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(31638016)))
		lastAlarmTime: 	4155309
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	4155309
		lastStepMessage: 	nil
		lastCycleTime: 	4155372
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(31638016)))
		lastAlarmTime: 	4155309
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteArray(Object)>>doesNotUnderstand: #next
Bitmap class>>newFromStream:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Space is low
24 March 2020 5:10:02.696934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmalltalkImage>>signalLowSpace
	Receiver: Smalltalk
	Arguments and temporary variables: 

	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	nil
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	nil
		vm: 	a VirtualMachine


OutOfMemory>>defaultAction
	Receiver: OutOfMemory
	Arguments and temporary variables: 

	Receiver's instance variables: 
		messageText: 	nil
		tag: 	nil
		signaler: 	Smalltalk
		signalContext: 	OutOfMemory(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil


UndefinedObject>>handleSignal:
	Receiver: nil
	Arguments and temporary variables: 
		exception: 	OutOfMemory
	Receiver's instance variables: 
nil

OutOfMemory(Exception)>>signal
	Receiver: OutOfMemory
	Arguments and temporary variables: 

	Receiver's instance variables: 
		messageText: 	nil
		tag: 	nil
		signaler: 	Smalltalk
		signalContext: 	OutOfMemory(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil


OutOfMemory class(Exception class)>>signal
	Receiver: OutOfMemory
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Error
		methodDict: 	a MethodDictionary(#defaultAction->OutOfMemory>>#defaultAction #isR...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#OutOfMemory
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Exceptions'


SmalltalkImage>>growMemoryByAtLeast:
	Receiver: Smalltalk
	Arguments and temporary variables: 
		numBytes: 	4993968144
	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	nil
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	nil
		vm: 	a VirtualMachine


Bitmap class(Behavior)>>handleFailingBasicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		bytesRequested: 	4993968144
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>basicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		ec: 	#'insufficient object memory'
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>new:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71...etc...
		s: 	a ReadStream
		bitmap: 	nil
		size: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Bitmap
		decompressFromByteArray: (ThisContext name...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(5452288)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(5452288)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(53746688)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(5452288)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@259)
		owner: 	a TransformWithLayoutMorph(370969344)
		submorphs: 	an Array(a RubCursor(31638016) a RubPrimarySelectionMorph(619377920)...etc...
		fullBounds: 	(0@0) corner: (1249@259)
		color: 	Color transparent
		extension: 	a MorphExtension (240352000) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(740768000)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(31638016)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(882642944))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(53746688)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	4209000
		lastStepMessage: 	nil
		lastCycleTime: 	4209059
		alarms: 	a Heap()
		lastAlarmTime: 	4209000
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	4209000
		lastStepMessage: 	nil
		lastCycleTime: 	4209059
		alarms: 	a Heap()
		lastAlarmTime: 	4209000
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	4209000
		lastStepMessage: 	nil
		lastCycleTime: 	4209059
		alarms: 	a Heap()
		lastAlarmTime: 	4209000
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
SmalltalkImage>>signalLowSpace
OutOfMemory>>defaultAction
UndefinedObject>>handleSignal:
OutOfMemory(Exception)>>signal
OutOfMemory class(Exception class)>>signal
SmalltalkImage>>growMemoryByAtLeast:
Bitmap class(Behavior)>>handleFailingBasicNew:
Bitmap class(Behavior)>>basicNew:
Bitmap class(Behavior)>>new:
Bitmap class>>decompressFromByteArray:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Space is low
24 March 2020 5:10:25.695934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmalltalkImage>>signalLowSpace
	Receiver: Smalltalk
	Arguments and temporary variables: 

	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	nil
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	nil
		vm: 	a VirtualMachine


OutOfMemory>>defaultAction
	Receiver: OutOfMemory
	Arguments and temporary variables: 

	Receiver's instance variables: 
		messageText: 	nil
		tag: 	nil
		signaler: 	Smalltalk
		signalContext: 	OutOfMemory(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil


UndefinedObject>>handleSignal:
	Receiver: nil
	Arguments and temporary variables: 
		exception: 	OutOfMemory
	Receiver's instance variables: 
nil

OutOfMemory(Exception)>>signal
	Receiver: OutOfMemory
	Arguments and temporary variables: 

	Receiver's instance variables: 
		messageText: 	nil
		tag: 	nil
		signaler: 	Smalltalk
		signalContext: 	OutOfMemory(Exception)>>signal
		handlerContext: 	nil
		outerContext: 	nil


OutOfMemory class(Exception class)>>signal
	Receiver: OutOfMemory
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Error
		methodDict: 	a MethodDictionary(#defaultAction->OutOfMemory>>#defaultAction #isR...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#OutOfMemory
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-Exceptions'


SmalltalkImage>>growMemoryByAtLeast:
	Receiver: Smalltalk
	Arguments and temporary variables: 
		numBytes: 	4993968144
	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	nil
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	nil
		vm: 	a VirtualMachine


Bitmap class(Behavior)>>handleFailingBasicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		bytesRequested: 	4993968144
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>basicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		ec: 	#'insufficient object memory'
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>new:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71...etc...
		s: 	a ReadStream
		bitmap: 	nil
		size: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Bitmap
		decompressFromByteArray: (ThisContext name...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(5452288)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(5452288)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(53746688)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(5452288)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@259)
		owner: 	a TransformWithLayoutMorph(370969344)
		submorphs: 	an Array(a RubCursor(31638016) a RubPrimarySelectionMorph(619377920)...etc...
		fullBounds: 	(0@0) corner: (1249@259)
		color: 	Color transparent
		extension: 	a MorphExtension (240352000) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(740768000)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(31638016)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(24120320))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(53746688)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	4232054
		lastStepMessage: 	nil
		lastCycleTime: 	4232097
		alarms: 	a Heap()
		lastAlarmTime: 	4232054
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	4232054
		lastStepMessage: 	nil
		lastCycleTime: 	4232097
		alarms: 	a Heap()
		lastAlarmTime: 	4232054
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	4232054
		lastStepMessage: 	nil
		lastCycleTime: 	4232097
		alarms: 	a Heap()
		lastAlarmTime: 	4232054
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	nil
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
SmalltalkImage>>signalLowSpace
OutOfMemory>>defaultAction
UndefinedObject>>handleSignal:
OutOfMemory(Exception)>>signal
OutOfMemory class(Exception class)>>signal
SmalltalkImage>>growMemoryByAtLeast:
Bitmap class(Behavior)>>handleFailingBasicNew:
Bitmap class(Behavior)>>basicNew:
Bitmap class(Behavior)>>new:
Bitmap class>>decompressFromByteArray:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: buffer too small for compressed data
24 March 2020 5:24:03.743934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PluginBasedJPEGReadWriter(Object)>>error:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aString: 	'buffer too small for compressed data'
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(4x230927x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	Form(4x230927x32)
		jpegCompressStruct: 	#[8 101 182 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 64 39...etc...
		jpegErrorMgr2Struct: 	#[16 218 187 0 112 114 187 0 141 115 187 0 195 114 187 0 1...etc...
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		byteCount: 	0
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(4x230927x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(4x230927x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(4x230927x8)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 ...etc...
		width: 	4
		height: 	230927
		depth: 	8
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(4x230927x8)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		anObject: 	Form(4x230927x8)
		mimeType: 	'image/jpg'
		fileName: 	nil
		handler: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=IWWwk0xtmN4ClDkU&_k=a59jMQvO1cEnkmK6
		actionBaseUrl: 	/poemas?_s=IWWwk0xtmN4ClDkU&_k=a59jMQvO1cEnkmK6
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	nil


WAImageTag>>document:mimeType:fileName:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(4x230927x8)
		mimeType: 	'image/jpg'
		fileName: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


WAImageTag>>document:mimeType:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(4x230927x8)
		mimeType: 	'image/jpg'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(4x230927x8)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderForm:withRenderer:
		startpc: 	72
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAHtmlCanvas>>paragraph:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQ...etc...
	ReceivTHERE_BE_DRAGONS_HERE
Error: buffer too small for compressed data
24 March 2020 5:24:52.576934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PluginBasedJPEGReadWriter(Object)>>error:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aString: 	'buffer too small for compressed data'
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(4x230927x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	Form(4x230927x32)
		jpegCompressStruct: 	#[232 231 244 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 64 ...etc...
		jpegErrorMgr2Struct: 	#[16 218 187 0 112 114 187 0 141 115 187 0 195 114 187 0 1...etc...
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		byteCount: 	0
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(4x230927x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(4x230927x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(4x230927x8)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 ...etc...
		width: 	4
		height: 	230927
		depth: 	8
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(4x230927x8)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		anObject: 	Form(4x230927x8)
		mimeType: 	'image/jpg'
		fileName: 	nil
		handler: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=IWWwk0xtmN4ClDkU&_k=oogL5vL9OHTmxedA
		actionBaseUrl: 	/poemas?_s=IWWwk0xtmN4ClDkU&_k=oogL5vL9OHTmxedA
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	nil


WAImageTag>>document:mimeType:fileName:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(4x230927x8)
		mimeType: 	'image/jpg'
		fileName: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


WAImageTag>>document:mimeType:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(4x230927x8)
		mimeType: 	'image/jpg'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(4x230927x8)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderForm:withRenderer:
		startpc: 	72
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvTHERE_BE_DRAGONS_HERE
Error: Streams are created with on: and with:
24 March 2020 5:30:49.609934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

BinaryFileStream class(Object)>>error:
	Receiver: BinaryFileStream
	Arguments and temporary variables: 
		aString: 	'Streams are created with on: and with:'
	Receiver's instance variables: 
		superclass: 	AbstractBinaryFileStream
		methodDict: 	a MethodDictionary(#close->BinaryFileStream>>#close #closed->Binary...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#BinaryFileStream
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Streams'


BinaryFileStream class(Stream class)>>new
	Receiver: BinaryFileStream
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	AbstractBinaryFileStream
		methodDict: 	a MethodDictionary(#close->BinaryFileStream>>#close #closed->Binary...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#BinaryFileStream
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Streams'


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	medida
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	644678
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->medida #helper->medida #position->a GRS...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=g7ZnKAbedkaihoEJ","_k=AiOGIHCiEjSECwhL","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id45,id45,59,-492,244,517.046875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=g7ZnKAbedkaihoEJ","_k=AiOGIHC...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=g7ZnKAbedka...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id45,id45,59,-492,244,517.046875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id45,id45,59,-492,244,517.046875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id45,id45,59,-492,244,517.046875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 405)
		nextKey: 	411


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 405)
		nextKey: 	411


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2C244%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2C244%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2C244%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2C244%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id45%2Cid45%2C59%2C-492%2C244%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
THERE_BE_DRAGONS_HERE
Instance of BinaryFileStream class did not understand #on:
24 March 2020 5:31:17.557934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

BinaryFileStream class(Object)>>doesNotUnderstand: #on:
	Receiver: BinaryFileStream
	Arguments and temporary variables: 
		aMessage: 	on: #[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255...etc...
		exception: 	MessageNotUnderstood: BinaryFileStream class>>on:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	AbstractBinaryFileStream
		methodDict: 	a MethodDictionary(#close->BinaryFileStream>>#close #closed->Binary...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#BinaryFileStream
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Files-Streams'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ BinaryFileStream on: (ThisContext namedTempAt: 4) a...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(206462464)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(206462464)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(844795904)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(206462464)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@259)
		owner: 	a TransformWithLayoutMorph(757219072)
		submorphs: 	an Array(a RubCursor(748364544) a RubPrimarySelectionMorph(836690688...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (171607296) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(596878592)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(748364544)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(135704576))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(844795904)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	5484040
		lastStepMessage: 	nil
		lastCycleTime: 	5484080
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(748364544)))
		lastAlarmTime: 	5484040
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	5484040
		lastStepMessage: 	nil
		lastCycleTime: 	5484080
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(748364544)))
		lastAlarmTime: 	5484040
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	5484040
		lastStepMessage: 	nil
		lastCycleTime: 	5484080
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(748364544)))
		lastAlarmTime: 	5484040
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
BinaryFileStream class(Object)>>doesNotUnderstand: #on:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
#ifFalse: was sent to nil
24 March 2020 5:31:34.503934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #ifFalse:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	ifFalse: arg1 home
		exception: 	MessageNotUnderstood: receiver of "ifFalse:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

BinaryFileStream(AbstractBinaryFileStream)>>DoItIn:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		arg1: 	BinaryFileStream(AbstractBinaryFileStream)>>next:putAll:
	Receiver's instance variables: 
		file: 	nil
		handle: 	nil
		forWrite: 	nil


UndefinedObject(Object)>>mustBeBooleanDeOptimizeIn:
	Receiver: nil
	Arguments and temporary variables: 
		context: 	BinaryFileStream(AbstractBinaryFileStream)>>next:putAll:
		ret: 	nil
		cache: 	an IdentityDictionary(83->AbstractBinaryFileStream>>#DoItIn: )
		method: 	AbstractBinaryFileStream>>#DoItIn:
	Receiver's instance variables: 
nil

UndefinedObject(Object)>>mustBeBoolean
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

BinaryFileStream(AbstractBinaryFileStream)>>next:putAll:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		amount: 	923923
		aByteArray: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
	Receiver's instance variables: 
		file: 	nil
		handle: 	nil
		forWrite: 	nil


BinaryFileStream(AbstractBinaryFileStream)>>nextPutAll:
	Receiver: <<error during printing>>
	Arguments and temporary variables: 
		aByteArray: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
	Receiver's instance variables: 
		file: 	nil
		handle: 	nil
		forWrite: 	nil


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ BinaryFileStream basicNew
		nextPutAll: (ThisContex...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(206462464)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(206462464)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(844795904)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(206462464)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@259)
		owner: 	a TransformWithLayoutMorph(757219072)
		submorphs: 	an Array(a RubCursor(748364544) a RubPrimarySelectionMorph(836690688...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (171607296) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(596878592)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(748364544)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(16091648))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(844795904)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	5500995
		lastStepMessage: 	nil
		lastCycleTime: 	5501047
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(748364544)))
		lastAlarmTime: 	5500995
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	5500995
		lastStepMessage: 	nil
		lastCycleTime: 	5501047
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(748364544)))
		lastAlarmTime: 	5500995
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	5500995
		lastStepMessage: 	nil
		lastCycleTime: 	5501047
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(748364544)))
		lastAlarmTime: 	5500995
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #ifFalse:
BinaryFileStream(AbstractBinaryFileStream)>>DoItIn:
UndefinedObject(Object)>>mustBeBooleanDeOptimizeIn:
UndefinedObject(Object)>>mustBeBoolean
BinaryFileStream(AbstractBinaryFileStream)>>next:putAll:
BinaryFileStream(AbstractBinaryFileStream)>>nextPutAll:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: Attempt to set the position of a PositionableStream out of bounds
24 March 2020 5:33:27.215934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ReadWriteStream(Object)>>error:
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 
		aString: 	'Attempt to set the position of a PositionableStream out of bounds'
	Receiver's instance variables: 
		collection: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
		position: 	0
		readLimit: 	0
		writeLimit: 	923923


ReadWriteStream(PositionableStream)>>positionError
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 

	Receiver's instance variables: 
		collection: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
		position: 	0
		readLimit: 	0
		writeLimit: 	923923


ReadWriteStream(PositionableStream)>>position:
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 
		anInteger: 	-1
	Receiver's instance variables: 
		collection: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
		position: 	0
		readLimit: 	0
		writeLimit: 	923923


ReadWriteStream(WriteStream)>>position:
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 
		anInteger: 	-1
	Receiver's instance variables: 
		collection: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
		position: 	0
		readLimit: 	0
		writeLimit: 	923923


ReadWriteStream(PositionableStream)>>skip:
	Receiver: a ReadWriteStream
	Arguments and temporary variables: 
		anInteger: 	-1
	Receiver's instance variables: 
		collection: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
		position: 	0
		readLimit: 	0
		writeLimit: 	923923


Bitmap class>>newFromStream:
	Receiver: Bitmap
	Arguments and temporary variables: 
		s: 	a ReadWriteStream
		len: 	nil
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 2)
		bits:
			(Bitmap
			...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(206462464)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result |  ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(206462464)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(844795904)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(206462464)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@259)
		owner: 	a TransformWithLayoutMorph(757219072)
		submorphs: 	an Array(a RubPrimarySelectionMorph(236603648) a RubCursor(748364544...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (171607296) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(596878592)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(748364544)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(263224832))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(844795904)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	5613691
		lastStepMessage: 	nil
		lastCycleTime: 	5613736
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(748364544)))
		lastAlarmTime: 	5613691
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	5613691
		lastStepMessage: 	nil
		lastCycleTime: 	5613736
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(748364544)))
		lastAlarmTime: 	5613691
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@996)
		canvas: 	a FormCanvas on: DisplayScreen(1903x996x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(878823168))(a DropList...etc...
		lastStepTime: 	5613691
		lastStepMessage: 	nil
		lastCycleTime: 	5613736
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(748364544)))
		lastAlarmTime: 	5613691
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@996)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@996)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ReadWriteStream(Object)>>error:
ReadWriteStream(PositionableStream)>>positionError
ReadWriteStream(PositionableStream)>>position:
ReadWriteStream(WriteStream)>>position:
ReadWriteStream(PositionableStream)>>skip:
Bitmap class>>newFromStream:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: ByteArray>>fromByteStream:
24 March 2020 5:40:08.802934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteArray(Object)>>doesNotUnderstand: #fromByteStream:
	Receiver: #[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
	Arguments and temporary variables: 
		aMessage: 	fromByteStream: a ReadWriteStream
		exception: 	MessageNotUnderstood: ByteArray>>fromByteStream:
		resumeValue: 	nil
	Receiver's instance variables: 
#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	viento
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	'ÿ àáÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo...etc...
		index: 	49755
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->viento #helper->viento #position->a GRS...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=fxEarUKWagmGYKth","_k=GlS-P4JyQtIyOcdw","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id97,id97,-117,-524,248,485.046875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=fxEarUKWagmGYKth","_k=GlS-P4J...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=fxEarUKWagm...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id97,id97,-117,-524,248,485.046875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id97,id97,-117,-524,248,485.046875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id97,id97,-117,-524,248,485.046875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id97%2Cid97%2C-117%2C-524...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 429)
		nextKey: 	435


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id97%2Cid97%2C-117%2C-524...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 429)
		nextKey: 	435


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuatTHERE_BE_DRAGONS_HERE
Break
24 March 2020 5:41:36.961934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	tendidas
		unForm: 	Form(481x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	465775
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->tendidas #helper->tendidas #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=TG_X-ZhGaGes61et","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id61,id61,-4,-446,253,546.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=TG_X-Zh...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=b82qW87LtwT...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id61,id61,-4,-446,253,546.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id61,id61,-4,-446,253,546.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id61,id61,-4,-446,253,546.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-4%2C-446%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 343)
		nextKey: 	349


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-4%2C-446%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 343)
		nextKey: 	349


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-4%2C-446%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-4%2C-446%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-4%2C-446%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-4%2C-446%2C253%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-4%2C-446%2C253%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-4%2C-446%2C253%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContTHERE_BE_DRAGONS_HERE
Break
24 March 2020 5:42:17.690934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	fracaso
		unForm: 	Form(481x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	621855
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->fracaso #helper->fracaso #position->a G...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=5mjeiJ8STptCbts-","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id51,id51,216,-673,329,440.125'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=5mjeiJ8...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=b82qW87LtwT...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id51,id51,216,-673,329,440.125')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id51,id51,216,-673,329,440.125'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id51,id51,216,-673,329,440.125')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 395)
		nextKey: 	401


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 395)
		nextKey: 	401


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%2C329%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%2C329%2...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%2C329%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%2C329%2...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%2C329%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%2C329%2...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%2C329%2C440.125&_s=b82qW87Lt...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id51%2Cid51%2C216%2C-673%2C32...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C216%2C-673%2C329%2C440.125&_s=b82qW87Lt...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id51%2Cid51%2C216%2C-673%2C32...etc...
		THERE_BE_DRAGONS_HERE
Break
24 March 2020 5:42:37.380934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	termina
		unForm: 	Form(481x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	'para curarme 
me dieron quimioterapia
y sané
una parte de mi
...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	416063
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->termina #helper->termina #position->a G...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=5mjeiJ8STptCbts-","4","5="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id131,id131,403,-629,700,445.921875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=5mjeiJ8...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=b82qW87LtwT...etc...
		callback: 	nil
		callbackId: 	'4'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id131,id131,403,-629,700,445.921875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id131,id131,403,-629,700,445.921875'
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id131,id131,403,-629,700,445.921875')
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-62...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 395)
		nextKey: 	401


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-62...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 395)
		nextKey: 	401


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-629...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-62...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-62...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-629%2C700...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-629%2C700...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-629%2C700...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-629%2C700...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-629%2C700...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-629%2C700...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?4&5=id131%2Cid131%2C403%2C-629%2C700%2C445.921875&_s=b82q...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?4&5=id131%2Cid131%2C403%2C-629%2C...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	THERE_BE_DRAGONS_HERE
Break
24 March 2020 5:42:55.620934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	no
		unForm: 	Form(481x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	'tenemos demasiadas cosas en casa
están ordenadas 
de manera q...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	795063
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->no #helper->no #position->a GRSmallDict...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=5mjeiJ8STptCbts-","4","5="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id225,id225,355,-621,764,447.65625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=5mjeiJ8...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=b82qW87LtwT...etc...
		callback: 	nil
		callbackId: 	'4'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id225,id225,355,-621,764,447.65625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id225,id225,355,-621,764,447.65625'
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id225,id225,355,-621,764,447.65625')
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-62...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 395)
		nextKey: 	401


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-62...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 395)
		nextKey: 	401


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-621...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-62...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-62...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-621%2C764...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-621%2C764...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-621%2C764...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-621%2C764...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-621%2C764...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-621%2C764...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-621%2C764%2C447.65625&_s=b82qW...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?4&5=id225%2Cid225%2C355%2C-621%2C...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-621%2C764%2C447.65625&_s=b82qW...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?4&5=id225%2Cid225%2C355%2C-621%2C...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id225%2Cid225%2C355%2C-62...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConTHERE_BE_DRAGONS_HERE
Break
24 March 2020 5:42:57.233934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	dejarnos
		unForm: 	Form(481x480x32)
		RFReifyValueVar: 	nil
		poemaConPalabra: 	'tenemos demasiadas cosas en casa
están ordenadas 
de manera q...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	903527
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->dejarnos #helper->dejarnos #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=5mjeiJ8STptCbts-","4","5="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id229,id229,344,-801,753,353.9375'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=b82qW87LtwT8CgGH","_k=5mjeiJ8...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=b82qW87LtwT...etc...
		callback: 	nil
		callbackId: 	'4'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id229,id229,344,-801,753,353.9375')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id229,id229,344,-801,753,353.9375'
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id229,id229,344,-801,753,353.9375')
	Receiver's instance variables: 
		key: 	'5'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-80...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 395)
		nextKey: 	401


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-80...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 395)
		nextKey: 	401


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-801...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-80...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-80...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-801%2C753...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-801%2C753...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-801%2C753...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-801%2C753...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-801%2C753...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-801%2C753...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-801%2C753%2C353.9375&_s=b82qW8...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?4&5=id229%2Cid229%2C344%2C-801%2C...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-801%2C753%2C353.9375&_s=b82qW8...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?4&5=id229%2Cid229%2C344%2C-801%2C...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?4&5=id229%2Cid229%2C344%2C-80...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: THERE_BE_DRAGONS_HERE
Error: Range must be positive
24 March 2020 5:45:21.816934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SharedRandom(Object)>>error:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		aString: 	'Range must be positive'
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


SharedRandom(Random)>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ super nextInt: anInteger ] in SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
		caught: 	true
		blockValue: 	nil
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


BlockClosure>>ensure:
	Receiver: [ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ caught
	ifTrue: [ self signal ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	Semaphore>>critical:
		startpc: 	42
		numArgs: 	0


Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		caught: 	true
		blockValue: 	nil
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


Interval(SequenceableCollection)>>atRandom:
	Receiver: (100 to: 0)
	Arguments and temporary variables: 
		aGenerator: 	a SharedRandom
	Receiver's instance variables: 
		start: 	100
		stop: 	0
		step: 	1


Interval(Collection)>>atRandom
	Receiver: (100 to: 0)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		start: 	100
		stop: 	0
		step: 	1


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	nuestras
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	''
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nuestras #helper->nuestras #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=Pb7sbAYKEgriMoCk","_k=8lzauIdgyPxueSqk","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id55,id55,1,-513,222,479.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=Pb7sbAYKEgriMoCk","_k=8lzauId...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=Pb7sbAYKEgr...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id55,id55,1,-513,222,479.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id55,id55,1,-513,222,479.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id55,id55,1,-513,222,479.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 411)
		nextKey: 	417


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 411)
		nextKey: 	417


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WATHERE_BE_DRAGONS_HERE
Error: Range must be positive
24 March 2020 5:45:44.662934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SharedRandom(Object)>>error:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		aString: 	'Range must be positive'
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


SharedRandom(Random)>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ super nextInt: anInteger ] in SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
		caught: 	true
		blockValue: 	nil
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


BlockClosure>>ensure:
	Receiver: [ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ caught
	ifTrue: [ self signal ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	Semaphore>>critical:
		startpc: 	42
		numArgs: 	0


Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		caught: 	true
		blockValue: 	nil
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


Interval(SequenceableCollection)>>atRandom:
	Receiver: (100 to: 0)
	Arguments and temporary variables: 
		aGenerator: 	a SharedRandom
	Receiver's instance variables: 
		start: 	100
		stop: 	0
		step: 	1


Interval(Collection)>>atRandom
	Receiver: (100 to: 0)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		start: 	100
		stop: 	0
		step: 	1


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	nuestras
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	''
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nuestras #helper->nuestras #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=Pb7sbAYKEgriMoCk","_k=8lzauIdgyPxueSqk","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id55,id55,1,-513,222,479.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=Pb7sbAYKEgriMoCk","_k=8lzauId...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=Pb7sbAYKEgr...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id55,id55,1,-513,222,479.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id55,id55,1,-513,222,479.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id55,id55,1,-513,222,479.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 411)
		nextKey: 	417


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 411)
		nextKey: 	417


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C222%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C222%2C4...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C222%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C222%2C4...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C222%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C222%2C4...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


THERE_BE_DRAGONS_HERE
Error: Range must be positive
24 March 2020 6:00:22.253934 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SharedRandom(Object)>>error:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		aString: 	'Range must be positive'
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


SharedRandom(Random)>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ super nextInt: anInteger ] in SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
		caught: 	true
		blockValue: 	nil
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


BlockClosure>>ensure:
	Receiver: [ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ caught
	ifTrue: [ self signal ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	Semaphore>>critical:
		startpc: 	42
		numArgs: 	0


Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		caught: 	true
		blockValue: 	nil
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	5.70898969e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


Interval(SequenceableCollection)>>atRandom:
	Receiver: (100 to: 0)
	Arguments and temporary variables: 
		aGenerator: 	a SharedRandom
	Receiver's instance variables: 
		start: 	100
		stop: 	0
		step: 	1


Interval(Collection)>>atRandom
	Receiver: (100 to: 0)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		start: 	100
		stop: 	0
		step: 	1


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	nuestras
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	''
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->nuestras #helper->nuestras #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=Pb7sbAYKEgriMoCk","_k=8lzauIdgyPxueSqk","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id55,id55,1,-513,222,479.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=Pb7sbAYKEgriMoCk","_k=8lzauId...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=Pb7sbAYKEgr...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id55,id55,1,-513,222,479.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id55,id55,1,-513,222,479.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id55,id55,1,-513,222,479.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 411)
		nextKey: 	417


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 411)
		nextKey: 	417


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id55%2Cid55%2C1%2C-513%2C...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinTHERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr: in PluginBasedJPEGReadWriter failed
25 March 2020 10:54:55.104188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PluginBasedJPEGReadWriter(ProtoObject)>>primitiveFailed:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		selector: 	#primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr...etc...
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter(ProtoObject)>>primitiveFailed
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aJPEGCompressStruct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		destination: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		form: 	Form(481x480x32)
		quality: 	-1
		progressiveFlag: 	false
		aJPEGErrorMgr2Struct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	Form(481x480x32)
		jpegCompressStruct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		jpegErrorMgr2Struct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		byteCount: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(481x480x32)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	a Bitmap of length 0
		width: 	481
		height: 	480
		depth: 	32
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(481x480x32)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr: in PluginBasedJPEGReadWriter failed
25 March 2020 10:55:14.318188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PluginBasedJPEGReadWriter(ProtoObject)>>primitiveFailed:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		selector: 	#primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr...etc...
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter(ProtoObject)>>primitiveFailed
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aJPEGCompressStruct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		destination: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		form: 	Form(481x480x32)
		quality: 	-1
		progressiveFlag: 	false
		aJPEGErrorMgr2Struct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	Form(481x480x32)
		jpegCompressStruct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		jpegErrorMgr2Struct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		byteCount: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(481x480x32)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	a Bitmap of length 0
		width: 	481
		height: 	480
		depth: 	32
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(481x480x32)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		anObject: 	Form(481x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
		handler: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=3qX5a-MATfD83pc6&_k=1YXx1SBRvRY_1m64
		actionBaseUrl: 	/poemas?_s=3qX5a-MATfD83pc6&_k=1YXx1SBRvRY_1m64
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	nil


WAImageTag>>document:mimeType:fileName:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(481x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


WAImageTag>>document:mimeType:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(481x480x32)
		mimeType: 	'image/jpg'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderForm:withRenderer:
		startpc: 	72
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAHtmlCanvas>>paragraph:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :fileStream | waComponent renderForm: fileStream withRenderer: html ] in Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAImagenes
		html: 	a WAHtmlCanvas
		fileStream: 	Form(481x480x32)
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


Array(SequenceableCollection)>>do:
	Receiver: an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480x32))
	Arguments and temporary variables: 
		aBlock: 	[ :fileStream | waComponent renderForm: fileStream withRenderer: html ]...etc...
		index: 	1
	Receiver's instance variables: 
an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480x32))

Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAImagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	w...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderImagenes:withRenderer:
		startpc: 	61
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments anTHERE_BE_DRAGONS_HERE
OutOfMemory
25 March 2020 11:09:42.256188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmalltalkImage>>growMemoryByAtLeast:
	Receiver: Smalltalk
	Arguments and temporary variables: 
		numBytes: 	4993968144
	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	nil
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	nil
		vm: 	a VirtualMachine


Bitmap class(Behavior)>>handleFailingBasicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		bytesRequested: 	4993968144
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>basicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		ec: 	#'insufficient object memory'
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>new:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71...etc...
		s: 	a ReadStream
		bitmap: 	nil
		size: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Form>>unhibernate
	Receiver: Form(481x480x32)
	Arguments and temporary variables: 
		resBits: 	nil
	Receiver's instance variables: 
		bits: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 ...etc...
		width: 	481
		height: 	480
		depth: 	32
		offset: 	nil


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	nil
		jpegCompressStruct: 	nil
		jpegErrorMgr2Struct: 	nil
		buffer: 	nil
		byteCount: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(481x480x32)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 ...etc...
		width: 	481
		height: 	480
		depth: 	32
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(481x480x32)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		anObject: 	Form(481x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
		handler: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=Qb9j6kRThZ3zVSvc&_k=YzqCbgM75uIgHj_A
		actionBaseUrl: 	/poemas?_s=Qb9j6kRThZ3zVSvc&_k=YzqCbgM75uIgHj_A
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	nil


WAImageTag>>document:mimeType:fileName:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(481x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


WAImageTag>>document:mimeType:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(481x480x32)
		mimeType: 	'image/jpg'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderForm:withRenderer:
		startpc: 	72
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTagTHERE_BE_DRAGONS_HERE
OutOfMemory
25 March 2020 11:11:22.591188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmalltalkImage>>growMemoryByAtLeast:
	Receiver: Smalltalk
	Arguments and temporary variables: 
		numBytes: 	4993968144
	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	nil
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	nil
		vm: 	a VirtualMachine


Bitmap class(Behavior)>>handleFailingBasicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		bytesRequested: 	4993968144
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>basicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		ec: 	#'insufficient object memory'
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>new:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71...etc...
		s: 	a ReadStream
		bitmap: 	nil
		size: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Form>>unhibernate
	Receiver: Form(481x480x32)
	Arguments and temporary variables: 
		resBits: 	nil
	Receiver's instance variables: 
		bits: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 ...etc...
		width: 	481
		height: 	480
		depth: 	32
		offset: 	nil


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	nil
		jpegCompressStruct: 	nil
		jpegErrorMgr2Struct: 	nil
		buffer: 	nil
		byteCount: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(481x480x32)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71 103 ...etc...
		width: 	481
		height: 	480
		depth: 	32
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(481x480x32)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		anObject: 	Form(481x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
		handler: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=Qb9j6kRThZ3zVSvc&_k=vwaGpB7J1obQBzq5
		actionBaseUrl: 	/poemas?_s=Qb9j6kRThZ3zVSvc&_k=vwaGpB7J1obQBzq5
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	nil


WAImageTag>>document:mimeType:fileName:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(481x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


WAImageTag>>document:mimeType:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(481x480x32)
		mimeType: 	'image/jpg'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


BlockClosure>>renderOn:
	Receiver: [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAImagenes>>renderForm:withRenderer:
		startpc: 	72
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAHtmlCanvas>>paragraph:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :fileStream | waComponent renderForm: fileStream withRenderer: html ] in Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAImagenes
		html: 	a WAHtmlCanvas
		fileStream: 	Form(481x480x32)
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


Array(SequenceableCollection)>>do:
	Receiver: an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480x32))
	Arguments and temporary variables: 
		aBlock: 	[ :fileStream | waComponent renderForm: fileStream withRenderer: html ]...etc...
		index: 	1
	Receiver's instance variables: 
an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480x32))

Imagenes>>renderOnComponent:withRenderer:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		waComponent: 	a WAImagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	an Imagenes
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	w...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderImagenes:withRenderer:
		startpc: 	61
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	a WAImageTag
		parentBrush: 	a WAGenericTag



--- The full stack ---
SmalltalkImage>>growMemoryByAtLeast:
Bitmap class(Behavior)>>handleFailingBasicNew:
Bitmap class(Behavior)>>basicNew:
Bitmap class(Behavior)>>new:
Bitmap class>>decompressFromByteArray:
Form>>unhibernate
PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
PluginBasedJPEGReadWriter>>nextPutImage:
PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
Form>>seasideMimeDocumentType:
WADocumentHandler class>>document:mimeType:fileName:
WARenderContext>>urlForDocument:mimeType:fileName:
WAImageTag>>document:mimeType:fileName:
WAImageTag>>document:mimeType:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Bitmap>>decompressFromByteArray:
25 March 2020 11:12:32.542188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Bitmap(Object)>>doesNotUnderstand: #decompressFromByteArray:
	Receiver: a Bitmap of length 0
	Arguments and temporary variables: 
		aMessage: 	decompressFromByteArray: #[255 74 106 121 255 81 113 128 255 80 112 1...etc...
		exception: 	MessageNotUnderstood: Bitmap>>decompressFromByteArray:
		resumeValue: 	nil
	Receiver's instance variables: 
a Bitmap of length 0

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	termina
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'para curarme 
me dieron quimioterapia
y sané
una parte de mi
...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	513139
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->termina #helper->termina #position->a G...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=q6Lnhq31hP6iVS3M","_k=iw7RDQ22Q96QZdAw","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id65,id65,9,-604,266,470.921875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=q6Lnhq31hP6iVS3M","_k=iw7RDQ2...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=q6Lnhq31hP6...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id65,id65,9,-604,266,470.921875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id65,id65,9,-604,266,470.921875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id65,id65,9,-604,266,470.921875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 321)
		nextKey: 	327


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 321)
		nextKey: 	327


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
OutOfMemory
25 March 2020 11:12:58.343188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmalltalkImage>>growMemoryByAtLeast:
	Receiver: Smalltalk
	Arguments and temporary variables: 
		numBytes: 	4993968144
	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	nil
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	nil
		vm: 	a VirtualMachine


Bitmap class(Behavior)>>handleFailingBasicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		bytesRequested: 	4993968144
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>basicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		ec: 	#'insufficient object memory'
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>new:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71...etc...
		s: 	a ReadStream
		bitmap: 	nil
		size: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	termina
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'para curarme 
me dieron quimioterapia
y sané
una parte de mi
...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	672152
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->termina #helper->termina #position->a G...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=q6Lnhq31hP6iVS3M","_k=iw7RDQ22Q96QZdAw","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id65,id65,9,-604,266,470.921875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=q6Lnhq31hP6iVS3M","_k=iw7RDQ2...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=q6Lnhq31hP6...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id65,id65,9,-604,266,470.921875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id65,id65,9,-604,266,470.921875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id65,id65,9,-604,266,470.921875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 321)
		nextKey: 	327


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 321)
		nextKey: 	327


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C2...etc...


[ currentHandler handleExceptionsDuring: aTHERE_BE_DRAGONS_HERE
OutOfMemory
25 March 2020 11:13:03.033188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmalltalkImage>>growMemoryByAtLeast:
	Receiver: Smalltalk
	Arguments and temporary variables: 
		numBytes: 	4993968144
	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	nil
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	nil
		vm: 	a VirtualMachine


Bitmap class(Behavior)>>handleFailingBasicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		bytesRequested: 	4993968144
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>basicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		ec: 	#'insufficient object memory'
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>new:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71...etc...
		s: 	a ReadStream
		bitmap: 	nil
		size: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	termina
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'para curarme 
me dieron quimioterapia
y sané
una parte de mi
...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	825500
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->termina #helper->termina #position->a G...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=q6Lnhq31hP6iVS3M","_k=iw7RDQ22Q96QZdAw","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id65,id65,9,-604,266,470.921875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=q6Lnhq31hP6iVS3M","_k=iw7RDQ2...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=q6Lnhq31hP6...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id65,id65,9,-604,266,470.921875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id65,id65,9,-604,266,470.921875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id65,id65,9,-604,266,470.921875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 321)
		nextKey: 	327


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 321)
		nextKey: 	327


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C2...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
OutOfMemory
25 March 2020 11:13:05.015188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmalltalkImage>>growMemoryByAtLeast:
	Receiver: Smalltalk
	Arguments and temporary variables: 
		numBytes: 	4993968144
	Receiver's instance variables: 
		globals: 	a SystemDictionary(lots of globals)
		deferredStartupActions: 	nil
		specialObjectsArray: 	an Array(nil false true #Processor->Processor Bitmap Small...etc...
		session: 	nil
		vm: 	a VirtualMachine


Bitmap class(Behavior)>>handleFailingBasicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		bytesRequested: 	4993968144
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>basicNew:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
		ec: 	#'insufficient object memory'
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class(Behavior)>>new:
	Receiver: Bitmap
	Arguments and temporary variables: 
		sizeRequested: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Bitmap class>>decompressFromByteArray:
	Receiver: Bitmap
	Arguments and temporary variables: 
		byteArray: 	#[255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 71...etc...
		s: 	a ReadStream
		bitmap: 	nil
		size: 	1248492031
	Receiver's instance variables: 
		superclass: 	ArrayedCollection
		methodDict: 	a MethodDictionary(#asByteArray->Bitmap>>#asByteArray #atAllPut:->B...etc...
		format: 	655360
		layout: 	a WordLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#Bitmap
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Primitives-Base'


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	termina
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'para curarme 
me dieron quimioterapia
y sané
una parte de mi
...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	877904
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->termina #helper->termina #position->a G...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=q6Lnhq31hP6iVS3M","_k=iw7RDQ22Q96QZdAw","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id65,id65,9,-604,266,470.921875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=q6Lnhq31hP6iVS3M","_k=iw7RDQ2...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=q6Lnhq31hP6...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id65,id65,9,-604,266,470.921875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id65,id65,9,-604,266,470.921875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id65,id65,9,-604,266,470.921875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 321)
		nextKey: 	327


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id65%2Cid65%2C9%2C-604%2C...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 321)
		nextKey: 	327


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASessionTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
25 March 2020 11:26:15.752188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ZnBufferedReadStream(Object)>>doesNotUnderstand: #nextWordsInto:
	Receiver: a ZnBufferedReadStream
	Arguments and temporary variables: 
		aMessage: 	nextWordsInto: a Bitmap of length 0
		exception: 	MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
		resumeValue: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		position: 	1
		limit: 	0


Bitmap>>fromByteStream:
	Receiver: a Bitmap of length 0
	Arguments and temporary variables: 
		aStream: 	a ZnBufferedReadStream
	Receiver's instance variables: 
a Bitmap of length 0

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	complices
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	681148
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->complices #helper->complices #position-...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=-EfUmN0QKjuSxWUp","_k=jr0N5zOD8umy8GsB","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id47,id47,17,-628,202,404.1875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=-EfUmN0QKjuSxWUp","_k=jr0N5zO...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=-EfUmN0QKju...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id47,id47,17,-628,202,404.1875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id47,id47,17,-628,202,404.1875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id47,id47,17,-628,202,404.1875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 267)
		nextKey: 	273


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 267)
		nextKey: 	273


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActiTHERE_BE_DRAGONS_HERE
Error: image format not recognized
25 March 2020 11:27:33.524188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ImageReadWriter class(Object)>>error:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aString: 	'image format not recognized'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


OrderedCollection(Collection)>>detect:ifFound:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		foundBlock: 	[ :element | element ]
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


OrderedCollection(Collection)>>detect:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


ImageReadWriter class>>formFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aBinaryReadStream: 	a ZnBufferedReadStream
		positionableReadStream: 	a ZnPositionableReadStream
		reader: 	nil
		readerClass: 	nil
		form: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	a ZnBufferedReadStream
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (Form
		fromBinaryStream:
			(ZnBufferedReadStream
...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(3432192)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(3432192)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(788887040)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(3432192)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@278)
		owner: 	a TransformWithLayoutMorph(777609728)
		submorphs: 	an Array(a RubCursor(563119616) a RubPrimarySelectionMorph(103176678...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (399059456) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(778185472)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(563119616)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(404071168))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(788887040)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		laTHERE_BE_DRAGONS_HERE
Error: image format not recognized
25 March 2020 11:27:55.292188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ImageReadWriter class(Object)>>error:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aString: 	'image format not recognized'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


OrderedCollection(Collection)>>detect:ifFound:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		foundBlock: 	[ :element | element ]
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


OrderedCollection(Collection)>>detect:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


ImageReadWriter class>>formFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aBinaryReadStream: 	a ZnBufferedReadStream
		positionableReadStream: 	a ZnPositionableReadStream
		reader: 	nil
		readerClass: 	nil
		form: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	a ZnBufferedReadStream
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Form
		fromBinaryStream:
			(ZnBufferedReadStream
	...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(3432192)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(3432192)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(788887040)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(3432192)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@278)
		owner: 	a TransformWithLayoutMorph(777609728)
		submorphs: 	an Array(a RubCursor(563119616) a RubPrimarySelectionMorph(103176678...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (399059456) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(778185472)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(563119616)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1042523904))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(788887040)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959381
		lastStepMessage: 	nil
		lastCycleTime: 	4964392
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(563119616)))
		lastAlarmTime: 	4964326
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959381
		lastStepMessage: 	nil
		lastCycleTime: 	4964392
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(563119616)))
		lastAlarmTime: 	4964326
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	4959381
		lastStepMessage: 	nil
		lastCycleTime: 	4964392
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(563119616)))
		lastAlarmTime: 	4964326
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
25 March 2020 11:28:47.278188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ZnBufferedReadStream(Object)>>doesNotUnderstand: #nextWordsInto:
	Receiver: a ZnBufferedReadStream
	Arguments and temporary variables: 
		aMessage: 	nextWordsInto: a Bitmap of length 0
		exception: 	MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
		resumeValue: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		position: 	1
		limit: 	0


Bitmap>>fromByteStream:
	Receiver: a Bitmap of length 0
	Arguments and temporary variables: 
		aStream: 	a ZnBufferedReadStream
	Receiver's instance variables: 
a Bitmap of length 0

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	complices
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	576538
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->complices #helper->complices #position-...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=-EfUmN0QKjuSxWUp","_k=jr0N5zOD8umy8GsB","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id47,id47,17,-628,202,404.1875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=-EfUmN0QKjuSxWUp","_k=jr0N5zO...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=-EfUmN0QKju...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id47,id47,17,-628,202,404.1875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id47,id47,17,-628,202,404.1875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id47,id47,17,-628,202,404.1875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 267)
		nextKey: 	273


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 267)
		nextKey: 	273


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2C202%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2C202%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2C202%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2C202%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2C202%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(THERE_BE_DRAGONS_HERE
MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
25 March 2020 11:28:48.696188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ZnBufferedReadStream(Object)>>doesNotUnderstand: #nextWordsInto:
	Receiver: a ZnBufferedReadStream
	Arguments and temporary variables: 
		aMessage: 	nextWordsInto: a Bitmap of length 0
		exception: 	MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
		resumeValue: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		position: 	1
		limit: 	0


Bitmap>>fromByteStream:
	Receiver: a Bitmap of length 0
	Arguments and temporary variables: 
		aStream: 	a ZnBufferedReadStream
	Receiver's instance variables: 
a Bitmap of length 0

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	complices
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ...etc...
		byteString: 	'ÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo~ÿGgvÿP...etc...
		index: 	598771
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->complices #helper->complices #position-...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=-EfUmN0QKjuSxWUp","_k=jr0N5zOD8umy8GsB","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id47,id47,17,-628,202,404.1875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=-EfUmN0QKjuSxWUp","_k=jr0N5zO...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=-EfUmN0QKju...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id47,id47,17,-628,202,404.1875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id47,id47,17,-628,202,404.1875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id47,id47,17,-628,202,404.1875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 267)
		nextKey: 	273


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 267)
		nextKey: 	273


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id47%2Cid47%2C17%2C-628%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: ByteArray>>compressToByteArray
25 March 2020 11:49:38.140188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteArray(Object)>>doesNotUnderstand: #compressToByteArray
	Receiver: #[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
	Arguments and temporary variables: 
		aMessage: 	compressToByteArray
		exception: 	MessageNotUnderstood: ByteArray>>compressToByteArray
		resumeValue: 	nil
	Receiver's instance variables: 
#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	tendidas
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	nil
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->tendidas #helper->tendidas #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=-EfUmN0QKjuSxWUp","_k=xLScVyj0XOvJr4-r","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id73,id73,11,-522,268,470.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=-EfUmN0QKjuSxWUp","_k=xLScVyj...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=-EfUmN0QKju...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id73,id73,11,-522,268,470.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id73,id73,11,-522,268,470.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id73,id73,11,-522,268,470.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C11%2C-522%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 519)
		nextKey: 	525


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id73%2Cid73%2C11%2C-522%2...etc...
		set: 	a Set(a WAValueCallback a JSAjaxCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 519)
		nextKey: 	525


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error whTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
25 March 2020 11:50:20.733188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ZnBufferedReadStream(Object)>>doesNotUnderstand: #nextWordsInto:
	Receiver: a ZnBufferedReadStream
	Arguments and temporary variables: 
		aMessage: 	nextWordsInto: a Bitmap of length 0
		exception: 	MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
		resumeValue: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		position: 	1
		limit: 	0


Bitmap>>fromByteStream:
	Receiver: a Bitmap of length 0
	Arguments and temporary variables: 
		aStream: 	a ZnBufferedReadStream
	Receiver's instance variables: 
a Bitmap of length 0

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	aprendimos
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ...etc...
		byteString: 	'ÿ àáÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo...etc...
		index: 	247920
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->aprendimos #helper->aprendimos #positio...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=KtsgSl14prYjk23W","_k=2TyGhvyejnWwf2tk","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id39,id39,29,-553,178,439.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=KtsgSl14prYjk23W","_k=2TyGhvy...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=KtsgSl14prY...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id39,id39,29,-553,178,439.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id39,id39,29,-553,178,439.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id39,id39,29,-553,178,439.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 281)
		nextKey: 	287


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 281)
		nextKey: 	287


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObjeTHERE_BE_DRAGONS_HERE
Error: image format not recognized
25 March 2020 11:51:36.681188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ImageReadWriter class(Object)>>error:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aString: 	'image format not recognized'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


OrderedCollection(Collection)>>detect:ifFound:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		foundBlock: 	[ :element | element ]
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


OrderedCollection(Collection)>>detect:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


ImageReadWriter class>>formFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aBinaryReadStream: 	a ZnBufferedReadStream
		positionableReadStream: 	a ZnPositionableReadStream
		reader: 	nil
		readerClass: 	nil
		form: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	a ZnBufferedReadStream
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Form
		fromBinaryStream:
			(ZnBufferedReadStream
	...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(781897472)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@278)
		owner: 	a TransformWithLayoutMorph(899445248)
		submorphs: 	an Array(a RubCursor(302285312) a RubPrimarySelectionMorph(349253120...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (808827392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(842111744)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(302285312)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(393712384))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
	THERE_BE_DRAGONS_HERE
Instance of ByteArray did not understand #peek
25 March 2020 11:52:35.593188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteArray(Object)>>doesNotUnderstand: #peek
	Receiver: #[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
	Arguments and temporary variables: 
		aMessage: 	peek
		exception: 	MessageNotUnderstood: ByteArray>>peek
		resumeValue: 	nil
	Receiver's instance variables: 
#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...

Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 11...etc...
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Form
		fromBinaryStream: (ThisContext namedTempAt: ...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(781897472)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@278)
		owner: 	a TransformWithLayoutMorph(899445248)
		submorphs: 	an Array(a RubPrimarySelectionMorph(912245248) a RubCursor(302285312...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (808827392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(842111744)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(302285312)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(300531456))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6428748
		lastStepMessage: 	nil
		lastCycleTime: 	6444726
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6444669
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6428748
		lastStepMessage: 	nil
		lastCycleTime: 	6444726
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6444669
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6428748
		lastStepMessage: 	nil
		lastCycleTime: 	6444726
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6444669
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteArray(Object)>>doesNotUnderstand: #peek
Form class>>fromBinaryStream:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of ByteArray did not understand #isBinary
25 March 2020 11:53:05.235188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ByteArray(Object)>>doesNotUnderstand: #isBinary
	Receiver: #[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...
	Arguments and temporary variables: 
		aMessage: 	isBinary
		exception: 	MessageNotUnderstood: ByteArray>>isBinary
		resumeValue: 	nil
	Receiver's instance variables: 
#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 255 73 105 120 255 7...etc...

ZnBufferedReadStream>>collectionSpecies
	Receiver: a ZnBufferedReadStream
	Arguments and temporary variables: 

	Receiver's instance variables: 
		stream: 	#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 2...etc...
		buffer: 	nil
		position: 	1
		limit: 	0


ZnBufferedReadStream>>sizeBuffer:
	Receiver: a ZnBufferedReadStream
	Arguments and temporary variables: 
		size: 	65536
	Receiver's instance variables: 
		stream: 	#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 2...etc...
		buffer: 	nil
		position: 	1
		limit: 	0


ZnBufferedReadStream>>on:
	Receiver: a ZnBufferedReadStream
	Arguments and temporary variables: 
		readStream: 	#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 1...etc...
	Receiver's instance variables: 
		stream: 	#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 127 2...etc...
		buffer: 	nil
		position: 	1
		limit: 	0


ZnBufferedReadStream class>>on:
	Receiver: ZnBufferedReadStream
	Arguments and temporary variables: 
		readStream: 	#[255 0 3 133 224 225 19 255 74 106 121 255 81 113 128 255 80 112 1...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#atEnd->ZnBufferedReadStream>>#atEnd #close->ZnB...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ZnBufferedReadStream
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Zinc-Character-Encoding-Core'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Form
		fromBinaryStream:
			(ZnBufferedReadStream
	...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(781897472)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@278)
		owner: 	a TransformWithLayoutMorph(899445248)
		submorphs: 	an Array(a RubPrimarySelectionMorph(858860288) a RubCursor(302285312...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (808827392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(842111744)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(302285312)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(889930240))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6449803
		lastStepMessage: 	nil
		lastCycleTime: 	6474343
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6474290
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6449803
		lastStepMessage: 	nil
		lastCycleTime: 	6474343
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6474290
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6449803
		lastStepMessage: 	nil
		lastCycleTime: 	6474343
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6474290
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ByteArray(Object)>>doesNotUnderstand: #isBinary
ZnBufferedReadStream>>collectionSpecies
ZnBufferedReadStream>>sizeBuffer:
ZnBufferedReadStream>>on:
ZnBufferedReadStream class>>on:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Error: image format not recognized
25 March 2020 11:53:53.557188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ImageReadWriter class(Object)>>error:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aString: 	'image format not recognized'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


OrderedCollection(Collection)>>detect:ifFound:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		foundBlock: 	[ :element | element ]
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


OrderedCollection(Collection)>>detect:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


ImageReadWriter class>>formFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aBinaryReadStream: 	a ZnBufferedReadStream
		positionableReadStream: 	a ZnPositionableReadStream
		reader: 	nil
		readerClass: 	nil
		form: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	a ZnBufferedReadStream
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Form
		fromBinaryStream:
			(ZnBufferedReadStream
	...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(781897472)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@278)
		owner: 	a TransformWithLayoutMorph(899445248)
		submorphs: 	an Array(a RubPrimarySelectionMorph(172966656) a RubCursor(302285312...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (808827392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(842111744)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(302285312)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(556904960))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6479416
		lastStepMessage: 	nil
		lastCycleTime: 	6522663
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6522604
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6479416
		lastStepMessage: 	nil
		lastCycleTime: 	6522663
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6522604
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6479416
		lastStepMessage: 	nil
		lastCycleTime: 	6522663
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6522604
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ImageReadWriter class(Object)>>error:
[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
OrderedCollection(Collection)>>detect:ifFound:ifNone:
OrderedCollection(Collection)>>detect:ifNone:
ImageReadWriter class>>readerClasTHERE_BE_DRAGONS_HERE
Error: image format not recognized
25 March 2020 11:54:09.346188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ImageReadWriter class(Object)>>error:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aString: 	'image format not recognized'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


OrderedCollection(Collection)>>detect:ifFound:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		foundBlock: 	[ :element | element ]
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


OrderedCollection(Collection)>>detect:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


ImageReadWriter class>>formFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aBinaryReadStream: 	a ZnBufferedReadStream
		positionableReadStream: 	a ZnPositionableReadStream
		reader: 	nil
		readerClass: 	nil
		form: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	a ZnBufferedReadStream
		firstByte: 	nil
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Form
		fromBinaryStream:
			(ZnBufferedReadStream
	...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(781897472)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@278)
		owner: 	a TransformWithLayoutMorph(899445248)
		submorphs: 	an Array(a RubPrimarySelectionMorph(934189824) a RubCursor(302285312...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (808827392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(842111744)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(302285312)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(512465408))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6479416
		lastStepMessage: 	nil
		lastCycleTime: 	6538438
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6538377
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6479416
		lastStepMessage: 	nil
		lastCycleTime: 	6538438
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6538377
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6479416
		lastStepMessage: 	nil
		lastCycleTime: 	6538438
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6538377
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ImageReadWriter class(Object)>>error:
[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
OrderedCollection(Collection)>>detect:ifFound:ifNone:
OrderedCollection(Collection)>>detect:ifNone:
ImageReadWriter class>>readerClassFromStream:
ImageReadWriter class>>formFromStream:
Form class>>fromBinaryStream:
Imagenes>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self vaTHERE_BE_DRAGONS_HERE
Error: image format not recognized
25 March 2020 11:55:16.128188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ImageReadWriter class(Object)>>error:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aString: 	'image format not recognized'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


OrderedCollection(Collection)>>detect:ifFound:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		foundBlock: 	[ :element | element ]
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


OrderedCollection(Collection)>>detect:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


ImageReadWriter class>>formFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aBinaryReadStream: 	a ZnBufferedReadStream
		positionableReadStream: 	a ZnPositionableReadStream
		reader: 	nil
		readerClass: 	nil
		form: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	a ZnBufferedReadStream
		firstByte: 	255
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Form
		fromBinaryStream:
			(ZnBufferedReadStream
	...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(781897472)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@278)
		owner: 	a TransformWithLayoutMorph(899445248)
		submorphs: 	an Array(a RubPrimarySelectionMorph(934189824) a RubCursor(302285312...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (808827392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(842111744)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(302285312)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(1043139328))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6591655
		lastStepMessage: 	nil
		lastCycleTime: 	6605222
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6605158
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6591655
		lastStepMessage: 	nil
		lastCycleTime: 	6605222
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6605158
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap()
		lastStepTime: 	6591655
		lastStepMessage: 	nil
		lastCycleTime: 	6605222
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6605158
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ImageReadWriter class(Object)>>error:
[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
OrderedCollection(Collection)>>detect:ifFound:ifNone:
OrderedCollectTHERE_BE_DRAGONS_HERE
Error: image format not recognized
25 March 2020 11:56:51.971188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ImageReadWriter class(Object)>>error:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aString: 	'image format not recognized'
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


OrderedCollection(Collection)>>detect:ifFound:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		foundBlock: 	[ :element | element ]
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


OrderedCollection(Collection)>>detect:ifNone:
	Receiver: an OrderedCollection(BMPReadWriter GIFReadWriter JPEGReadWriter PNGReadWriter PluginBasedJ...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :subclass | 
positionableReadStream
	savingPositionDo: [ subclass und...etc...
		exceptionBlock: 	[ positionableReadStream close.
^ self error: 'image format not...etc...
	Receiver's instance variables: 
		array: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. PluginBase...etc...
		firstIndex: 	1
		lastIndex: 	6


ImageReadWriter class>>readerClassFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		positionableReadStream: 	a ZnPositionableReadStream
		readerClass: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


ImageReadWriter class>>formFromStream:
	Receiver: ImageReadWriter
	Arguments and temporary variables: 
		aBinaryReadStream: 	a ReadStream
		positionableReadStream: 	a ZnPositionableReadStream
		reader: 	nil
		readerClass: 	nil
		form: 	nil
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#allTypicalFileExtensions->ImageReadWriter>>#all...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{BMPReadWriter. GIFReadWriter. JPEGReadWriter. PNGReadWriter. Plugi...etc...
		name: 	#ImageReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form class>>fromBinaryStream:
	Receiver: Form
	Arguments and temporary variables: 
		aBinaryStream: 	a ReadStream
		firstByte: 	255
	Receiver's instance variables: 
		superclass: 	DisplayMedium
		methodDict: 	a MethodDictionary(size 206)
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ColorForm. Cursor. DisplayScreen. GlyphForm. AthensCairoSurfaceFor...etc...
		name: 	#Form
		classPool: 	a Dictionary(#FloodFillTolerance->nil )
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Display Objects-Forms'


Imagenes>>DoItIn:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		ThisContext: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Form
		fromBinaryStream: (ReadStream on: (ThisConte...etc...
		source: 	a ReadStream
		context: 	Imagenes>>convertImageWith:inForm:
		receiver: 	an Imagenes
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	an Imagenes
		ctxt: 	Imagenes>>convertImageWith:inForm:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(781897472)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(781897472)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@278)
		owner: 	a TransformWithLayoutMorph(899445248)
		submorphs: 	an Array(a RubPrimarySelectionMorph(953159424) a RubCursor(302285312...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (808827392) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(842111744)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(302285312)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(597242368))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(382174720)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(363607808) named: In...etc...
		lastStepTime: 	6701018
		lastStepMessage: 	nil
		lastCycleTime: 	6701078
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6701018
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(363607808) named: In...etc...
		lastStepTime: 	6701018
		lastStepMessage: 	nil
		lastCycleTime: 	6701078
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6701018
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a GLMSystemWindow(363607808) named: In...etc...
		lastStepTime: 	6701018
		lastStepMessage: 	nil
		lastCycleTime: 	6701078
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(302285312)))
		lastAlarmTime: 	6701018
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ImageReadWriter class(Object)>>error:
[ positionableReadStream close.
^ self error: 'image format not recognized' ] in ImageReadWriter class>>readerClassFromStream:
OrderedCollection(Collection)>>detect:ifFound:ifNone:
OrderedCollectTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
25 March 2020 11:57:38.155188 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ZnBufferedReadStream(Object)>>doesNotUnderstand: #nextWordsInto:
	Receiver: a ZnBufferedReadStream
	Arguments and temporary variables: 
		aMessage: 	nextWordsInto: a Bitmap of length 0
		exception: 	MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
		resumeValue: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		position: 	1
		limit: 	0


Bitmap>>fromByteStream:
	Receiver: a Bitmap of length 0
	Arguments and temporary variables: 
		aStream: 	a ZnBufferedReadStream
	Receiver's instance variables: 
a Bitmap of length 0

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	aprendimos
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'no cambió el delirio 
ni las formas del fracaso
aprendimos
a ...etc...
		byteString: 	'ÿ àáÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo...etc...
		index: 	310826
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->aprendimos #helper->aprendimos #positio...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=KtsgSl14prYjk23W","_k=2TyGhvyejnWwf2tk","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id39,id39,29,-553,178,439.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=KtsgSl14prYjk23W","_k=2TyGhvy...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=KtsgSl14prY...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id39,id39,29,-553,178,439.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id39,id39,29,-553,178,439.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id39,id39,29,-553,178,439.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 281)
		nextKey: 	287


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 281)
		nextKey: 	287


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2C178%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2C178%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2C178%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2C178%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2C178%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id39%2Cid39%2C29%2C-553%2C178%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver'THERE_BE_DRAGONS_HERE
MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
26 March 2020 8:58:01.285023 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ZnBufferedReadStream(Object)>>doesNotUnderstand: #nextWordsInto:
	Receiver: a ZnBufferedReadStream
	Arguments and temporary variables: 
		aMessage: 	nextWordsInto: a Bitmap of length 0
		exception: 	MessageNotUnderstood: ZnBufferedReadStream>>nextWordsInto:
		resumeValue: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		position: 	1
		limit: 	0


Bitmap>>fromByteStream:
	Receiver: a Bitmap of length 0
	Arguments and temporary variables: 
		aStream: 	a ZnBufferedReadStream
	Receiver's instance variables: 
a Bitmap of length 0

Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	tendidas
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	'ÿ àáÿJjyÿQqÿPpÿIixÿGgvÿOo~ÿUuÿWwÿMm|ÿIixÿPpÿIixÿHhwÿTtÿOo...etc...
		index: 	215164
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: form ];
					callback: [  ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->tendidas #helper->tendidas #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZfNbWd8AM6","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id61,id61,-18,-523,239,469.140625'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZ...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=tkqi9LweWPH...etc...
		callback: 	[  ]
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id61,id61,-18,-523,239,469.140625')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id61,id61,-18,-523,239,469.140625'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id61,id61,-18,-523,239,469.140625')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-18%2C-523%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id61%2Cid61%2C-18%2C-523%...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Error: Range must be positive
26 March 2020 8:59:34.538023 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SharedRandom(Object)>>error:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		aString: 	'Range must be positive'
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


SharedRandom(Random)>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ super nextInt: anInteger ] in SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
		caught: 	true
		blockValue: 	nil
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


BlockClosure>>ensure:
	Receiver: [ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ caught
	ifTrue: [ self signal ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	Semaphore>>critical:
		startpc: 	42
		numArgs: 	0


Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		caught: 	true
		blockValue: 	nil
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


Interval(SequenceableCollection)>>atRandom:
	Receiver: (100 to: 1)
	Arguments and temporary variables: 
		aGenerator: 	a SharedRandom
	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Interval(Collection)>>atRandom
	Receiver: (100 to: 1)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	silencio
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	' '
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: form ];
					callback: [  ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->silencio #helper->silencio #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZfNbWd8AM6","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id51,id51,58,-751,243,379.046875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZ...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=tkqi9LweWPH...etc...
		callback: 	[  ]
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id51,id51,58,-751,243,379.046875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id51,id51,58,-751,243,379.046875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id51,id51,58,-751,243,379.046875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessinTHERE_BE_DRAGONS_HERE
Error: Range must be positive
26 March 2020 9:00:18.412023 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SharedRandom(Object)>>error:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		aString: 	'Range must be positive'
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


SharedRandom(Random)>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ super nextInt: anInteger ] in SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
		caught: 	true
		blockValue: 	nil
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


BlockClosure>>ensure:
	Receiver: [ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ caught
	ifTrue: [ self signal ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	Semaphore>>critical:
		startpc: 	42
		numArgs: 	0


Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		caught: 	true
		blockValue: 	nil
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


Interval(SequenceableCollection)>>atRandom:
	Receiver: (100 to: 1)
	Arguments and temporary variables: 
		aGenerator: 	a SharedRandom
	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Interval(Collection)>>atRandom
	Receiver: (100 to: 1)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	flor
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	' '
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: form ];
					callback: [  ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->flor #helper->flor #position->a GRSmall...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZfNbWd8AM6","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id27,id27,77,-570,190,496.875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZ...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=tkqi9LweWPH...etc...
		callback: 	[  ]
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id27,id27,77,-570,190,496.875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id27,id27,77,-570,190,496.875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id27,id27,77,-570,190,496.875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2C190%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2C190%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2C190%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2C190%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Error: Range must be positive
26 March 2020 9:00:19.611023 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SharedRandom(Object)>>error:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		aString: 	'Range must be positive'
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


SharedRandom(Random)>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ super nextInt: anInteger ] in SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
		caught: 	true
		blockValue: 	nil
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


BlockClosure>>ensure:
	Receiver: [ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ caught
	ifTrue: [ self signal ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	Semaphore>>critical:
		startpc: 	42
		numArgs: 	0


Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		caught: 	true
		blockValue: 	nil
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


Interval(SequenceableCollection)>>atRandom:
	Receiver: (100 to: 1)
	Arguments and temporary variables: 
		aGenerator: 	a SharedRandom
	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Interval(Collection)>>atRandom
	Receiver: (100 to: 1)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	silencio
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	' '
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: form ];
					callback: [  ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->silencio #helper->silencio #position->a...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZfNbWd8AM6","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id51,id51,58,-751,243,379.046875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZ...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=tkqi9LweWPH...etc...
		callback: 	[  ]
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id51,id51,58,-751,243,379.046875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id51,id51,58,-751,243,379.046875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id51,id51,58,-751,243,379.046875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2C243%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2C243%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2C243%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2C243%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2C243%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id51%2Cid51%2C58%2C-751%2C243%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDTHERE_BE_DRAGONS_HERE
Error: Range must be positive
26 March 2020 9:00:20.741023 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SharedRandom(Object)>>error:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		aString: 	'Range must be positive'
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


SharedRandom(Random)>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ super nextInt: anInteger ] in SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
		caught: 	true
		blockValue: 	nil
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


BlockClosure>>ensure:
	Receiver: [ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ caught
	ifTrue: [ self signal ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	Semaphore>>critical:
		startpc: 	42
		numArgs: 	0


Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		caught: 	true
		blockValue: 	nil
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


Interval(SequenceableCollection)>>atRandom:
	Receiver: (100 to: 1)
	Arguments and temporary variables: 
		aGenerator: 	a SharedRandom
	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Interval(Collection)>>atRandom
	Receiver: (100 to: 1)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	flor
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	' '
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: form ];
					callback: [  ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->flor #helper->flor #position->a GRSmall...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZfNbWd8AM6","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id27,id27,77,-570,190,496.875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZ...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=tkqi9LweWPH...etc...
		callback: 	[  ]
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id27,id27,77,-570,190,496.875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id27,id27,77,-570,190,496.875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id27,id27,77,-570,190,496.875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: THERE_BE_DRAGONS_HERE
Error: Range must be positive
26 March 2020 9:00:22.287023 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SharedRandom(Object)>>error:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		aString: 	'Range must be positive'
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


SharedRandom(Random)>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ super nextInt: anInteger ] in SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
		caught: 	true
		blockValue: 	nil
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


BlockClosure>>ensure:
	Receiver: [ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ caught
	ifTrue: [ self signal ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	Semaphore>>critical:
		startpc: 	42
		numArgs: 	0


Semaphore>>critical:
	Receiver: a Semaphore()
	Arguments and temporary variables: 
		caught: 	true
		blockValue: 	nil
		mutuallyExcludedBlock: 	[ super nextInt: anInteger ]
	Receiver's instance variables: 
		firstLink: 	nil
		lastLink: 	nil
		excessSignals: 	0


SharedRandom>>nextInt:
	Receiver: a SharedRandom
	Arguments and temporary variables: 
		anInteger: 	0
	Receiver's instance variables: 
		seed: 	7.04318179e8
		a: 	16807.0
		m: 	2.147483647e9
		q: 	127773.0
		r: 	2836.0
		mutex: 	a Semaphore()


Interval(SequenceableCollection)>>atRandom:
	Receiver: (100 to: 1)
	Arguments and temporary variables: 
		aGenerator: 	a SharedRandom
	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Interval(Collection)>>atRandom
	Receiver: (100 to: 1)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		start: 	100
		stop: 	1
		step: 	1


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	flor
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	'seremos frágiles
como una flor en el pantano
nos daremos
la m...etc...
		byteString: 	' '
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
							[ :event | model convertImageWith: (event at: #draggable) inForm: form ];
					callback: [  ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->flor #helper->flor #position->a GRSmall...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZfNbWd8AM6","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id27,id27,77,-570,190,496.875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=tkqi9LweWPH95Bab","_k=j9xPJKZ...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=tkqi9LweWPH...etc...
		callback: 	[  ]
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id27,id27,77,-570,190,496.875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id27,id27,77,-570,190,496.875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id27,id27,77,-570,190,496.875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id27%2Cid27%2C77%2C-570%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 565)
		nextKey: 	571


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValuTHERE_BE_DRAGONS_HERE
PrimitiveFailed: primitive #primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr: in PluginBasedJPEGReadWriter failed
26 March 2020 9:03:46.833023 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PluginBasedJPEGReadWriter(ProtoObject)>>primitiveFailed:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		selector: 	#primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr...etc...
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter(ProtoObject)>>primitiveFailed
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 

	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>primJPEGWriteImage:onByteArray:form:quality:progressiveJPEG:errorMgr:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aJPEGCompressStruct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		destination: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		form: 	Form(481x480x32)
		quality: 	-1
		progressiveFlag: 	false
		aJPEGErrorMgr2Struct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:quality:progressiveJPEG:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		quality: 	-1
		progressiveFlag: 	false
		sourceForm: 	Form(481x480x32)
		jpegCompressStruct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		jpegErrorMgr2Struct: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...etc...
		buffer: 	#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		byteCount: 	nil
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter>>nextPutImage:
	Receiver: a PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
	Receiver's instance variables: 
		stream: 	a ReadWriteStream


PluginBasedJPEGReadWriter class(ImageReadWriter class)>>putForm:onStream:
	Receiver: PluginBasedJPEGReadWriter
	Arguments and temporary variables: 
		aForm: 	Form(481x480x32)
		aBinaryWriteStream: 	a ReadWriteStream
		writer: 	a PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		superclass: 	ImageReadWriter
		methodDict: 	a MethodDictionary(#compress:quality:->PluginBasedJPEGReadWriter>>#...etc...
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#PluginBasedJPEGReadWriter
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Graphics-Files'


Form>>seasideMimeDocumentType:
	Receiver: Form(481x480x32)
	Arguments and temporary variables: 
		aMimeType: 	'image/jpg'
		aStream: 	a ReadWriteStream
		writer: 	PluginBasedJPEGReadWriter
	Receiver's instance variables: 
		bits: 	a Bitmap of length 0
		width: 	481
		height: 	480
		depth: 	32
		offset: 	nil


WADocumentHandler class>>document:mimeType:fileName:
	Receiver: WADocumentHandler
	Arguments and temporary variables: 
		anObject: 	Form(481x480x32)
		aMimeType: 	'image/jpg'
		aString: 	nil
		document: 	nil
	Receiver's instance variables: 
		superclass: 	WARequestHandler
		methodDict: 	a MethodDictionary(#=->WADocumentHandler>>#= #document->WADocumentH...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WADocumentHandler
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'


WARenderContext>>urlForDocument:mimeType:fileName:
	Receiver: a WARenderContext
	Arguments and temporary variables: 
		anObject: 	Form(481x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
		handler: 	nil
	Receiver's instance variables: 
		visitor: 	a WARenderingGuide
		actionUrl: 	/poemas?_s=tkqi9LweWPH95Bab&_k=tIA49PBT5C9fu2Fy
		actionBaseUrl: 	/poemas?_s=tkqi9LweWPH95Bab&_k=tIA49PBT5C9fu2Fy
		resourceUrl: 	nil
		callbacks: 	a WACallbackRegistry
		document: 	a WAHtmlDocument
		properties: 	nil


WAImageTag>>document:mimeType:fileName:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(481x480x32)
		mimeType: 	'image/jpg'
		fileName: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


WAImageTag>>document:mimeType:
	Receiver: a WAImageTag
	Arguments and temporary variables: 
		aDocument: 	Form(481x480x32)
		mimeType: 	'image/jpg'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('alt'->'')


[ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	nil
		ownTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Verso>>poema
26 March 2020 9:19:06.621023 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #poema
	Receiver: llevaba un ciervo entre mis brazos
	Arguments and temporary variables: 
		aMessage: 	poema
		exception: 	MessageNotUnderstood: Verso>>poema
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'llevaba un ciervo entre mis brazos'
		palabras: 	an OrderedCollection( llevaba un ciervo entre mis brazos)
		poema: 	en el sueño


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unaPalabraReal: 	llevaba un ciervo entre mis brazos
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	nil
		byteString: 	nil
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->llevaba un ciervo entre mis brazos #hel...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=rV9Ji7wAfskrYbUv","_k=ktEr6PMTcVqJ8xgt","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id19,id19,94,-591,206,396.6875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=rV9Ji7wAfskrYbUv","_k=ktEr6PM...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=rV9Ji7wAfsk...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id19,id19,94,-591,206,396.6875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id19,id19,94,-591,206,396.6875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id19,id19,94,-591,206,396.6875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 195)
		nextKey: 	201


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 195)
		nextKey: 	201


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C396.6875&_s=rV9Ji7wAf...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id19%2Cid19%2C94%2C-591%2C206...etc...
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Verso>>poema
26 March 2020 9:19:58.614023 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #poema
	Receiver: llevaba un ciervo entre mis brazos
	Arguments and temporary variables: 
		aMessage: 	poema
		exception: 	MessageNotUnderstood: Verso>>poema
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'llevaba un ciervo entre mis brazos'
		palabras: 	an OrderedCollection( llevaba un ciervo entre mis brazos)
		poema: 	en el sueño


Imagenes>>convertImageWith:inForm:
	Receiver: an Imagenes
	Arguments and temporary variables: 
		unVerso: 	llevaba un ciervo entre mis brazos
		unForm: 	Form(481x480x32)
		poemaConPalabra: 	nil
		byteString: 	nil
		index: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		path: 	'.\imagenes\'
		forms: 	an Array(Form(481x480x32) Form(481x480x32) Form(481x480x32) Form(481x480...etc...
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...


[ :event | model convertImageWith: (event at: #draggable) inForm: form ] in [ html image
	document: form mimeType: 'image/jpg';
	script:
		(html jQuery new droppable
			onDrop:
				(html jQuery this load
					callbackDroppable:
						[ :event | model convertImageWith: (event at: #draggable) inForm: form ])) ] in WAImagenes>>renderForm:withRenderer:
	Receiver: a WAImagenes
	Arguments and temporary variables: 
		form: 	Form(481x480x32)
		html: 	nil
		event: 	a GRSmallDictionary2(#draggable->llevaba un ciervo entre mis brazos #hel...etc...
	Receiver's instance variables: 
		decoration: 	nil
		owner: 	a WAConstruccionDePoemas
		model: 	an Imagenes


[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ] in JQLoad(JQAjax)>>callback:forEvent:
	Receiver: a JQLoad ($(this).load("/poemas",["_s=rV9Ji7wAfskrYbUv","_k=ktEr6PMTcVqJ8xgt","1","2="+enc...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :event | model convertImageWith: (event at: #draggable) inForm: form ...etc...
		anArraySpec: 	#(#(#passenger #draggable) #(#passenger #helper) #(#position #posi...etc...
		value: 	'id19,id19,94,-591,206,396.6875'
	Receiver's instance variables: 
		decoration: 	a JQLoad ($(this).load("/poemas",["_s=rV9Ji7wAfskrYbUv","_k=ktEr6PM...etc...
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('url'->/poemas 'data'->a JSJoin (["_s=rV9Ji7wAfsk...etc...
		callback: 	nil
		callbackId: 	'1'
		selector: 	nil


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: value) ]
	Arguments and temporary variables: 
		anArray: 	#('id19,id19,94,-591,206,396.6875')
		args: 	nil
	Receiver's instance variables: 
		outerContext: 	JQLoad(JQAjax)>>callback:forEvent:
		startpc: 	32
		numArgs: 	1


WAValueCallback>>evaluateWithArgument:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anObject: 	'id19,id19,94,-591,206,396.6875'
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


WAValueCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAValueCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#('id19,id19,94,-591,206,396.6875')
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ :value | aBlock value: (self smalltalkForEvent: anArraySpec value: val...etc...


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAValueCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 195)
		nextKey: 	201


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAValueCallback a JSAjaxCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAValueCallback a JSAjaxCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2...etc...
		set: 	a Set(a JSAjaxCallback a WAValueCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary(size 195)
		nextKey: 	201


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C396.6875&_s=rV9Ji7wAf...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id19%2Cid19%2C94%2C-591%2C206...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2C206%2C396.6875&_s=rV9Ji7wAf...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /poemas?1&2=id19%2Cid19%2C94%2C-591%2C206...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?1&2=id19%2Cid19%2C94%2C-591%2...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


THERE_BE_DRAGONS_HERE
CircularHierarchyError: WAVersosAleatorios: Trying to build a circular hierarchy
27 March 2020 10:16:37.930306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ :aSuperclass | 
aSuperclass = oldClass
	ifTrue: [ CircularHierarchyError signalFor: oldClass ] ] in ShiftClassBuilder>>validateSuperclass
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 
		aSuperclass: 	WAVersosAleatorios
	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#WAVersosAleatorios
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	WAVersosAleatorios
		category: 	'Poemas-Gui'
		newMetaclass: 	nil
		newClass: 	nil
		oldClass: 	WAVersosAleatorios
		oldMetaclass: 	WAVersosAleatorios class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set()
		metaSuperclass: 	nil


WAVersosAleatorios class(Behavior)>>withAllSuperclassesDo:
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 
		aBlock: 	[ :aSuperclass | 
aSuperclass = oldClass
	ifTrue: [ CircularHierarchyEr...etc...
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


ShiftClassBuilder>>validateSuperclass
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#WAVersosAleatorios
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	WAVersosAleatorios
		category: 	'Poemas-Gui'
		newMetaclass: 	nil
		newClass: 	nil
		oldClass: 	WAVersosAleatorios
		oldMetaclass: 	WAVersosAleatorios class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set()
		metaSuperclass: 	nil


ShiftClassBuilder>>build
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#WAVersosAleatorios
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	WAVersosAleatorios
		category: 	'Poemas-Gui'
		newMetaclass: 	nil
		newClass: 	nil
		oldClass: 	WAVersosAleatorios
		oldMetaclass: 	WAVersosAleatorios class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set()
		metaSuperclass: 	nil


[ builder oldClass: oldClass.
newClass := builder build.
self validateReadOnlyInstancesOf: oldClass.
self installInEnvironment: newClass.
self installSubclassInSuperclass: newClass.
builder builderEnhancer beforeMigratingClass: builder installer: self.
self migrateClassTo: newClass.
builder builderEnhancer afterMigratingClass: builder installer: self.
builder builderEnhancer
	propagateChangesToRelatedClasses: newClass
	installer: self ] in ShiftClassInstaller>>make:
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
		newClass: 	nil
	Receiver's instance variables: 
		oldClass: 	WAVersosAleatorios
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


BlockClosure>>on:do:
	Receiver: [ builder oldClass: oldClass.
newClass := builder build.
self validateReadOnlyInstancesOf:...etc...
	Arguments and temporary variables: 
		exception: 	ShNoChangesInClass
		handlerAction: 	[ "If there are no changes in the building, I am not building or...etc...
	Receiver's instance variables: 
		outerContext: 	ShiftClassInstaller>>make:
		startpc: 	104
		numArgs: 	0


ShiftClassInstaller>>make:
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		newClass: 	nil
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
	Receiver's instance variables: 
		oldClass: 	WAVersosAleatorios
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


ShiftClassInstaller class>>make:
	Receiver: ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#builder->ShiftClassInstaller>>#builder #comment...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ShiftAnonymousClassInstaller}
		name: 	#ShiftClassInstaller
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Shift-ClassInstaller-Base'


WAVersosAleatorios class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 
		t: 	#WAVersosAleatorios
		f: 	'owner'
		d: 	''
		s: 	''
		cat: 	'Poemas-Gui'
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAVersosAleatorios class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 
		aSubclassSymbol: 	#WAVersosAleatorios
		instVarNames: 	'owner'
		classVarNames: 	''
		aPackageSymbol: 	'Poemas-Gui'
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary()
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoIt
	^ WAVersosAleatorios
		subclass: #WAVersosAleatorios
		instanceVaria...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'WAVersosAleatorios subclass: #WAVersosAleatorios
	instanceVariableNam...etc...
		aController: 	a RubScrolledTextMorph(518687232)
		aClass: 	WAVersosAleatorios
		oldClass: 	WAVersosAleatorios
		class: 	nil
		newClassName: 	'WAVersosAleatorios'
		defTokens: 	an OrderedCollection('WAVersosAleatorios' 'subclass:' '#WAVersosAlea...etc...
		keywdIx: 	2
		classCompiler: 	an OpalCompiler
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(1042166528)
	Arguments and temporary variables: 
		aString: 	'WAVersosAleatorios subclass: #WAVersosAleatorios
	instanceVariableNam...etc...
		aController: 	a RubScrolledTextMorph(518687232)
		aClass: 	WAVersosAleatorios
	Receiver's instance variables: 
		bounds: 	(5.0@46.0) corner: (1898.0@862.0)
		owner: 	a SystemWindow(68381440) named: WAVersosAleatorios
		submorphs: 	an Array(a ProportionalSplitterMorph(583383808) a PanelMorph(5395409...etc...
		fullBounds: 	(5@46) corner: (1898@862)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (1066166528) [sticky]  [other:  (announcer -> an An...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		navigationPanel: 	a PanelMorph(539540992)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(314417920) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(403292672)
		toolbar: 	a ClyToolbarMorph(1062010624)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStartedTHERE_BE_DRAGONS_HERE
DuplicatedSlotName: Slot #'owner' appeared twice in WAVersosAleatorios
27 March 2020 10:16:54.707306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new
			oldSlot: current;
			newSlot: other;
			host: host;
			signal ] ] in FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#decoration => InstanceVariableSlot #owner => Insta...etc...
		other: 	#owner => InstanceVariableSlot
		current: 	#owner => InstanceVariableSlot
	Receiver's instance variables: 
		host: 	WAVersosAleatorios
		compactClassIndex: 	0
		slotScope: 	a LayoutClassScope(#decoration => InstanceVariableSlot #owner => Ins...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(#decoration => InstanceVariableSlot #owner => InstanceVariableSlot)
	Arguments and temporary variables: 
		aBlock: 	[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new...etc...
		index: 	2
	Receiver's instance variables: 
		array: 	{#decoration => InstanceVariableSlot. #owner => InstanceVariableSlot. ni...etc...
		firstIndex: 	1
		lastIndex: 	2


FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#decoration => InstanceVariableSlot #owner => Insta...etc...
		current: 	#owner => InstanceVariableSlot
	Receiver's instance variables: 
		host: 	WAVersosAleatorios
		compactClassIndex: 	0
		slotScope: 	a LayoutClassScope(#decoration => InstanceVariableSlot #owner => Ins...etc...


FixedLayout(PointerLayout)>>checkSanity
	Receiver: a FixedLayout
	Arguments and temporary variables: 

	Receiver's instance variables: 
		host: 	WAVersosAleatorios
		compactClassIndex: 	0
		slotScope: 	a LayoutClassScope(#decoration => InstanceVariableSlot #owner => Ins...etc...


WAVersosAleatorios class(ClassDescription)>>superclass:withLayoutType:slots:
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 
		aSuperclass: 	WAMuestraDePoemas
		layoutType: 	FixedLayout
		slotArray: 	{#owner => InstanceVariableSlot}
		superLayout: 	a FixedLayout
		newScope: 	a LayoutClassScope(#decoration => InstanceVariableSlot #owner => Inst...etc...
		newLayout: 	a FixedLayout
	Receiver's instance variables: 
		superclass: 	nil
		methodDict: 	nil
		format: 	nil
		layout: 	nil
		organization: 	nil
		subclasses: 	nil
		name: 	#WAVersosAleatorios
		classPool: 	nil
		sharedPools: 	nil
		environment: 	nil
		category: 	nil


ShDefaultBuilderEnhancer>>configureClass:superclass:withLayoutType:slots:
	Receiver: a ShDefaultBuilderEnhancer
	Arguments and temporary variables: 
		newClass: 	WAVersosAleatorios
		superclass: 	WAMuestraDePoemas
		layoutType: 	FixedLayout
		slots: 	{#owner => InstanceVariableSlot}
	Receiver's instance variables: 
a ShDefaultBuilderEnhancer

ShiftClassBuilder>>createClass
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#WAVersosAleatorios
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	WAMuestraDePoemas
		category: 	'Poemas-Gui'
		newMetaclass: 	WAVersosAleatorios class
		newClass: 	WAVersosAleatorios
		oldClass: 	WAVersosAleatorios
		oldMetaclass: 	WAVersosAleatorios class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set(a ShInstanceShapeChanged a ShClassChanged)
		metaSuperclass: 	nil


ShiftClassBuilder>>build
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#WAVersosAleatorios
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	WAMuestraDePoemas
		category: 	'Poemas-Gui'
		newMetaclass: 	WAVersosAleatorios class
		newClass: 	WAVersosAleatorios
		oldClass: 	WAVersosAleatorios
		oldMetaclass: 	WAVersosAleatorios class
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set(a ShInstanceShapeChanged a ShClassChanged)
		metaSuperclass: 	nil


[ builder oldClass: oldClass.
newClass := builder build.
self validateReadOnlyInstancesOf: oldClass.
self installInEnvironment: newClass.
self installSubclassInSuperclass: newClass.
builder builderEnhancer beforeMigratingClass: builder installer: self.
self migrateClassTo: newClass.
builder builderEnhancer afterMigratingClass: builder installer: self.
builder builderEnhancer
	propagateChangesToRelatedClasses: newClass
	installer: self ] in ShiftClassInstaller>>make:
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
		newClass: 	nil
	Receiver's instance variables: 
		oldClass: 	WAVersosAleatorios
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


BlockClosure>>on:do:
	Receiver: [ builder oldClass: oldClass.
newClass := builder build.
self validateReadOnlyInstancesOf:...etc...
	Arguments and temporary variables: 
		exception: 	ShNoChangesInClass
		handlerAction: 	[ "If there are no changes in the building, I am not building or...etc...
	Receiver's instance variables: 
		outerContext: 	ShiftClassInstaller>>make:
		startpc: 	104
		numArgs: 	0


ShiftClassInstaller>>make:
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		newClass: 	nil
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
	Receiver's instance variables: 
		oldClass: 	WAVersosAleatorios
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


ShiftClassInstaller class>>make:
	Receiver: ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#builder->ShiftClassInstaller>>#builder #comment...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ShiftAnonymousClassInstaller}
		name: 	#ShiftClassInstaller
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Shift-ClassInstaller-Base'


WAMuestraDePoemas class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
	Receiver: WAMuestraDePoemas
	Arguments and temporary variables: 
		t: 	#WAVersosAleatorios
		f: 	'owner'
		d: 	''
		s: 	''
		cat: 	'Poemas-Gui'
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAMuestraDePoemas>>#agregarVerso...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAMuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAMuestraDePoemas class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
	Receiver: WAMuestraDePoemas
	Arguments and temporary variables: 
		aSubclassSymbol: 	#WAVersosAleatorios
		instVarNames: 	'owner'
		classVarNames: 	''
		aPackageSymbol: 	'Poemas-Gui'
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAMuestraDePoemas>>#agregarVerso...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAMuestraDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoIt
	^ WAMuestraDePoemas
		subclass: #WAVersosAleatorios
		instanceVariab...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'WAMuestraDePoemas subclass: #WAVersosAleatorios
	instanceVariableName...etc...
		aController: 	a RubScrolledTextMorph(518687232)
		aClass: 	WAVersosAleatorios
		oldClass: 	WAVersosAleatorios
		class: 	nil
		newClassName: 	'WAVersosAleatorios'
		defTokens: 	an OrderedCollection('WAMuestraDePoemas' 'subclass:' '#WAVersosAleat...etc...
		keywdIx: 	2
		classCompiler: 	an OpalCompiler
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(1042166528)
	Arguments and temporary variables: 
		aString: 	'WAMuestraDePoemas subclass: #WAVersosAleatorios
	instanceVariableName...etc...
		aController: 	a RubScrolledTextMorph(518687232)
		aClass: 	WAVersosAleatorios
	Receiver's instance variables: 
		bounds: 	(5.0@46.0) corner: (1898.0@862.0)
		owner: 	a SystemWindow(68381440) named: WAVersosAleatorios
		submorphs: 	an Array(a ProportionalSplitterMorph(583383808) a PanelMorph(5395409...etc...
		fullBounds: 	(5@46) corner: (1898@862)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (1066166528) [sticky]  [other:  (announcer -> an An...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		navigationPanel: 	a PanelMorphTHERE_BE_DRAGONS_HERE
DuplicatedSlotName: Slot #'model' appeared twice in WAPoemasAleatorios
27 March 2020 10:41:34.805306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new
			oldSlot: current;
			newSlot: other;
			host: host;
			signal ] ] in FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#decoration => InstanceVariableSlot #model => Insta...etc...
		other: 	#model => InstanceVariableSlot
		current: 	#model => InstanceVariableSlot
	Receiver's instance variables: 
		host: 	WAPoemasAleatorios
		compactClassIndex: 	0
		slotScope: 	a LayoutClassScope(#decoration => InstanceVariableSlot #model => Ins...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(#decoration => InstanceVariableSlot #model => InstanceVariableSlot)
	Arguments and temporary variables: 
		aBlock: 	[ :other | 
other name = current name
	ifTrue: [ DuplicatedSlotName new...etc...
		index: 	2
	Receiver's instance variables: 
		array: 	{#decoration => InstanceVariableSlot. #model => InstanceVariableSlot. ni...etc...
		firstIndex: 	1
		lastIndex: 	2


FixedLayout(PointerLayout)>>checkSlotNames
	Receiver: a FixedLayout
	Arguments and temporary variables: 
		slots: 	an OrderedCollection(#decoration => InstanceVariableSlot #model => Insta...etc...
		current: 	#model => InstanceVariableSlot
	Receiver's instance variables: 
		host: 	WAPoemasAleatorios
		compactClassIndex: 	0
		slotScope: 	a LayoutClassScope(#decoration => InstanceVariableSlot #model => Ins...etc...


FixedLayout(PointerLayout)>>checkSanity
	Receiver: a FixedLayout
	Arguments and temporary variables: 

	Receiver's instance variables: 
		host: 	WAPoemasAleatorios
		compactClassIndex: 	0
		slotScope: 	a LayoutClassScope(#decoration => InstanceVariableSlot #model => Ins...etc...


WAPoemasAleatorios class(ClassDescription)>>superclass:withLayoutType:slots:
	Receiver: WAPoemasAleatorios
	Arguments and temporary variables: 
		aSuperclass: 	WAConstruccionDePoemas
		layoutType: 	FixedLayout
		slotArray: 	{#model => InstanceVariableSlot}
		superLayout: 	a FixedLayout
		newScope: 	a LayoutClassScope(#decoration => InstanceVariableSlot #model => Inst...etc...
		newLayout: 	a FixedLayout
	Receiver's instance variables: 
		superclass: 	nil
		methodDict: 	nil
		format: 	nil
		layout: 	nil
		organization: 	nil
		subclasses: 	nil
		name: 	#WAPoemasAleatorios
		classPool: 	nil
		sharedPools: 	nil
		environment: 	nil
		category: 	nil


ShDefaultBuilderEnhancer>>configureClass:superclass:withLayoutType:slots:
	Receiver: a ShDefaultBuilderEnhancer
	Arguments and temporary variables: 
		newClass: 	WAPoemasAleatorios
		superclass: 	WAConstruccionDePoemas
		layoutType: 	FixedLayout
		slots: 	{#model => InstanceVariableSlot}
	Receiver's instance variables: 
a ShDefaultBuilderEnhancer

ShiftClassBuilder>>createClass
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#WAPoemasAleatorios
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	WAConstruccionDePoemas
		category: 	'Poemas-Gui'
		newMetaclass: 	WAPoemasAleatorios class
		newClass: 	WAPoemasAleatorios
		oldClass: 	nil
		oldMetaclass: 	nil
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set()
		metaSuperclass: 	nil


ShiftClassBuilder>>build
	Receiver: a ShiftClassBuilder
	Arguments and temporary variables: 

	Receiver's instance variables: 
		buildEnvironment: 	a ShSmalltalkGlobalsEnvironment
		superclassName: 	#Object
		name: 	#WAPoemasAleatorios
		layoutDefinition: 	a ShLayoutDefinition
		comment: 	nil
		commentStamp: 	nil
		superclass: 	WAConstruccionDePoemas
		category: 	'Poemas-Gui'
		newMetaclass: 	WAPoemasAleatorios class
		newClass: 	WAPoemasAleatorios
		oldClass: 	nil
		oldMetaclass: 	nil
		builderEnhancer: 	a ShDefaultBuilderEnhancer
		metaclassClass: 	nil
		extensibleProperties: 	a Dictionary()
		changeComparers: 	an OrderedCollection(ShSharedPoolChangeDetector ShSharedVariab...etc...
		changes: 	a Set()
		metaSuperclass: 	nil


[ builder oldClass: oldClass.
newClass := builder build.
self validateReadOnlyInstancesOf: oldClass.
self installInEnvironment: newClass.
self installSubclassInSuperclass: newClass.
builder builderEnhancer beforeMigratingClass: builder installer: self.
self migrateClassTo: newClass.
builder builderEnhancer afterMigratingClass: builder installer: self.
builder builderEnhancer
	propagateChangesToRelatedClasses: newClass
	installer: self ] in ShiftClassInstaller>>make:
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
		newClass: 	nil
	Receiver's instance variables: 
		oldClass: 	nil
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


BlockClosure>>on:do:
	Receiver: [ builder oldClass: oldClass.
newClass := builder build.
self validateReadOnlyInstancesOf:...etc...
	Arguments and temporary variables: 
		exception: 	ShNoChangesInClass
		handlerAction: 	[ "If there are no changes in the building, I am not building or...etc...
	Receiver's instance variables: 
		outerContext: 	ShiftClassInstaller>>make:
		startpc: 	104
		numArgs: 	0


ShiftClassInstaller>>make:
	Receiver: a ShiftClassInstaller
	Arguments and temporary variables: 
		newClass: 	nil
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
	Receiver's instance variables: 
		oldClass: 	nil
		builder: 	a ShiftClassBuilder
		installingEnvironment: 	nil


ShiftClassInstaller class>>make:
	Receiver: ShiftClassInstaller
	Arguments and temporary variables: 
		aBlock: 	[ :builder | 
builder
	superclass: self;
	name: t;
	layoutClass: self c...etc...
	Receiver's instance variables: 
		superclass: 	Object
		methodDict: 	a MethodDictionary(#builder->ShiftClassInstaller>>#builder #comment...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{ShiftAnonymousClassInstaller}
		name: 	#ShiftClassInstaller
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Shift-ClassInstaller-Base'


WAConstruccionDePoemas class(Class)>>subclass:instanceVariableNames:classVariableNames:poolDictionaries:package:
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 
		t: 	#WAPoemasAleatorios
		f: 	'model'
		d: 	''
		s: 	''
		cat: 	'Poemas-Gui'
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAConstruccionDePoemas class(Class)>>subclass:instanceVariableNames:classVariableNames:package:
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 
		aSubclassSymbol: 	#WAPoemasAleatorios
		instVarNames: 	'model'
		classVarNames: 	''
		aPackageSymbol: 	'Poemas-Gui'
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


UndefinedObject>>DoIt
	Receiver: nil
	Arguments and temporary variables: 

	Receiver's instance variables: 
nil

OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoIt
	^ WAConstruccionDePoemas
		subclass: #WAPoemasAleatorios
		instanceV...etc...
		source: 	a ReadStream
		context: 	nil
		receiver: 	nil
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


ClySystemEnvironment>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClySystemEnvironment(current image)
	Arguments and temporary variables: 
		aString: 	'WAConstruccionDePoemas subclass: #WAPoemasAleatorios
	instanceVariabl...etc...
		aController: 	a RubScrolledTextMorph(669458688)
		aClass: 	WAConstruccionDePoemas
		oldClass: 	WAConstruccionDePoemas
		class: 	nil
		newClassName: 	'WAPoemasAleatorios'
		defTokens: 	an OrderedCollection('WAConstruccionDePoemas' 'subclass:' '#WAPoemas...etc...
		keywdIx: 	2
		classCompiler: 	an OpalCompiler
	Receiver's instance variables: 
		name: 	'current image'
		globals: 	a SystemDictionary(lots of globals)
		changesAnnouncer: 	a SystemAnnouncer
		packageOrganizer: 	a RPackageOrganizer
		projectManager: 	a ClyProjectManagerRegistry


ClyFullBrowser>>compileANewClassFrom:notifying:startingFrom:
	Receiver: a ClyFullBrowser(1042166528)
	Arguments and temporary variables: 
		aString: 	'WAConstruccionDePoemas subclass: #WAPoemasAleatorios
	instanceVariabl...etc...
		aController: 	a RubScrolledTextMorph(669458688)
		aClass: 	WAConstruccionDePoemas
	Receiver's instance variables: 
		bounds: 	(5.0@46.0) corner: (1898.0@862.0)
		owner: 	a SystemWindow(68381440) named: WAConstruccionDePoemas>>renderContentOn:...etc...
		submorphs: 	an Array(a ProportionalSplitterMorph(583383808) a PanelMorph(5395409...etc...
		fullBounds: 	(5@46) corner: (1898@862)
		color: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000000001...etc...
		extension: 	a MorphExtension (1066166528) [sticky]  [other:  (announcer -> an An...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.8230000000000001 g: 0.8230000000000001 b: 0.8230000000...etc...
		navigationPanel: 	a PanelMorph(539540992)
		navigationViews: 	an OrderedCollection(a ClyQueryViewMorph(314417920) a ClyQuery...etc...
		toolPanel: 	a PanelMorph(403292672)
		toolbar: 	a ClyToolbarMorph(1062010624)
		tabManager: 	a ClyTabManager
		navigationHistory: 	a ClyNavigationHistory
		navigationStarted: 	false
		plugins: 	a SortedCollection(a ClyStandardBrowserPlugin a ClyMonticelloBrowserPl...etc...
		navigationEnvironment: 	a ClyNavigationEnvironment
		systemScope: 	a ClySystemEnvironmentScope(current image)
		packageView: 	a ClyQueryViewMorph(314417920)
		classView: 	a ClyQueryViewMorph(705356544)
		methodGroupView: 	a ClyQueryViewMorph(401245696)
		methodView: 	a ClyQueryViewMorph(325861888)
		metaLevelScope: 	ClyInstanceSideScope
		methodGroupQuery: 	a ClyAllMethodGroupsQuery from inst. side: WAConstruccionDePo...etc...


ClyClassDefinitionEditorToolMorph>>applyChanges
	Receiver: a ClyClassDefinitionEditorToolMorph(1015865600)
	Arguments and temporary variables: 
		newClass: 	nil
	Receiver's instance variables: 
		bounds: 	(7.0@480.0) corner: (1897.0@861.0)
		owner: 	a Morph(1018930688)
		submorphs: 	an Array(a ProportionalSplitterMorph(727466496) a ClyQueryViewMorph(...etc...
		fullBounds: 	(7@480) corner: (1897@861)
		color: 	Color transparent
		extension: 	a MorphExtension (267098624) [other:  (kmDispatcher -> a CmdKMDispat...etc...
		borderWidth: 	0
		borderColor: 	Color black
		browser: 	a ClyFullBrowser(1042166528)
		context: 	a ClyClassContextOfFullBrowser
		decorators: 	an OrderedCollection(a ClyCriticDecorator)
		containerTab: 	a TabMorph(887900416)
		isDirty: 	true
		isManagedByUser: 	false
		statusBar: 	a ClyStatusBarMorph(80572928)
		textModel: 	a RubScrolledTextModel
		textMorph: 	a RubScrolledTextMorph(669458688)
		changesCancelRequested: 	false
		applyingChanges: 	true
		editingClass: 	WAConstruccionDePoemas


[ self changesAreAboutApply.
applied := self applyChanges ] in [ textMorph hasUnacceptedEdits: true.
[ self changesAreAboutApply.
applied := self applyChanges ]
	on: Error
	do: [ :err | 
		textModel text: self editingText.
		textMorph hasUnacceptedEdits: true.
		err pass ].
applied
	ifTrue: [ textMorph hasUnacceptedEdits: false.
		self textUpdated.
		browser focusActiveTab ]
	ifFalse: [ textModel text: self editingText.
		textMorph hasUnacceptedEdits: true ] ] in ClyClassDefinitionEditorToolMorph(ClyTextEditorToolMorph)>>changesAccepted
	Receiver: a ClyClassDefinitionEditorToolMorph(1015865600)
	Arguments and temporary variables: 
		applied: 	nil
	Receiver's instance variables: 
		bounds: 	(7.0@480.0) corner: (1897.0@861.0)
		owner: 	a Morph(1018930688)
		submorphs: 	an Array(a ProportionalSTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAVersosAleatorios>>renderImagenes:withRenderer:
29 March 2020 5:37:04.517306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

ImagTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
29 March 2020 5:37:23.811306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios(Object)>>doesNotUnderstand: #renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aMessage: 	renderPoemaConstruido:  withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAVersosAleatorios>>renderPoemaConstruido:with...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>acceptDecorated:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAVersosAleatorios(Object)>>doesNotUnderstand: #renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAVersosAleatorios>>renderMuestra:withRenderer:
29 March 2020 5:38:29.901306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios(Object)>>doesNotUnderstand: #renderMuestra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aMessage: 	renderMuestra: a MuestraDePoemas withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAVersosAleatorios>>renderMuestra:withRenderer...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>acceptDecorated:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAVersosAleatorios(Object)>>doesNotUnderstand: #renderMuestra:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered:THERE_BE_DRAGONS_HERE
MessageNotUnderstood: ConstruccionDePoemas>>agregarVersoAleatorio
29 March 2020 5:39:44.434306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ConstruccionDePoemas(Object)>>doesNotUnderstand: #agregarVersoAleatorio
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	agregarVersoAleatorio
		exception: 	MessageNotUnderstood: ConstruccionDePoemas>>agregarVersoAleatorio
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


WAVersosAleatorios>>initialize
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	a ConstruccionDePoemas


WAVersosAleatorios class(GRObject class)>>new
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#initialize->WAVersosAleatorios>>#initialize #re...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugActTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: MuestraDePoemas>>versoAleatorio
29 March 2020 5:40:27.800306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas(Object)>>doesNotUnderstand: #versoAleatorio
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		aMessage: 	versoAleatorio
		exception: 	MessageNotUnderstood: MuestraDePoemas>>versoAleatorio
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


ConstruccionDePoemas>>agregarVersoAleatorio
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


WAVersosAleatorios>>initialize
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	a ConstruccionDePoemas


WAVersosAleatorios class(GRObject class)>>new
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#initialize->WAVersosAleatorios>>#initialize #re...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poemas>>versos
29 March 2020 5:41:22.001306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poemas(Object)>>doesNotUnderstand: #versos
	Receiver: a Poemas
	Arguments and temporary variables: 
		aMessage: 	versos
		exception: 	MessageNotUnderstood: Poemas>>versos
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		muestraDePoemas: 	a MuestraDePoemas


[ :poema | poema versos ] in MuestraDePoemas>>versoAleatorio
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		poema: 	a Poemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ :collection :each | 
collection
	addAll: (aBlockClosure value: each);
	yourself ] in OrderedCollection(SequenceableCollection)>>unionCollect:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		aBlockClosure: 	[ :poema | poema versos ]
		collection: 	an OrderedCollection()
		each: 	a Poemas
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		thisValue: 	an OrderedCollection()
		binaryBlock: 	[ :collection :each | 
collection
	addAll: (aBlockClosure value: e...etc...
		nextValue: 	an OrderedCollection()
		each: 	a Poemas
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


OrderedCollection>>do:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		nextValue: 	an OrderedCollection()
		thisValue: 	an OrderedCollection()
		binaryBlock: 	[ :collection :each | 
collection
	addAll: (aBlockClosure value: e...etc...
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


OrderedCollection(SequenceableCollection)>>unionCollect:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		aBlockClosure: 	[ :poema | poema versos ]
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


MuestraDePoemas>>versoAleatorio
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


ConstruccionDePoemas>>agregarVersoAleatorio
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


WAVersosAleatorios>>initialize
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	a ConstruccionDePoemas


WAVersosAleatorios class(GRObject class)>>new
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#initialize->WAVersosAleatorios>>#initialize #re...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poema>>versos
29 March 2020 5:42:12.669306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poema(Object)>>doesNotUnderstand: #versos
	Receiver: elogio la ausencia
	Arguments and temporary variables: 
		aMessage: 	versos
		exception: 	MessageNotUnderstood: Poema>>versos
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(elogio la ausencia como una verdad inaudita estoy ...etc...
		owner: 	a Poemas
		textoDePoema: 	'elogio la ausencia
como una verdad
inaudita
estoy lista 
es hora...etc...
		autor: 	'Nadia Sol'


[ :poema | poema versos ] in Poemas>>versos
	Receiver: a Poemas
	Arguments and temporary variables: 
		poema: 	elogio la ausencia
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		muestraDePoemas: 	a MuestraDePoemas


[ :collection :each | 
collection
	addAll: (aBlockClosure value: each);
	yourself ] in Array(SequenceableCollection)>>unionCollect:
	Receiver: an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...
	Arguments and temporary variables: 
		aBlockClosure: 	[ :poema | poema versos ]
		collection: 	an OrderedCollection()
		each: 	elogio la ausencia
	Receiver's instance variables: 
an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...

[ :each | nextValue := binaryBlock value: nextValue value: each ] in Array(Collection)>>inject:into:
	Receiver: an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...
	Arguments and temporary variables: 
		thisValue: 	an OrderedCollection()
		binaryBlock: 	[ :collection :each | 
collection
	addAll: (aBlockClosure value: e...etc...
		nextValue: 	an OrderedCollection()
		each: 	elogio la ausencia
	Receiver's instance variables: 
an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...

Array(SequenceableCollection)>>do:
	Receiver: an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	1
	Receiver's instance variables: 
an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...

Array(Collection)>>inject:into:
	Receiver: an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...
	Arguments and temporary variables: 
		nextValue: 	an OrderedCollection()
		thisValue: 	an OrderedCollection()
		binaryBlock: 	[ :collection :each | 
collection
	addAll: (aBlockClosure value: e...etc...
	Receiver's instance variables: 
an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...

Array(SequenceableCollection)>>unionCollect:
	Receiver: an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...
	Arguments and temporary variables: 
		aBlockClosure: 	[ :poema | poema versos ]
	Receiver's instance variables: 
an Array(elogio la ausencia tomo un café seremos frágiles es posible que el tiempo para cu...etc...

Poemas>>versos
	Receiver: a Poemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		muestraDePoemas: 	a MuestraDePoemas


[ :poema | poema versos ] in MuestraDePoemas>>versoAleatorio
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		poema: 	a Poemas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


[ :collection :each | 
collection
	addAll: (aBlockClosure value: each);
	yourself ] in OrderedCollection(SequenceableCollection)>>unionCollect:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		aBlockClosure: 	[ :poema | poema versos ]
		collection: 	an OrderedCollection()
		each: 	a Poemas
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		thisValue: 	an OrderedCollection()
		binaryBlock: 	[ :collection :each | 
collection
	addAll: (aBlockClosure value: e...etc...
		nextValue: 	an OrderedCollection()
		each: 	a Poemas
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


OrderedCollection>>do:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		nextValue: 	an OrderedCollection()
		thisValue: 	an OrderedCollection()
		binaryBlock: 	[ :collection :each | 
collection
	addAll: (aBlockClosure value: e...etc...
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


OrderedCollection(SequenceableCollection)>>unionCollect:
	Receiver: an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)
	Arguments and temporary variables: 
		aBlockClosure: 	[ :poema | poema versos ]
	Receiver's instance variables: 
		array: 	an Array(a Poemas a Poemas a Poemas a Poemas nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	4


MuestraDePoemas>>versoAleatorio
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


ConstruccionDePoemas>>agregarVersoAleatorio
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	
		imagenes: 	an Imagenes


WAVersosAleatorios>>initialize
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	a ConstruccionDePoemas


WAVersosAleatorios class(GRObject class)>>new
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#initialize->WAVersosAleatorios>>#initialize #re...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "acceptDecorated:" is nil
29 March 2020 5:42:19.714306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #acceptDecorated:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	acceptDecorated: a WAVisiblePresenterGuide
		exception: 	MessageNotUnderstood: receiver of "acceptDecorated:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	nil
	Receiver's instance variables: 
		client: 	a WATaskVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		client: 	a WATaskVisitor


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>startTasks
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2()
		documentHandlers: 	nil
		key: 	'20KbSEw8fyFa36bZ'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2()
		documentHandlers: 	nil
		key: 	'20KbSEw8fyFa36bZ'


WAMergedRequestFields>>at:ifAbsent:
	Receiver: a WAMergedRequestFields
	Arguments and temporary variables: 
		aKey: 	'_k'
		aBlock: 	[ ^ self start ]
	Receiver's instance variables: 
		delegates: 	an Array(a WARequestFields('_debugAction'->'_debug') a WARequestFiel...etc...


WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	a GRSmallDictionary2()
		documentHandlers: 	nil
		key: 	'20KbSEw8fyFa36bZ'


WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
	Receiver: a WAMutualExclusionFilter
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WASession
		mutex: 	a WAMutex


BlockClosure>>ensure:
	Receiver: [ super handleFiltered: aRequestContext ]
	Arguments and temporary variables: 
		aBlock: 	THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAVersosAleatorios>>renderName:in:
29 March 2020 5:45:17.337306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios(Object)>>doesNotUnderstand: #renderName:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aMessage: 	renderName: 'seré verde' in: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAVersosAleatorios>>renderName:in:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seré verde)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	seré verde
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	seré verde
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAVersosAleatorios(Object)>>doesNotUnderstand: #renderName:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAVersosAleatorios>>renderVersos:in:
29 March 2020 5:45:43.449306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios(Object)>>doesNotUnderstand: #renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aMessage: 	renderVersos: an OrderedCollection(seré verde) in: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAVersosAleatorios>>renderVersos:in:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seré verde)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	seré verde
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	seré verde
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAVersosAleatorios(Object)>>doesNotUnderstand: #renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WARegistry)>>handle:registering:
WAApplication>>handleDefault:
WAApplication(WARegistry)>>handleFiltered:
WAApplication>>handleFiltered:
WAExceptionFilter(WARequestFilter)>>handleFiltered:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Verso>>renderOn:withRenderer:
29 March 2020 5:46:40.173306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #renderOn:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		aMessage: 	renderOn: a WAVersosAleatorios withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: Verso>>renderOn:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seré verde'
		palabras: 	an OrderedCollection( seré verde)
		poema: 	todo lo que tengo lo sirvo


[ :verso | verso renderOn: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
		verso: 	seré verde
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seré verde)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seré verde)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seré verde)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	seré verde
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	seré verde
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
Verso(Object)>>doesNotUnderstand: #renderOn:withRenderer:
[ :verso | verso renderOn: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WASession(WARequestHandler)>>handle:
WAApplication(WARegistry)>>dispatch:to:key:
WAApplication(WATHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAVersosAleatorios>>renderPalabra:withRenderer:
29 March 2020 5:46:54.499306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios(Object)>>doesNotUnderstand: #renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aMessage: 	renderPalabra:  withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAVersosAleatorios>>renderPalabra:withRenderer...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in [ palabras
	do: [ :palabra | aComponent renderPalabra: palabra withRenderer: html ]
	separatedBy: [ html space ] ] in Verso>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
		palabra: 	
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seré verde'
		palabras: 	an OrderedCollection( seré verde)
		poema: 	todo lo que tengo lo sirvo


OrderedCollection(SequenceableCollection)>>do:separatedBy:
	Receiver: an OrderedCollection( seré verde)
	Arguments and temporary variables: 
		elementBlock: 	[ :palabra | aComponent renderPalabra: palabra withRenderer: html...etc...
		separatorBlock: 	[ html space ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array( seré verde nil nil nil nil nil nil nil)
		firstIndex: 	1
		lastIndex: 	3


[ palabras
	do: [ :palabra | aComponent renderPalabra: palabra withRenderer: html ]
	separatedBy: [ html space ] ] in Verso>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seré verde'
		palabras: 	an OrderedCollection( seré verde)
		poema: 	todo lo que tengo lo sirvo


BlockClosure>>renderOn:
	Receiver: [ palabras
	do: [ :palabra | aComponent renderPalabra: palabra withRenderer: html ]
	separ...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	Verso>>renderOnComponent:withRenderer:
		startpc: 	86
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ palabras
	do: [ :palabra | aComponent renderPalabra: palabra withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ palabras
	do: [ :palabra | aComponent renderPalabra: palabra withRe...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ palabras
	do: [ :palabra | aComponent renderPalabra: palabra withRe...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ palabras
	do: [ :palabra | aComponent renderPalabra: palabra withRe...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'p'


Verso>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seré verde'
		palabras: 	an OrderedCollection( seré verde)
		poema: 	todo lo que tengo lo sirvo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
		verso: 	seré verde
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seré verde)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seré verde)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seré verde)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	seré verde
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	seré verde
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAVersosAleatorios(Object)>>doesNotUnderstand: #renderPalabra:withRenderer:
[ :palabra | aComponent renderPalabra: palabra withRenderer: html ] in [ palabras
	do: [ :palabra | aComponent renderPalabra: palabra withRenderer: html ]
	separatedBy: [ html space ] ] in Verso>>renderOnComponent:withRenderer:
OrderedCollection(SequenceableCollection)>>do:separatedBy:
[ palabras
	do: [ :palabra | aComponent renderPalabra: palabra withRenderer: html ]
	separatedBy: [ html space ] ] in Verso>>renderOnComponent:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>rendeTHERE_BE_DRAGONS_HERE
Break
29 March 2020 5:47:29.541306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	seré verde
		html: 	a WAHtmlCanvas
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seré verde'
		palabras: 	an OrderedCollection( seré verde)
		poema: 	todo lo que tengo lo sirvo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
		verso: 	seré verde
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seré verde)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seré verde)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seré verde)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	seré verde
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	seré verde
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAGenericTag>>position:
29 March 2020 5:48:53.025306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAGenericTag(Object)>>doesNotUnderstand: #position:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aMessage: 	position: (120@580)
		exception: 	MessageNotUnderstood: WAGenericTag>>position:
		resumeValue: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id2')
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	seré verde
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seré verde'
		palabras: 	an OrderedCollection( seré verde)
		poema: 	todo lo que tengo lo sirvo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
		verso: 	seré verde
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seré verde)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seré verde)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seré verde)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	seré verde
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	seré verde
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAGenericTag(Object)>>doesNotUnderstand: #position:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
THERE_BE_DRAGONS_HERE
WAError: only integers should be used as indices
29 March 2020 5:49:18.188306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAGenericTag class(GRObject class)>>error:
	Receiver: WAGenericTag
	Arguments and temporary variables: 
		aString: 	'only integers should be used as indices'
	Receiver's instance variables: 
		superclass: 	WATagBrush
		methodDict: 	a MethodDictionary(#initializeWithTag:->WAGenericTag>>#initializeWi...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{WAEditTag}
		name: 	#WAGenericTag
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Canvas-Base'


WAGenericTag(GRObject)>>error:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aString: 	'only integers should be used as indices'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id3')
		tag: 	'p'


WAGenericTag(Object)>>errorNonIntegerIndex
	Receiver: a WAGenericTag
	Arguments and temporary variables: 

	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id3')
		tag: 	'p'


WAGenericTag(Object)>>at:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		index: 	(120@580)
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id3')
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	seré verde
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'seré verde'
		palabras: 	an OrderedCollection( seré verde)
		poema: 	todo lo que tengo lo sirvo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
		verso: 	seré verde
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(seré verde)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(seré verde)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(seré verde)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: seré verde
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(seré verde)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	seré verde
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	seré verde
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAGenericTag class(GRObject class)>>error:
WAGenericTag(GRObject)>>error:
WAGenericTag(Object)>>errorNonIntegerIndex
WAGenericTag(Object)>>at:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>THERE_BE_DRAGONS_HERE
Instance of WAGenericTag did not understand #position
29 March 2020 5:49:37.163306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAGenericTag(Object)>>doesNotUnderstand: #position
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aMessage: 	position
		exception: 	MessageNotUnderstood: WAGenericTag>>position
		resumeValue: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAVersosAleatorios>>DoItIn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		ThisContext: 	WAVersosAleatorios>>renderVerso:on:
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 2) paragraph position
		source: 	a ReadStream
		context: 	WAVersosAleatorios>>renderVerso:on:
		receiver: 	a WAVersosAleatorios
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAVersosAleatorios
		ctxt: 	WAVersosAleatorios>>renderVerso:on:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(268970496)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(268970496)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(242950400)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(268970496)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@183)
		owner: 	a TransformWithLayoutMorph(136198400)
		submorphs: 	an Array(a RubCursor(145414400) a RubPrimarySelectionMorph(78758400)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (250712320) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(944833024)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(145414400)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(361196032))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(242950400)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(714721792))(a DropList...etc...
		lastStepTime: 	157931317
		lastStepMessage: 	nil
		lastCycleTime: 	157931348
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(145414400)))
		lastAlarmTime: 	157931317
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(714721792))(a DropList...etc...
		lastStepTime: 	157931317
		lastStepMessage: 	nil
		lastCycleTime: 	157931348
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(145414400)))
		lastAlarmTime: 	157931317
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1903@896)
		canvas: 	a FormCanvas on: DisplayScreen(1903x896x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(714721792))(a DropList...etc...
		lastStepTime: 	157931317
		lastStepMessage: 	nil
		lastCycleTime: 	157931348
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(145414400)))
		lastAlarmTime: 	157931317
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1903@896)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1903@896)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWoTHERE_BE_DRAGONS_HERE
WAError: only integers should be used as indices
29 March 2020 5:52:04.043306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAGenericTag class(GRObject class)>>error:
	Receiver: WAGenericTag
	Arguments and temporary variables: 
		aString: 	'only integers should be used as indices'
	Receiver's instance variables: 
		superclass: 	WATagBrush
		methodDict: 	a MethodDictionary(#initializeWithTag:->WAGenericTag>>#initializeWi...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{WAEditTag}
		name: 	#WAGenericTag
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Canvas-Base'


WAGenericTag(GRObject)>>error:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aString: 	'only integers should be used as indices'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(Object)>>errorNonIntegerIndex
	Receiver: a WAGenericTag
	Arguments and temporary variables: 

	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAGenericTag(Object)>>at:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		index: 	#position
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAVersosAleatorios>>DoItIn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		ThisContext: 	WAVersosAleatorios>>renderVerso:on:
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 2) paragraph at: #positio...etc...
		source: 	a ReadStream
		context: 	WAVersosAleatorios>>renderVerso:on:
		receiver: 	a WAVersosAleatorios
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAVersosAleatorios
		ctxt: 	WAVersosAleatorios>>renderVerso:on:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(268970496)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(268970496)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(242950400)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(268970496)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1249@183)
		owner: 	a TransformWithLayoutMorph(136198400)
		submorphs: 	an Array(a RubCursor(145414400) a RubPrimarySelectionMorph(78758400)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (250712320) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(944833024)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(145414400)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(78041344))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(242950400)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1920@1017)
		canvas: 	a FormCanvas on: DisplayScreen(1920x1017x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(604252672))(a DropList...etc...
		lastStepTime: 	158078201
		lastStepMessage: 	nil
		lastCycleTime: 	158078244
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(145414400)))
		lastAlarmTime: 	158078201
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1920@1017)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1920@1017)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1920@1017)
		canvas: 	a FormCanvas on: DisplayScreen(1920x1017x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(604252672))(a DropList...etc...
		lastStepTime: 	158078201
		lastStepMessage: 	nil
		lastCycleTime: 	158078244
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(145414400)))
		lastAlarmTime: 	158078201
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1920@1017)
		canvas: 	a FormCanvas on: DisplayScreen(1920x1017x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(604252672))(a DropList...etc...
		lastStepTime: 	158078201
		lastStepMessage: 	nil
		lastCycleTime: 	158078244
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(145414400)))
		lastAlarmTime: 	158078201
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1920@1017)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1920@1017)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
WAGenericTag class(GRObject class)>>error:
WAGenericTag(GRObject)>>error:
WAGenericTag(Object)>>errorNonIntegerIndex
WAGenericTag(Object)>>at:
WAVersosAleatorios>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
WAError: only integers should be used as indices
29 March 2020 5:56:52.980306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAGenericTag class(GRObject class)>>error:
	Receiver: WAGenericTag
	Arguments and temporary variables: 
		aString: 	'only integers should be used as indices'
	Receiver's instance variables: 
		superclass: 	WATagBrush
		methodDict: 	a MethodDictionary(#initializeWithTag:->WAGenericTag>>#initializeWi...etc...
		format: 	65541
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{WAEditTag}
		name: 	#WAGenericTag
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Canvas-Base'


WAGenericTag(GRObject)>>error:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aString: 	'only integers should be used as indices'
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'p'


WAGenericTag(Object)>>errorNonIntegerIndex
	Receiver: a WAGenericTag
	Arguments and temporary variables: 

	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'p'


WAGenericTag(Object)>>at:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		index: 	(120@580)
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1')
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	sobre las redes de la noche 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: sobre las redes de la noche 
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'sobre las redes de la noche '
		palabras: 	an OrderedCollection( sobre las redes de la noche)
		poema: 	no voy a nombrarte por miedo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(sobre las redes de la noche )
		html: 	a WAHtmlCanvas
		verso: 	sobre las redes de la noche 
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(sobre las redes de la noche )
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(sobre las redes de la noche )
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(sobre las redes de la noche )
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: sobre las redes de la noche 
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(sobre las redes de la noche )
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	sobre las redes de la noche 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	sobre las redes de la noche 
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAGenericTag class(GRObject class)>>error:
WAGenericTag(GRObject)>>error:
WAGenericTag(Object)>>errorNonIntegerIndex
WAGenericTag(Object)>>at:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)THERE_BE_DRAGONS_HERE
Instance of WAGenericTag did not understand #style
29 March 2020 5:58:48.201306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAGenericTag(Object)>>doesNotUnderstand: #style
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aMessage: 	style
		exception: 	MessageNotUnderstood: WAGenericTag>>style
		resumeValue: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	nil
		tag: 	'p'


WAVersosAleatorios>>DoItIn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		ThisContext: 	WAVersosAleatorios>>renderVerso:on:
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 2) paragraph style
		source: 	a ReadStream
		context: 	WAVersosAleatorios>>renderVerso:on:
		receiver: 	a WAVersosAleatorios
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAVersosAleatorios
		ctxt: 	WAVersosAleatorios>>renderVerso:on:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(149199104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(149199104)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(368245248)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(149199104)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1260@164)
		owner: 	a TransformWithLayoutMorph(404333056)
		submorphs: 	an Array(a RubCursor(932205056) a RubPrimarySelectionMorph(699906560...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (893549056) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(989561088)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(932205056)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(527984896))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(368245248)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1920@1017)
		canvas: 	a FormCanvas on: DisplayScreen(1920x1017x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(441864704))(a DropList...etc...
		lastStepTime: 	158482335
		lastStepMessage: 	nil
		lastCycleTime: 	158482397
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(932205056)))
		lastAlarmTime: 	158482335
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1920@1017)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1920@1017)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1920@1017)
		canvas: 	a FormCanvas on: DisplayScreen(1920x1017x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(441864704))(a DropList...etc...
		lastStepTime: 	158482335
		lastStepMessage: 	nil
		lastCycleTime: 	158482397
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(932205056)))
		lastAlarmTime: 	158482335
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1920@1017)
		canvas: 	a FormCanvas on: DisplayScreen(1920x1017x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(441864704))(a DropList...etc...
		lastStepTime: 	158482335
		lastStepMessage: 	nil
		lastCycleTime: 	158482397
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(932205056)))
		lastAlarmTime: 	158482335
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1920@1017)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1920@1017)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
WAGenericTag(Object)>>doesNotUnderstand: #style
WAVersosAleatorios>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAGenericTag>>propertyAt:put:
29 March 2020 6:00:31.528306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAGenericTag(Object)>>doesNotUnderstand: #propertyAt:put:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aMessage: 	propertyAt: #position put: (120@540)
		exception: 	MessageNotUnderstood: WAGenericTag>>propertyAt:put:
		resumeValue: 	nil
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id2')
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	sobre las redes de la noche 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: sobre las redes de la noche 
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'sobre las redes de la noche '
		palabras: 	an OrderedCollection( sobre las redes de la noche)
		poema: 	no voy a nombrarte por miedo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(sobre las redes de la noche )
		html: 	a WAHtmlCanvas
		verso: 	sobre las redes de la noche 
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(sobre las redes de la noche )
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(sobre las redes de la noche )
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(sobre las redes de la noche )
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: sobre las redes de la noche 
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(sobre las redes de la noche )
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	sobre las redes de la noche 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	sobre las redes de la noche 
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAGenericTag(Object)>>doesNotUnderstand: #propertyAt:put:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
[ ^ self start ] in WASession>>handleFiltered:
WAMergedRequestFields>>at:ifAbsent:
WASession>>handleFiltered:
WAMutualExclusionFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WAMutualExclusionFilter>>handleFiltered:
BlockClosure>>ensure:
[ self owner: process.
aBlock
	ensure: [ self owner: nil ] ] in WAMutex>>critical:
[ caught := true.
self wait.
blockValue := mutuallyExcludedBlock value ] in Semaphore>>critical:
BlockClosure>>ensure:
Semaphore>>critical:
WAMutex>>critical:
WAMutualExclusionFilter>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WASession(WARequestHanTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Verso>>palabras
29 March 2020 6:00:57.165306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #palabras
	Receiver: sobre las redes de la noche 
	Arguments and temporary variables: 
		aMessage: 	palabras
		exception: 	MessageNotUnderstood: Verso>>palabras
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'sobre las redes de la noche '
		palabras: 	an OrderedCollection( sobre las redes de la noche)
		poema: 	no voy a nombrarte por miedo


[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	sobre las redes de la noche 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRenderer: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderVerso:on:
		startpc: 	105
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRende...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRende...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRende...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id3' #position->(120@540))
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id3' #position->(120@540))
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRende...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id3' #position->(120@540))
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	sobre las redes de la noche 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: sobre las redes de la noche 
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'sobre las redes de la noche '
		palabras: 	an OrderedCollection( sobre las redes de la noche)
		poema: 	no voy a nombrarte por miedo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(sobre las redes de la noche )
		html: 	a WAHtmlCanvas
		verso: 	sobre las redes de la noche 
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(sobre las redes de la noche )
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(sobre las redes de la noche )
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(sobre las redes de la noche )
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: sobre las redes de la noche 
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(sobre las redes de la noche )
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	sobre las redes de la noche 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	sobre las redes de la noche 
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id3'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor



--- The full stack ---
Verso(Object)>>doesNotUnderstand: #palabras
[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: PalabraVacia>>renderOn:withRenderer:
29 March 2020 6:01:22.069306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PalabraVacia(Object)>>doesNotUnderstand: #renderOn:withRenderer:
	Receiver: 
	Arguments and temporary variables: 
		aMessage: 	renderOn: a WAVersosAleatorios withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: PalabraVacia>>renderOn:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	nil
		palabraAnterior: 	nil
		palabraSiguiente: 	de
		poema: 	nil


[ :palabra | palabra renderOn: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
		palabra: 	
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection( de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :palabra | palabra renderOn: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array( de lado a lado de una hoja nil nil)
		firstIndex: 	1
		lastIndex: 	8


[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRenderer: html ] ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderVerso:on:
		startpc: 	105
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRende...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRende...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRende...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1' #position->(120@540))
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1' #position->(120@540))
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRende...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1' #position->(120@540))
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'de lado a lado de una hoja'
		palabras: 	an OrderedCollection( de lado a lado de una hoja)
		poema: 	no voy a nombrarte por miedo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja)
		html: 	a WAHtmlCanvas
		verso: 	de lado a lado de una hoja
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(de lado a lado de una hoja)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(de lado a lado de una hoja)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	de lado a lado de una hoja
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
PalabraVacia(Object)>>doesNotUnderstand: #renderOn:withRenderer:
[ :palabra | palabra renderOn: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
OrderedCollection>>do:
[ unVerso palabras
	do: [ :palabra | palabra renderOn: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAVersosAleatorios>>renderPalabra:withRenderer:
29 March 2020 6:02:33.015306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios(Object)>>doesNotUnderstand: #renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aMessage: 	renderPalabra: de withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAVersosAleatorios>>renderPalabra:withRenderer...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


PalabraReal>>renderOnComponent:withRenderer:
	Receiver: de
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		aWAHtmlCanvas: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'de'
		palabraAnterior: 	
		palabraSiguiente: 	lado
		poema: 	no voy a nombrarte por miedo
		tipoDePalabra: 	nil


[ :palabra | palabra renderOnComponent: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
		palabra: 	de
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection( de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :palabra | palabra renderOnComponent: self withRenderer: html ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array( de lado a lado de una hoja nil nil)
		firstIndex: 	1
		lastIndex: 	8


[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderVerso:on:
		startpc: 	105
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id2' #position->(120@540))
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id2' #position->(120@540))
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id2' #position->(120@540))
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'de lado a lado de una hoja'
		palabras: 	an OrderedCollection( de lado a lado de una hoja)
		poema: 	no voy a nombrarte por miedo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja)
		html: 	a WAHtmlCanvas
		verso: 	de lado a lado de una hoja
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(de lado a lado de una hoja)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(de lado a lado de una hoja)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	de lado a lado de una hoja
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id2'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas



--- The full stack ---
WAVersosAleatorios(Object)>>doesNotUnderstand: #renderPalabra:withRenderer:
PalabraReal>>renderOnComponent:withRenderer:
[ :palabra | palabra renderOnComponent: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
OrderedCollection>>do:
[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - -THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAVersosAleatorios>>agregarVersoConPalabra:
29 March 2020 6:03:33.825306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios(Object)>>doesNotUnderstand: #agregarVersoConPalabra:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aMessage: 	agregarVersoConPalabra: hoja
		exception: 	MessageNotUnderstood: WAVersosAleatorios>>agregarVersoConPalabra:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


[ self agregarVersoConPalabra: unaPalabraReal ] in WAVersosAleatorios>>renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'9'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'9'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_k=nOwKNcW5MGJNMQxe...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	15


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_k=nOwKNcW5MGJNMQxe...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	15


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_k=nOwKNcW5MGJNMQxe&...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_k=nOwKNcW5MGJNMQxe...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_k=nOwKNcW5MGJNMQxe...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_k=nOwKNcW5MGJNMQxe&_debug...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_k=nOwKNcW5MGJNMQxe&_debug...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_k=nOwKNcW5MGJNMQxe&_debug...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_k=nOwKNcW5MGJNMQxe&_debug...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestConTHERE_BE_DRAGONS_HERE
Break
29 March 2020 6:04:52.493306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PalabraVacia>>renderOnComponent:withRenderer:
	Receiver: 
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		aWAHtmlCanvas: 	a WAHtmlCanvas
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	nil
		palabraAnterior: 	nil
		palabraSiguiente: 	de
		poema: 	nil


[ :palabra | palabra renderOnComponent: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
		palabra: 	
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection( de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :palabra | palabra renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array( de lado a lado de una hoja nil nil)
		firstIndex: 	1
		lastIndex: 	8


[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderVerso:on:
		startpc: 	105
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1' #position->(120@540))
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1' #position->(120@540))
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1' #position->(120@540))
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'de lado a lado de una hoja'
		palabras: 	an OrderedCollection( de lado a lado de una hoja)
		poema: 	no voy a nombrarte por miedo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja de lado a lado de una h...etc...
		html: 	a WAHtmlCanvas
		verso: 	de lado a lado de una hoja
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(de lado a lado de una hoja de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(de lado a lado de una hoja de lado a lado de una hoja)
		firstIndex: 	1
		lastIndex: 	2


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja de lado a lado de una h...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(de lado a lado de una hoja de lado a lado de una h...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	de lado a lado de una hoja
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
PalabraVacia>>renderOnComponent:withRenderer:
[ :palabra | palabra renderOnComponent: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
OrderedCollection>>do:
[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
Break
29 March 2020 6:05:00.014306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PalabraVacia>>renderOnComponent:withRenderer:
	Receiver: 
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		aWAHtmlCanvas: 	a WAHtmlCanvas
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	nil
		palabraAnterior: 	nil
		palabraSiguiente: 	de
		poema: 	nil


[ :palabra | palabra renderOnComponent: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
		palabra: 	
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection( de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :palabra | palabra renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array( de lado a lado de una hoja nil nil)
		firstIndex: 	1
		lastIndex: 	8


[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderVerso:on:
		startpc: 	105
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id9' #position->(120@540))
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id9' #position->(120@540))
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id9' #position->(120@540))
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'de lado a lado de una hoja'
		palabras: 	an OrderedCollection( de lado a lado de una hoja)
		poema: 	no voy a nombrarte por miedo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja de lado a lado de una h...etc...
		html: 	a WAHtmlCanvas
		verso: 	de lado a lado de una hoja
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(de lado a lado de una hoja de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array(de lado a lado de una hoja de lado a lado de una hoja)
		firstIndex: 	1
		lastIndex: 	2


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja de lado a lado de una h...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(de lado a lado de una hoja de lado a lado de una h...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	de lado a lado de una hoja
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id9'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
PalabraVacia>>renderOnComponent:withRenderer:
[ :palabra | palabra renderOnComponent: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
OrderedCollection>>do:
[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:in:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>valueTHERE_BE_DRAGONS_HERE
Break
29 March 2020 6:05:26.374306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PalabraVacia>>renderOnComponent:withRenderer:
	Receiver: 
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		aWAHtmlCanvas: 	a WAHtmlCanvas
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	nil
		palabraAnterior: 	nil
		palabraSiguiente: 	de
		poema: 	nil


[ :palabra | palabra renderOnComponent: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
		palabra: 	
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection( de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :palabra | palabra renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array( de lado a lado de una hoja nil nil)
		firstIndex: 	1
		lastIndex: 	8


[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderVerso:on:
		startpc: 	105
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1' #position->(120@540))
		tag: 	'p'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1' #position->(120@540))
		tag: 	'p'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self ...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->'id1' #position->(120@540))
		tag: 	'p'


WAVersosAleatorios>>renderVerso:on:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'de lado a lado de una hoja'
		palabras: 	an OrderedCollection( de lado a lado de una hoja)
		poema: 	no voy a nombrarte por miedo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja de lado a lado de una h...etc...
		html: 	a WAHtmlCanvas
		verso: 	de lado a lado de una hoja
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(de lado a lado de una hoja de lado a lado de una hoja)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(de lado a lado de una hoja de lado a lado de una hoja)
		firstIndex: 	1
		lastIndex: 	2


WAVersosAleatorios>>renderVersos:in:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(de lado a lado de una hoja de lado a lado de una h...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: de lado a lado de una hoja
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(de lado a lado de una hoja de lado a lado de una h...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	de lado a lado de una hoja
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	de lado a lado de una hoja
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
PalabraVacia>>renderOnComponent:withRenderer:
[ :palabra | palabra renderOnComponent: self withRenderer: html ] in [ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
OrderedCollection>>do:
[ unVerso palabras
	do: [ :palabra | palabra renderOnComponent: self withRenderer: html ] ] in WAVersosAleatorios>>renderVerso:on:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderVerso:on:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer:THERE_BE_DRAGONS_HERE
MessageNotUnderstood: ConstruccionDePoemas>>versosDePoemaConstruido
29 March 2020 7:46:28.401306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ConstruccionDePoemas(Object)>>doesNotUnderstand: #versosDePoemaConstruido
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	versosDePoemaConstruido
		exception: 	MessageNotUnderstood: ConstruccionDePoemas>>versosDePoemaConstruido
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	pero los besos
		imagenes: 	an Imagenes


WAVersosAleatorios>>versosStyles
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>style
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor>>visitPainter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAUpdateRootVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor(WAVisitor)>>visit:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide>>visitDecoration:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>acceptDecorated:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/versosAleatorios?_s=H6QHhV7NjQ7MMM6F&_k=ajwhachA1LURHQEK
		actionBaseUrl: 	/versosAleatorios?_s=H6QHhV7NjQ7MMM6F&_k=ajwhachA1LURHQEK
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest methTHERE_BE_DRAGONS_HERE
WAError: Instances of WAVersosAleatorios are not indexable
29 March 2020 7:46:52.336306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios class(GRObject class)>>error:
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 
		aString: 	'Instances of WAVersosAleatorios are not indexable'
	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoConPalabra:->WAVersosAleatorios>>#a...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


WAVersosAleatorios(GRObject)>>error:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aString: 	'Instances of WAVersosAleatorios are not indexable'
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(Object)>>errorNotIndexable
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(Object)>>size
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ByteString(SequenceableCollection)>>copyReplaceFrom:to:with:
	Receiver: ''
	Arguments and temporary variables: 
		start: 	1
		stop: 	0
		replacementCollection: 	a WAVersosAleatorios
		newSequenceableCollection: 	nil
		newSize: 	nil
		endReplacement: 	nil
	Receiver's instance variables: 
''

ByteString(SequenceableCollection)>>,
	Receiver: ''
	Arguments and temporary variables: 
		otherCollection: 	a WAVersosAleatorios
	Receiver's instance variables: 
''

[ :string :verso | string , self styleDeVerso: verso ] in WAVersosAleatorios>>versosStyles
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		string: 	''
		verso: 	pero los besos
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(pero los besos)
	Arguments and temporary variables: 
		thisValue: 	''
		binaryBlock: 	[ :string :verso | string , self styleDeVerso: verso ]
		nextValue: 	''
		each: 	pero los besos
	Receiver's instance variables: 
		array: 	an Array(pero los besos)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection>>do:
	Receiver: an OrderedCollection(pero los besos)
	Arguments and temporary variables: 
		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(pero los besos)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(pero los besos)
	Arguments and temporary variables: 
		nextValue: 	''
		thisValue: 	''
		binaryBlock: 	[ :string :verso | string , self styleDeVerso: verso ]
	Receiver's instance variables: 
		array: 	an Array(pero los besos)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>versosStyles
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>style
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor>>visitPainter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAUpdateRootVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor(WAVisitor)>>visit:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide>>visitDecoration:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>acceptDecorated:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/versosAleatorios?_s=H6QHhV7NjQ7MMM6F&_k=ajwhachA1LURHQEK
		actionBaseUrl: 	/versosAleatorios?_s=H6QHhV7NjQ7MMM6F&_k=ajwhachA1LURHQEK
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0



--- The full stack ---
WAVersosAleatorios class(GRObject class)>>error:
WAVersosAleatorios(GRObject)>>error:
WAVersosAleatorios(Object)>>errorNotIndexable
WAVersosAleatorios(Object)>>size
ByteString(SequenceableCollection)>>copyReplaceFrom:to:with:
ByteString(SequenceableCollection)>>,
[ :string :verso | string , self styleDeVerso: verso ] in WAVersosAleatorios>>versosStyles
[ :each | nextValue := binaryBlock value: nextValue value: each ] in THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAVersosAleatorios>>styleDeVerso:
29 March 2020 7:47:33.406306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios(Object)>>doesNotUnderstand: #styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aMessage: 	styleDeVerso: pero los besos
		exception: 	MessageNotUnderstood: WAVersosAleatorios>>styleDeVerso:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


[ :string :verso | string , (self styleDeVerso: verso) ] in WAVersosAleatorios>>versosStyles
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		string: 	''
		verso: 	pero los besos
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(pero los besos)
	Arguments and temporary variables: 
		thisValue: 	''
		binaryBlock: 	[ :string :verso | string , (self styleDeVerso: verso) ]
		nextValue: 	''
		each: 	pero los besos
	Receiver's instance variables: 
		array: 	an Array(pero los besos)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection>>do:
	Receiver: an OrderedCollection(pero los besos)
	Arguments and temporary variables: 
		aBlock: 	[ :each | nextValue := binaryBlock value: nextValue value: each ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(pero los besos)
		firstIndex: 	1
		lastIndex: 	1


OrderedCollection(Collection)>>inject:into:
	Receiver: an OrderedCollection(pero los besos)
	Arguments and temporary variables: 
		nextValue: 	''
		thisValue: 	''
		binaryBlock: 	[ :string :verso | string , (self styleDeVerso: verso) ]
	Receiver's instance variables: 
		array: 	an Array(pero los besos)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>versosStyles
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>style
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor>>visitPainter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAUpdateRootVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor(WAVisitor)>>visit:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide>>visitDecoration:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>acceptDecorated:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/versosAleatorios?_s=H6QHhV7NjQ7MMM6F&_k=ajwhachA1LURHQEK
		actionBaseUrl: 	/versosAleatorios?_s=H6QHhV7NjQ7MMM6F&_k=ajwhachA1LURHQEK
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0



--- The full stack ---
WAVersosAleatorios(Object)>>doesNotUnderstand: #styleDeVerso:
[ :string :verso | string , (self styleDeVerso: verso) ] in WAVersosAleatorios>>versosStyles
[ :each | nextValue := binaryBlock value: nextValue value: each ] in OrderedCollection(Collection)>>inject:into:
OrderedCollection>>do:
OrderedCollection(Collection)>>inject:into:
WAVersosAleatorios>>versosStyles
WAVersosAleatorios>>style
WAVersosAleatorios(WAPresenter)>>updateRoot:
WAVersosAleatorios>>updateRoot:
WAUpdateRootVisitor>>visitPainter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAUpdateRootVisitor(WAVisitor)>>visit:
WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
WAVisiblePresenterGuide>>visitPresenter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVisiblePresenterGuide>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
WAVisiblePresenterGuide(WAVisitor)>>start:
WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
Instance of Verso did not understand #id
29 March 2020 7:56:56.489306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #id
	Receiver: pero los besos
	Arguments and temporary variables: 
		aMessage: 	id
		exception: 	MessageNotUnderstood: Verso>>id
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'pero los besos'
		palabras: 	an OrderedCollection( pero los besos)
		poema: 	no voy a nombrarte por miedo


WAVersosAleatorios>>DoItIn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		ThisContext: 	WAVersosAleatorios>>styleDeVerso:
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ 'p#<1d> {
  position: fixed;
  bottom: <2d>px;
  ri...etc...
		source: 	a ReadStream
		context: 	WAVersosAleatorios>>styleDeVerso:
		receiver: 	a WAVersosAleatorios
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAVersosAleatorios
		ctxt: 	WAVersosAleatorios>>styleDeVerso:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(80738816)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(80738816)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(380162304)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(80738816)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1260@145)
		owner: 	a TransformWithLayoutMorph(843507968)
		submorphs: 	an Array(a RubCursor(892948736) a RubPrimarySelectionMorph(861815296...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (102083072) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(227267072)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(892948736)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(946649344))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(380162304)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1920@1017)
		canvas: 	a FormCanvas on: DisplayScreen(1920x1017x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(714721792))(a DropList...etc...
		lastStepTime: 	165570632
		lastStepMessage: 	nil
		lastCycleTime: 	165570687
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(892948736)))
		lastAlarmTime: 	165570632
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1920@1017)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1920@1017)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1920@1017)
		canvas: 	a FormCanvas on: DisplayScreen(1920x1017x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(714721792))(a DropList...etc...
		lastStepTime: 	165570632
		lastStepMessage: 	nil
		lastCycleTime: 	165570687
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(892948736)))
		lastAlarmTime: 	165570632
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1920@1017)
		canvas: 	a FormCanvas on: DisplayScreen(1920x1017x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(714721792))(a DropList...etc...
		lastStepTime: 	165570632
		lastStepMessage: 	nil
		lastCycleTime: 	165570687
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(892948736)))
		lastAlarmTime: 	165570632
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1920@1017)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1920@1017)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Verso(Object)>>doesNotUnderstand: #id
WAVersosAleatorios>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann actiTHERE_BE_DRAGONS_HERE
Error: Instances of SmallInteger are not indexable
29 March 2020 7:59:27.737306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

SmallInteger(Object)>>error:
	Receiver: 365320448
	Arguments and temporary variables: 
		aString: 	'Instances of SmallInteger are not indexable'
	Receiver's instance variables: 
365320448

SmallInteger(Object)>>errorNotIndexable
	Receiver: 365320448
	Arguments and temporary variables: 

	Receiver's instance variables: 
365320448

SmallInteger(Object)>>size
	Receiver: 365320448
	Arguments and temporary variables: 

	Receiver's instance variables: 
365320448

ByteString(SequenceableCollection)>>copyReplaceFrom:to:with:
	Receiver: '#'
	Arguments and temporary variables: 
		start: 	2
		stop: 	1
		replacementCollection: 	365320448
		newSequenceableCollection: 	nil
		newSize: 	nil
		endReplacement: 	nil
	Receiver's instance variables: 
'#'

ByteString(SequenceableCollection)>>,
	Receiver: '#'
	Arguments and temporary variables: 
		otherCollection: 	365320448
	Receiver's instance variables: 
'#'

JQueryInstance>>id:
	Receiver: a JQueryInstance ($(this))
	Arguments and temporary variables: 
		aString: 	365320448
	Receiver's instance variables: 
		decoration: 	a JQueryInstance ($(this))
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		arguments: 	an Array(a JSStream (this))


JQDraggable(JQPlugin)>>id:
	Receiver: a JQDraggable ($(this).draggable({"opacity":0.75,"revert":true}))
	Arguments and temporary variables: 
		aString: 	365320448
	Receiver's instance variables: 
		decoration: 	a JQDraggable ($(this).draggable({"opacity":0.75,"revert":true}))
		renderContext: 	a WARenderContext
		rendererClass: 	WAHtmlCanvas
		owner: 	a JQueryInstance ($(this))
		options: 	a GRSmallDictionary2('opacity'->0.75 'revert'->true)
		action: 	nil
		arguments: 	nil


WAGenericTag(WATagBrush)>>script:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	a JQDraggable ($(this).draggable({"opacity":0.75,"revert":true}))
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('id'->365320448 'class'->'fixed')
		tag: 	'p'


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	pero los besos
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: pero los besos
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'pero los besos'
		palabras: 	an OrderedCollection( pero los besos)
		poema: 	no voy a nombrarte por miedo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(pero los besos)
		html: 	a WAHtmlCanvas
		verso: 	pero los besos
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(pero los besos)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(pero los besos)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(pero los besos)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: pero los besos
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(pero los besos)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	pero los besos
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	pero los besos
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()



--- The full stack ---
SmallInteger(Object)>>error:
SmallInteger(Object)>>errorNotIndexable
SmallInteger(Object)>>size
ByteString(SequenceableCollection)>>copyReplaceFrom:to:with:
ByteString(SequenceableCollection)>>,
JQueryInstance>>id:
JQDraggable(JQPlugin)>>id:
WAGenericTag(WATagBrush)>>script:
WAVersosAleatorios>>renderVerso:withRenderer:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:withRenderer:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
THERE_BE_DRAGONS_HERE
Break
29 March 2020 8:01:21.923306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>style
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor>>visitPainter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAUpdateRootVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor(WAVisitor)>>visit:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide>>visitDecoration:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>acceptDecorated:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=-nLZCtzkCCi8rpNC
		actionBaseUrl: 	/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=-nLZCtzkCCi8rpNC
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/versosAleatorios'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WARenderPhaseContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation(WASessionContinuation)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot



--- The full stack ---
WAVersosAleatorios>>style
WAVersosAleatorios(WAPresenter)>>updateRoot:
WAVersosAleatorios>>updateRoot:
WAUpdateRootVisitor>>visitPainter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAUpdateRootVisitor(WAVisitor)>>visit:
WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
WAVisiblePresenterGuide>>visitPresenter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVisiblePresenterGuide>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
WAVisiblePresenterGuide(WAVisitor)>>start:
WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:duringTHERE_BE_DRAGONS_HERE
Break
29 March 2020 8:02:02.705306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>style
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor>>visitPainter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAUpdateRootVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor(WAVisitor)>>visit:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide>>visitDecoration:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>acceptDecorated:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=-nLZCtzkCCi8rpNC
		actionBaseUrl: 	/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=-nLZCtzkCCi8rpNC
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/versosAleatorios'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WAInitialRenderLoo...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios version: HTTP/1.1
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WARenderPhaseContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation(WASessionContinuation)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot



--- The full stack ---
WAVersosAleatorios>>style
WAVersosAleatorios(WAPresenter)>>updateRoot:
WAVersosAleatorios>>updateRoot:
WAUpdateRootVisitor>>visitPainter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAUpdateRootVisitor(WAVisitor)>>visit:
WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
WAVisiblePresenterGuide>>visitPresenter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVisiblePresenterGuide>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
WAVisiblePresenterGuide(WAVisitor)>>start:
WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
WASession>>start
THERE_BE_DRAGONS_HERE
Break
29 March 2020 8:02:33.375306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>style
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor>>visitPainter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAUpdateRootVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor(WAVisitor)>>visit:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide>>visitDecoration:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>acceptDecorated:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=4FglR4zSPawPD699
		actionBaseUrl: 	/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=4FglR4zSPawPD699
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=t6RGZcDBJUQosNoc'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WASession a WAAppl...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_s=9Bpq1klWngaMFyui&_k=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=t6R...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=t6R...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=t6R...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=t6R...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=t6R...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=t6R...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=t6RGZcDBJUQosNoc'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WASession a WAAppl...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_s=9Bpq1klWngaMFyui&_k=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui&_k=t6RGZcDBJUQosNoc'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WASession a WAAppl...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_s=9Bpq1klWngaMFyui&_k=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WARenderPhaseContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation(WASessionContinuation)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=9Bpq1klWngaMFyui...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot



--- The full stack ---
WAVersosAleatorios>>style
WAVersosAleatorios(WAPresenter)>>updateRoot:
WAVersosAleatorios>>updateRoot:
WAUpdateRootVisitor>>visitPainter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAUpdateRootVisitor(WAVisitor)>>visit:
WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
WAVisiblePresenterGuide>>visitPresenter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVisiblePresenterGuide>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
WAVisiblePresenterGuide(WAVisitor)>>start:
WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrTHERE_BE_DRAGONS_HERE
Break
29 March 2020 8:09:55.970306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>style
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios(WAPresenter)>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>updateRoot:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor>>visitPainter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAUpdateRootVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAUpdateRootVisitor(WAVisitor)>>visit:
	Receiver: a WAUpdateRootVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		root: 	a WAHtmlRoot


WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide>>visitPresenter:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide>>visitDecoration:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVersosAleatorios(WAComponent)>>acceptDecorated:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WAVisiblePresenterGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WAVisiblePresenterGuide(WAVisitor)>>start:
	Receiver: a WAVisiblePresenterGuide
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WAUpdateRootVisitor


WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		anHtmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>processRendering:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aResponse: 	a WABufferedResponse status: 200 message: 'OK'
		document: 	a WAHtmlDocument
		actionContinuation: 	a WACallbackProcessingActionContinuation
		renderContext: 	a WARenderContext
		actionUrl: 	/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=nsTfpGhyDIOn9KSN
		actionBaseUrl: 	/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=nsTfpGhyDIOn9KSN
		htmlRoot: 	a WAHtmlRoot
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARequestContext>>respond:
	Receiver: a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=ZmAeMjh2yMWh8uRL'
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WASession a WAAppl...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WARenderPhaseContinuation(WASessionContinuation)>>respond:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ :response | self processRendering: response ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation>>handleFiltered:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=ZmA...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=ZmA...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=ZmA...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=ZmA...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=ZmA...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=ZmA...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=ZmAeMjh2yMWh8uRL'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WASession a WAAppl...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=ZmAeMjh2yMWh8uRL'
	Arguments and temporary variables: 
		aRequestHandler: 	a WARenderPhaseContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WARenderPhaseContinuation a WASession a WAAppl...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_s=Y612Gre4_uiTsBG1&_k=...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WARenderPhaseContinuation(WARequestHandler)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WARenderPhaseContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot


WARenderPhaseContinuation(WASessionContinuation)>>handle:
	Receiver: a WARenderPhaseContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_s=Y612Gre4_uiTsBG1...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WARenderPhaseContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot



--- The full stack ---
WAVersosAleatorios>>style
WAVersosAleatorios(WAPresenter)>>updateRoot:
WAVersosAleatorios>>updateRoot:
WAUpdateRootVisitor>>visitPainter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitPresenter:
WAUpdateRootVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAUpdateRootVisitor(WAVisitor)>>visit:
WAVisiblePresenterGuide(WAPresenterGuide)>>visitPainter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitPresenter:
WAVisiblePresenterGuide>>visitPresenter:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVisiblePresenterGuide>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WAVisiblePresenterGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WAVisiblePresenterGuide(WAPresenterGuide)>>visit:
WAVisiblePresenterGuide(WAVisitor)>>start:
WARenderPhaseContinuation(WARenderLoopContinuation)>>toPresenterSendRoot:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentReTHERE_BE_DRAGONS_HERE
SubscriptOutOfBounds: 3
29 March 2020 8:42:36.034306 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Array(Object)>>errorSubscriptBounds:
	Receiver: #(1232 462)
	Arguments and temporary variables: 
		index: 	3
	Receiver's instance variables: 
#(1232 462)

Array(Object)>>at:
	Receiver: #(1232 462)
	Arguments and temporary variables: 
		index: 	3
	Receiver's instance variables: 
#(1232 462)

[ :newStream | 
readStream := self readStream.
[ readStream atEnd ]
	whileFalse: [ char := readStream next.
		char == $<
			ifTrue: [ | nextChar |
				nextChar := readStream next asUppercase.
				nextChar == $R
					ifTrue: [ newStream cr ].
				nextChar == $L
					ifTrue: [ newStream lf ].
				nextChar == $T
					ifTrue: [ newStream tab ].
				nextChar == $N
					ifTrue: [ newStream nextPutAll: OSPlatform current lineEnding ].
				nextChar isDigit
					ifTrue: [ index := nextChar digitValue.
						[ readStream atEnd
							or: [ (nextChar := readStream next asUppercase) isDigit not ] ]
							whileFalse: [ index := index * 10 + nextChar digitValue ] ].
				nextChar == $?
					ifTrue: [ | trueString falseString |
						trueString := readStream upTo: $:.
						falseString := readStream upTo: $>.
						readStream position: readStream position - 1.
						newStream
							nextPutAll:
								((anArray at: index)
									ifTrue: [ trueString ]
									ifFalse: [ falseString ]) ].
				nextChar == $P
					ifTrue: [ (anArray at: index) printOn: newStream ].
				nextChar == $S
					ifTrue: [ newStream nextPutAll: (anArray at: index) ].
				readStream skipTo: $> ]
			ifFalse: [ newStream
					nextPut:
						(char == $%
							ifTrue: [ readStream next ]
							ifFalse: [ char ]) ] ] ] in ByteString(String)>>expandMacrosWithArguments:
	Receiver: '{
  position: fixed;
  bottom: <2p>px;
  right: <3p>px;
	}'
	Arguments and temporary variables: 
		anArray: 	#(1232 462)
		newStream: 	a WriteStream
		nextChar: 	$P
		readStream: 	a ReadStream
		char: 	$<
		index: 	3
	Receiver's instance variables: 
'{
  position: fixed;
  bottom: <2p>px;
  right: <3p>px;
	}'

ByteString class(SequenceableCollection class)>>new:streamContents:
	Receiver: ByteString
	Arguments and temporary variables: 
		newSize: 	58
		blockWithArg: 	[ :newStream | 
readStream := self readStream.
[ readStream atEnd...etc...
		stream: 	a WriteStream
	Receiver's instance variables: 
		superclass: 	String
		methodDict: 	a MethodDictionary(#asByteArray->ByteString>>#asByteArray #asKeyCom...etc...
		format: 	1048576
		layout: 	a ByteLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#ByteString
		classPool: 	a Dictionary(#NonAsciiMap->#[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Strings-Base'


ByteString(String)>>expandMacrosWithArguments:
	Receiver: '{
  position: fixed;
  bottom: <2p>px;
  right: <3p>px;
	}'
	Arguments and temporary variables: 
		readStream: 	a ReadStream
		char: 	$<
		index: 	3
		anArray: 	#(1232 462)
	Receiver's instance variables: 
'{
  position: fixed;
  bottom: <2p>px;
  right: <3p>px;
	}'

ByteString(String)>>expandMacrosWith:with:
	Receiver: '{
  position: fixed;
  bottom: <2p>px;
  right: <3p>px;
	}'
	Arguments and temporary variables: 
		anObject: 	1232
		anotherObject: 	462
	Receiver's instance variables: 
'{
  position: fixed;
  bottom: <2p>px;
  right: <3p>px;
	}'

WAVersosAleatorios>>styleDeVerso
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	mamá la mesa esta servida
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Verso>>renderOnComponent:withRenderer:
	Receiver: mamá la mesa esta servida
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'mamá la mesa esta servida'
		palabras: 	an OrderedCollection( mamá la mesa esta servida)
		poema: 	todo lo que tengo lo sirvo


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(mamá la mesa esta servida)
		html: 	a WAHtmlCanvas
		verso: 	mamá la mesa esta servida
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


OrderedCollection>>do:
	Receiver: an OrderedCollection(mamá la mesa esta servida)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(mamá la mesa esta servida)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(mamá la mesa esta servida)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


Poema>>renderOnComponent:withRenderer:
	Receiver: mamá la mesa esta servida
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(mamá la mesa esta servida)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	mamá la mesa esta servida
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	mamá la mesa esta servida
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Break
31 March 2020 7:24:50.098812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	donde el viento se huracanaba,
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'donde el viento se huracanaba,'
		palabras: 	an OrderedCollection( donde el viento se huracanaba,)
		poema: 	En la encañada


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba,)
		html: 	a WAHtmlCanvas
		verso: 	donde el viento se huracanaba,
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba,)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba,)
		firstIndex: 	1
		lastIndex: 	1


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba,)
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba,)
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Break
31 March 2020 7:25:18.480812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	donde el viento se huracanaba,
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'donde el viento se huracanaba,'
		palabras: 	an OrderedCollection( donde el viento se huracanaba,)
		poema: 	En la encañada


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
		verso: 	donde el viento se huracanaba,
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba, El pájaro que una mañana)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba, El pájaro que una mañana)
		firstIndex: 	1
		lastIndex: 	2


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(donde el viento se huracanaba,->'position: fixed;
...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAVersosAleatorios>>styleDeVerso:
WAVersosAleatorios>>rendeTHERE_BE_DRAGONS_HERE
Break
31 March 2020 7:25:47.303812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	El pájaro que una mañana
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	El pájaro que una mañana
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: El pájaro que una mañana
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'El pájaro que una mañana'
		palabras: 	an OrderedCollection( El pájaro que una mañana)
		poema: 	La liebre que una vez que yo miraba


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
		verso: 	El pájaro que una mañana
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba, El pájaro que una mañana)
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba, El pájaro que una mañana)
		firstIndex: 	1
		lastIndex: 	2


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAVersosAleatorios>>styleDeVerso:
WAVersosAleatorios>>renderVerso:withRenderer:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:withRenderer:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>rTHERE_BE_DRAGONS_HERE
Break
31 March 2020 7:26:13.863812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	donde el viento se huracanaba,
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'donde el viento se huracanaba,'
		palabras: 	an OrderedCollection( donde el viento se huracanaba,)
		poema: 	En la encañada


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
		verso: 	donde el viento se huracanaba,
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba, El pájaro que una mañana en que yo con...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba, El pájaro que una mañana en que ...etc...
		firstIndex: 	1
		lastIndex: 	3


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAVersosAleatorios>>styleDeVerso:
WAVersosAleatorios>>renderVerso:withRenderer:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:withRenderer:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WATHERE_BE_DRAGONS_HERE
Break
31 March 2020 7:26:26.687812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	El pájaro que una mañana
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	El pájaro que una mañana
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: El pájaro que una mañana
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'El pájaro que una mañana'
		palabras: 	an OrderedCollection( El pájaro que una mañana)
		poema: 	La liebre que una vez que yo miraba


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
		verso: 	El pájaro que una mañana
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba, El pájaro que una mañana en que yo con...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba, El pájaro que una mañana en que ...etc...
		firstIndex: 	1
		lastIndex: 	3


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAVersosAleatorios>>styleDeVerso:
WAVersosAleatorios>>renderVerso:withRenderer:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:withRenderer:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariabTHERE_BE_DRAGONS_HERE
Break
31 March 2020 7:26:36.735812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	en que yo con el pan en el estómago
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	en que yo con el pan en el estómago
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: en que yo con el pan en el estómago
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'en que yo con el pan en el estómago'
		palabras: 	an OrderedCollection( en que yo con el pan en el estómago)
		poema: 	La liebre que una vez que yo miraba


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
		verso: 	en que yo con el pan en el estómago
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba, El pájaro que una mañana en que yo con...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	3
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba, El pájaro que una mañana en que ...etc...
		firstIndex: 	1
		lastIndex: 	3


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAVersosAleatorios>>styleDeVerso:
WAVersosAleatorios>>renderVerso:withRenderer:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:withRenderer:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WATHERE_BE_DRAGONS_HERE
Break
31 March 2020 7:26:54.825812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	donde el viento se huracanaba,
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'donde el viento se huracanaba,'
		palabras: 	an OrderedCollection( donde el viento se huracanaba,)
		poema: 	En la encañada


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
		verso: 	donde el viento se huracanaba,
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba, El pájaro que una mañana en que yo con...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba, El pájaro que una mañana en que ...etc...
		firstIndex: 	1
		lastIndex: 	4


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id1'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAVersosAleatorios>>styleDeVerso:
WAVersosAleatorios>>renderVerso:withRenderer:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:withRenderer:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
THERE_BE_DRAGONS_HERE
Break
31 March 2020 7:27:04.275812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	El pájaro que una mañana
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	El pájaro que una mañana
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: El pájaro que una mañana
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'El pájaro que una mañana'
		palabras: 	an OrderedCollection( El pájaro que una mañana)
		poema: 	La liebre que una vez que yo miraba


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
		verso: 	El pájaro que una mañana
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba, El pájaro que una mañana en que yo con...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba, El pájaro que una mañana en que ...etc...
		firstIndex: 	1
		lastIndex: 	4


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id7'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAVersosAleatorios>>styleDeVerso:
WAVersosAleatorios>>renderVerso:withRenderer:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:withRenderer:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WASession>>handleFiltered:
WATimingToolFilter(WARequestFilter)>>handleFiltered:
THERE_BE_DRAGONS_HERE
Break
31 March 2020 7:27:06.695812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	en que yo con el pan en el estómago
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	en que yo con el pan en el estómago
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: en que yo con el pan en el estómago
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'en que yo con el pan en el estómago'
		palabras: 	an OrderedCollection( en que yo con el pan en el estómago)
		poema: 	La liebre que una vez que yo miraba


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
		verso: 	en que yo con el pan en el estómago
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba, El pájaro que una mañana en que yo con...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	3
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba, El pájaro que una mañana en que ...etc...
		firstIndex: 	1
		lastIndex: 	4


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id13'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAVersosAleatorios>>styleDeVerso:
WAVersosAleatorios>>renderVerso:withRenderer:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:withRenderer:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WASession>>handleFiltered:
WATimingToolFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WATimingToolFilter>>handleFiltered:
BTHERE_BE_DRAGONS_HERE
Break
31 March 2020 7:27:07.660812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>styleDeVerso:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	Pienso en todas las horas pienso en todos los días
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios>>renderVerso:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unVerso: 	Pienso en todas las horas pienso en todos los días
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Verso>>renderOnComponent:withRenderer:
	Receiver: Pienso en todas las horas pienso en todos los días
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'Pienso en todas las horas pienso en todos los días'
		palabras: 	an OrderedCollection( Pienso en todas las horas pienso en todos los d...etc...
		poema: 	La liebre que una vez que yo miraba


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
		verso: 	Pienso en todas las horas pienso en todos los días
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(donde el viento se huracanaba, El pájaro que una mañana en que yo con...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	4
	Receiver's instance variables: 
		array: 	an Array(donde el viento se huracanaba, El pájaro que una mañana en que ...etc...
		firstIndex: 	1
		lastIndex: 	4


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: donde el viento se huracanaba,
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(donde el viento se huracanaba, El pájaro que una m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	donde el viento se huracanaba,
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	donde el viento se huracanaba,
		imagenes: 	an Imagenes


[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id23'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id23'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id23'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id23'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	'id23'
		currentBrush: 	a WAGenericTag
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAVersosAleatorios>>renderContentOn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAVersosAleatorios
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAVersosAleatorios
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAVersosAleatorios(WAComponent)>>accept:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(El pájaro que una mañana->'position: fixed;
  bott...etc...


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAVersosAleatorios
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext



--- The full stack ---
WAVersosAleatorios>>styleDeVerso:
WAVersosAleatorios>>renderVerso:withRenderer:
Verso>>renderOnComponent:withRenderer:
[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
OrderedCollection>>do:
WAVersosAleatorios>>renderVersos:withRenderer:
Poema>>renderOnComponent:withRenderer:
WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAVersosAleatorios>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAVersosAleatorios>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAVersosAleatorios(WAComponent)>>accept:
WAVersosAleatorios(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAVersosAleatorios(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAVersosAleatorios(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WASession>>handleFiltered:
WATimingToolFilter(WARequestFilter)>>handleFiltered:
[ super handleFiltered: aRequestContext ] in WATimingToolFilter>>handleFiltered:
BlockClosure>>ensure:
WATimingToolFilter>>handleFiltered:
WADeprecatedToolFilter(WARequestFilter)>>handleFiltered:
THERE_BE_DRAGONS_HERE
User Interrupt
31 March 2020 7:35:04.030812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ delaySemaphore wait ] in Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3763146877285812


BlockClosure>>ifCurtailed:
	Receiver: [ delaySemaphore wait ]
	Arguments and temporary variables: 
		aBlock: 	[ self unschedule ]
		complete: 	nil
		result: 	nil
	Receiver's instance variables: 
		outerContext: 	Delay>>wait
		startpc: 	36
		numArgs: 	0


Delay>>wait
	Receiver: a Delay(20 msecs)
	Arguments and temporary variables: 

	Receiver's instance variables: 
		delaySemaphore: 	a Semaphore()
		beingWaitedOn: 	false
		millisecondDelayDuration: 	20
		scheduler: 	nil
		schedulerResumptionTime: 	nil
		ticker: 	a DelayMicrosecondTicker
		resumptionTick: 	3763146877285812


WorldState>>interCyclePause:
	Receiver: a WorldState
	Arguments and temporary variables: 
		milliSecs: 	20
		wait: 	20
		wait2: 	20
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(623620864))(a DropList...etc...
		lastStepTime: 	1439488
		lastStepMessage: 	nil
		lastCycleTime: 	1439488
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(384049408)))
		lastAlarmTime: 	1439488
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(623620864))(a DropList...etc...
		lastStepTime: 	1439488
		lastStepMessage: 	nil
		lastCycleTime: 	1439488
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(384049408)))
		lastAlarmTime: 	1439488
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a Syste...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ delaySemaphore wait ] in Delay>>wait
BlockClosure>>ifCurtailed:
Delay>>wait
WorldState>>interCyclePause:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
31 March 2020 7:35:04.092812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WeakArray class>>finalizationProcess
	Receiver: WeakArray
	Arguments and temporary variables: 
		throttle: 	a Semaphore()
		firstMourner: 	nil
	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


[ self finalizationProcess ] in WeakArray class>>restartFinalizationProcess
	Receiver: WeakArray
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	Array
		methodDict: 	a MethodDictionary()
		format: 	262144
		layout: 	a WeakLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WeakArray
		classPool: 	a Dictionary(#FinalizationDependents->a WeakArray(a WeakRegistry(<th...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Collections-Weak-Base'


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ self finalizationProcess ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	WeakArray class>>restartFinalizationProcess
		startpc: 	127
		numArgs: 	0



--- The full stack ---
WeakArray class>>finalizationProcess
[ self finalizationProcess ] in WeakArray class>>restartFinalizationProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
31 March 2020 7:35:04.115812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
31 March 2020 7:35:04.127812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
31 March 2020 7:35:04.136812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
31 March 2020 7:35:04.147812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
User Interrupt
31 March 2020 7:35:04.158812 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: PalabraReal>>verso
31 March 2020 8:19:21.681714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PalabraReal(Object)>>doesNotUnderstand: #verso
	Receiver: las
	Arguments and temporary variables: 
		aMessage: 	verso
		exception: 	MessageNotUnderstood: PalabraReal>>verso
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'las'
		palabraAnterior: 	
		palabraSiguiente: 	casonas
		poema: 	Soy el nadador, Señor, soy el hombre que nada.
		tipoDePalabra: 	nil


[ :verso | verso = unaPalabra verso ] in MuestraDePoemas>>versosConPalabra:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		unaPalabra: 	las
		versos: 	nil
		verso: 	para contemplar las plantas del jardín
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


OrderedCollection>>reject:
	Receiver: an OrderedCollection(para contemplar las plantas del jardín se agitan las copas de los árb...etc...
	Arguments and temporary variables: 
		rejectBlock: 	[ :verso | verso = unaPalabra verso ]
		newCollection: 	an OrderedCollection()
		element: 	para contemplar las plantas del jardín
		index: 	1
	Receiver's instance variables: 
		array: 	an Array(para contemplar las plantas del jardín se agitan las copas de l...etc...
		firstIndex: 	1
		lastIndex: 	43


MuestraDePoemas>>versosConPalabra:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		unaPalabra: 	las
		versos: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


Poemas>>versoConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	las
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(En la encañada Soy el nadador, Señor, soy el hombre que nada. ...etc...
		muestraDePoemas: 	a MuestraDePoemas


Poema>>versoDePoemarioQueContiene:
	Receiver: Soy el nadador, Señor, soy el hombre que nada.
	Arguments and temporary variables: 
		aPalabraReal: 	las
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(Soy el nadador, Señor, soy el hombre que nada. Soy...etc...
		owner: 	a Poemas
		textoDePoema: 	'Soy el nadador, Señor, soy el hombre que nada.
Soy el hombre que...etc...
		autor: 	'Hector Viel Temperley'


PalabraReal>>nuevoVersoDeOtrosPoemasQueMeContiene
	Receiver: las
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'las'
		palabraAnterior: 	
		palabraSiguiente: 	casonas
		poema: 	Soy el nadador, Señor, soy el hombre que nada.
		tipoDePalabra: 	nil


WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	las
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(las casonas->'position: fixed;
  bottom: 57px;
  r...etc...


[ self agregarVersoConPalabra: unaPalabraReal ] in WAVersosAleatorios>>renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	las
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(las casonas->'position: fixed;
  bottom: 57px;
  r...etc...


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_k=RGxMDrDuTnTfKYUE...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('2'->a WAActionCallback '3'->a WAActionCallback '4'->a ...etc...
		nextKey: 	9


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_k=RGxMDrDuTnTfKYUE...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('2'->a WAActionCallback '3'->a WAActionCallback '4'->a ...etc...
		nextKey: 	9


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_k=RGxMDrDuTnTfKYUE&...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: OrderedCollection>>renderOnComponent:withRenderer:
31 March 2020 8:24:49.747714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

OrderedCollection(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
	Receiver: an OrderedCollection(Toda la noche sopla el viento)
	Arguments and temporary variables: 
		aMessage: 	renderOnComponent: a WAVersosAleatorios withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: OrderedCollection>>renderOnComponent:withRende...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
		array: 	an Array(Toda la noche sopla el viento nil nil nil nil nil nil nil nil n...etc...
		firstIndex: 	1
		lastIndex: 	1


[ :verso | verso renderOnComponent: self withRenderer: html ] in WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(y ondulo como una llanura, sereno y sin miedo, y m...etc...
		html: 	a WAHtmlCanvas
		verso: 	an OrderedCollection(Toda la noche sopla el viento)
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(y ondulo como una llanura, sereno y sin miedo, y m...etc...


OrderedCollection>>do:
	Receiver: an OrderedCollection(y ondulo como una llanura, sereno y sin miedo, y más grande an Ordere...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :verso | verso renderOnComponent: self withRenderer: html ]
		index: 	2
	Receiver's instance variables: 
		array: 	an Array(y ondulo como una llanura, sereno y sin miedo, y más grande an ...etc...
		firstIndex: 	1
		lastIndex: 	2


WAVersosAleatorios>>renderVersos:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		versos: 	an OrderedCollection(y ondulo como una llanura, sereno y sin miedo, y m...etc...
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(y ondulo como una llanura, sereno y sin miedo, y m...etc...


Poema>>renderOnComponent:withRenderer:
	Receiver: y ondulo como una llanura, sereno y sin miedo, y más grande
	Arguments and temporary variables: 
		waComponent: 	a WAVersosAleatorios
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(y ondulo como una llanura, sereno y sin miedo, y m...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


WAVersosAleatorios>>renderPoemaConstruido:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		aPoema: 	y ondulo como una llanura, sereno y sin miedo, y más grande
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a DictionaTHERE_BE_DRAGONS_HERE
Break
31 March 2020 8:27:02.879714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas>>versosConPalabra:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		unaPalabra: 	me
		RFReifyValueVar: 	nil
		versos: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


Poemas>>versoConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(quiero arrancarle unas palabras a esto que siento no voy a nom...etc...
		muestraDePoemas: 	a MuestraDePoemas


Poema>>versoDePoemarioQueContiene:
	Receiver: quiero arrancarle unas palabras a esto que siento
	Arguments and temporary variables: 
		aPalabraReal: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(quiero arrancarle unas palabras a esto que siento ...etc...
		owner: 	a Poemas
		textoDePoema: 	'quiero arrancarle unas palabras a esto que siento
guardarte en u...etc...
		autor: 	'Nadia Sol'


PalabraReal>>nuevoVersoDeOtrosPoemasQueMeContiene
	Receiver: me
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'me'
		palabraAnterior: 	
		palabraSiguiente: 	decís:
		poema: 	quiero arrancarle unas palabras a esto que siento
		verso: 	me decís:
		tipoDePalabra: 	nil


WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	me
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(me decís:->'position: fixed;
  bottom: 370px;
  ri...etc...


[ self agregarVersoConPalabra: unaPalabraReal ] in WAVersosAleatorios>>renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	me
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(me decís:->'position: fixed;
  bottom: 370px;
  ri...etc...


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO5...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('2'->a WAActionCallback '3'->a WAActionCallback '4'->a ...etc...
		nextKey: 	9


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO5...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('2'->a WAActionCallback '3'->a WAActionCallback '4'->a ...etc...
		nextKey: 	9


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO51...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: THERE_BE_DRAGONS_HERE
Break
31 March 2020 8:28:09.403714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas>>versosConPalabra:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		unaPalabra: 	me
		RFReifyValueVar: 	nil
		versos: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


Poemas>>versoConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(quiero arrancarle unas palabras a esto que siento no voy a nom...etc...
		muestraDePoemas: 	a MuestraDePoemas


Poema>>versoDePoemarioQueContiene:
	Receiver: quiero arrancarle unas palabras a esto que siento
	Arguments and temporary variables: 
		aPalabraReal: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(quiero arrancarle unas palabras a esto que siento ...etc...
		owner: 	a Poemas
		textoDePoema: 	'quiero arrancarle unas palabras a esto que siento
guardarte en u...etc...
		autor: 	'Nadia Sol'


PalabraReal>>nuevoVersoDeOtrosPoemasQueMeContiene
	Receiver: me
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'me'
		palabraAnterior: 	
		palabraSiguiente: 	decís:
		poema: 	quiero arrancarle unas palabras a esto que siento
		verso: 	me decís:
		tipoDePalabra: 	nil


WAVersosAleatorios>>DoItIn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		ThisContext: 	WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(me decís:->'position: fixed;
  bottom: 370px;
  ri...etc...


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) nuevoVersoDeOtrosPoema...etc...
		source: 	a ReadStream
		context: 	WAVersosAleatorios>>agregarVersoConPalabra:
		receiver: 	a WAVersosAleatorios
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAVersosAleatorios
		ctxt: 	WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(202278656)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(202278656)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(122335488)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(202278656)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@50)
		owner: 	a TransformWithLayoutMorph(234521344)
		submorphs: 	an Array(a RubCursor(610448640) a RubPrimarySelectionMorph(977863424...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (207701760) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(968272128)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(610448640)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(112575232))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(122335488)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(269040384))(a DropList...etc...
		lastStepTime: 	1065658
		lastStepMessage: 	nil
		lastCycleTime: 	1065714
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(610448640)))
		lastAlarmTime: 	1065658
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(269040384))(a DropList...etc...
		lastStepTime: 	1065658
		lastStepMessage: 	nil
		lastCycleTime: 	1065714
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(610448640)))
		lastAlarmTime: 	1065658
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(269040384))(a DropList...etc...
		lastStepTime: 	1065658
		lastStepMessage: 	nil
		lastCycleTime: 	1065714
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(610448640)))
		lastAlarmTime: 	1065658
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables:THERE_BE_DRAGONS_HERE
Break
31 March 2020 8:29:05.298714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas>>versosConPalabra:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		unaPalabra: 	me
		RFReifyValueVar: 	nil
		versos: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


MuestraDePoemas>>versoConPalabra:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		unaPalabra: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


BlockClosure>>on:do:
	Receiver: [ chain := thisContext sender cut: ctxt.
ctxt jump ]
	Arguments and temporary variables: 
		exception: 	Error
		handlerAction: 	[ :ex | 
error
	ifNil:
		[ "this is ugly but it fixes the side-e...etc...
	Receiver's instance variables: 
		outerContext: 	Context class>>contextOn:do:
		startpc: 	40
		numArgs: 	0


BlockClosure>>ensure:
	Receiver: [ chain := thisContext sender cut: ctxt.
ctxt jump ]
	Arguments and temporary variables: 
		aBlock: 	[ error
	ifNil: [ topContext := thisContext.
		here jump ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	Context class>>contextEnsure:
		startpc: 	40
		numArgs: 	0


Poemas>>versoConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(quiero arrancarle unas palabras a esto que siento no voy a nom...etc...
		muestraDePoemas: 	a MuestraDePoemas


Poema>>versoDePoemarioQueContiene:
	Receiver: quiero arrancarle unas palabras a esto que siento
	Arguments and temporary variables: 
		aPalabraReal: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(quiero arrancarle unas palabras a esto que siento ...etc...
		owner: 	a Poemas
		textoDePoema: 	'quiero arrancarle unas palabras a esto que siento
guardarte en u...etc...
		autor: 	'Nadia Sol'


PalabraReal>>nuevoVersoDeOtrosPoemasQueMeContiene
	Receiver: me
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'me'
		palabraAnterior: 	
		palabraSiguiente: 	decís:
		poema: 	quiero arrancarle unas palabras a esto que siento
		verso: 	me decís:
		tipoDePalabra: 	nil


WAVersosAleatorios>>DoItIn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		ThisContext: 	WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(me decís:->'position: fixed;
  bottom: 370px;
  ri...etc...


CompiledMethod>>valueWithReceiver:arguments:
	Receiver: WAVersosAleatorios>>#DoItIn:
	Arguments and temporary variables: 
		aReceiver: 	a WAVersosAleatorios
		anArray: 	an Array(WAVersosAleatorios>>agregarVersoConPalabra:)
	Receiver's instance variables: 
WAVersosAleatorios>>#DoItIn:

[ aCompiledMethod
	valueWithReceiver: anObject
	arguments: (evalContext ifNil: [ #() ] ifNotNil: [ {evalContext} ]) ] in RubSmalltalkEditor>>debug:receiver:in:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aCompiledMethod: 	WAVersosAleatorios>>#DoItIn:
		anObject: 	a WAVersosAleatorios
		evalContext: 	WAVersosAleatorios>>agregarVersoConPalabra:
		guineaPig: 	nil
		context: 	nil
		debugSession: 	nil
	Receiver's instance variables: 
		defaultKeymappingIndex: 	nil
		textArea: 	a RubEditingArea(202278656)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ aCompiledMethod
	valueWithReceiver: anObject
	arguments: (evalContext ifNil: [ #() ] ifN...etc...
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	RubSmalltalkEditor>>debug:receiver:in:
		startpc: 	72
		numArgs: 	0



--- The full stack ---
MuestraDePoemas>>versosConPalabra:
MuestraDePoemas>>versoConPalabra:
BlockClosure>>on:do:
BlockClosure>>ensure:
Poemas>>versoConPalabra:
Poema>>versoDePoemarioQueContiene:
PalabraReal>>nuevoVersoDeOtrosPoemasQueMeContiene
WAVersosAleatorios>>DoItIn:
CompiledMethod>>valueWithReceiver:arguments:
[ aCompiledMethod
	valueWithReceiver: anObject
	arguments: (evalContext ifNil: [ #() ] ifNotNil: [ {evalContext} ]) ] in RubSmalltalkEditor>>debug:receiver:in:
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Break
31 March 2020 8:29:14.161714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

MuestraDePoemas>>versosConPalabra:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		unaPalabra: 	me
		RFReifyValueVar: 	nil
		versos: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


MuestraDePoemas>>versoConPalabra:
	Receiver: a MuestraDePoemas
	Arguments and temporary variables: 
		unaPalabra: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemasAMostrar: 	a Poemas
		poemas: 	an OrderedCollection(a Poemas a Poemas a Poemas a Poemas)


Poemas>>versoConPalabra:
	Receiver: a Poemas
	Arguments and temporary variables: 
		unaPalabra: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(quiero arrancarle unas palabras a esto que siento no voy a nom...etc...
		muestraDePoemas: 	a MuestraDePoemas


Poema>>versoDePoemarioQueContiene:
	Receiver: quiero arrancarle unas palabras a esto que siento
	Arguments and temporary variables: 
		aPalabraReal: 	me
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(quiero arrancarle unas palabras a esto que siento ...etc...
		owner: 	a Poemas
		textoDePoema: 	'quiero arrancarle unas palabras a esto que siento
guardarte en u...etc...
		autor: 	'Nadia Sol'


PalabraReal>>nuevoVersoDeOtrosPoemasQueMeContiene
	Receiver: me
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		stringDePalabra: 	'me'
		palabraAnterior: 	
		palabraSiguiente: 	decís:
		poema: 	quiero arrancarle unas palabras a esto que siento
		verso: 	me decís:
		tipoDePalabra: 	nil


WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	me
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(me decís:->'position: fixed;
  bottom: 370px;
  ri...etc...


[ self agregarVersoConPalabra: unaPalabraReal ] in WAVersosAleatorios>>renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	me
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(me decís:->'position: fixed;
  bottom: 370px;
  ri...etc...


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'2'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO5...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('2'->a WAActionCallback '3'->a WAActionCallback '4'->a ...etc...
		nextKey: 	9


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO5...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('2'->a WAActionCallback '3'->a WAActionCallback '4'->a ...etc...
		nextKey: 	9


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO51...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO5...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO5...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO51C&_k=m...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO51C&_k=m...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO51C&_k=m...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO51C&_k=m...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO51C&_k=m...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?2&_s=eMe4amMhBXyPO51C&_k=m...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


THERE_BE_DRAGONS_HERE
MessageNotUnderstood: PoemasNulo>>versoAleatorio
31 March 2020 8:43:09.679714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

PoemasNulo(Object)>>doesNotUnderstand: #versoAleatorio
	Receiver: a PoemasNulo
	Arguments and temporary variables: 
		aMessage: 	versoAleatorio
		exception: 	MessageNotUnderstood: PoemasNulo>>versoAleatorio
		resumeValue: 	nil
	Receiver's instance variables: 
a PoemasNulo

Poema>>agregarVerso:
	Receiver: murmullos, palabras que se formaban a medias
	Arguments and temporary variables: 
		verso: 	eche raíces en lugares insólitos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(murmullos, palabras que se formaban a medias tendr...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


ConstruccionDePoemas>>agregarVerso:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unVerso: 	eche raíces en lugares insólitos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	murmullos, palabras que se formaban a medias
		imagenes: 	an Imagenes


WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(eche raíces en lugares insólitos->'position: fixed...etc...


[ self agregarVersoConPalabra: unaPalabraReal ] in WAVersosAleatorios>>renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(eche raíces en lugares insólitos->'position: fixed...etc...


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	25


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	25


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_deb...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Verso>>versoAleatorio
31 March 2020 8:44:16.438714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Verso(Object)>>doesNotUnderstand: #versoAleatorio
	Receiver: eche raíces en lugares insólitos
	Arguments and temporary variables: 
		aMessage: 	versoAleatorio
		exception: 	MessageNotUnderstood: Verso>>versoAleatorio
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'eche raíces en lugares insólitos'
		palabras: 	an OrderedCollection( eche raíces en lugares insólitos)
		poema: 	es posible que el tiempo


Poema>>agregarVerso:
	Receiver: murmullos, palabras que se formaban a medias
	Arguments and temporary variables: 
		verso: 	eche raíces en lugares insólitos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(murmullos, palabras que se formaban a medias tendr...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


ConstruccionDePoemas>>agregarVerso:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unVerso: 	eche raíces en lugares insólitos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	murmullos, palabras que se formaban a medias
		imagenes: 	an Imagenes


WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(eche raíces en lugares insólitos->'position: fixed...etc...


[ self agregarVersoConPalabra: unaPalabraReal ] in WAVersosAleatorios>>renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(eche raíces en lugares insólitos->'position: fixed...etc...


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	25


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	25


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_deb...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=avKcQxffN1UYkaI3&_k=-...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?13&_debugAction=_debug&...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=avKcQxffN1UYkaI3&_k=-...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?13&_debugAction=_debug&...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poema>>versoAleatorioDeMuestra
31 March 2020 8:45:24.425714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poema(Object)>>doesNotUnderstand: #versoAleatorioDeMuestra
	Receiver: es posible que el tiempo
	Arguments and temporary variables: 
		aMessage: 	versoAleatorioDeMuestra
		exception: 	MessageNotUnderstood: Poema>>versoAleatorioDeMuestra
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(es posible que el tiempo eche raíces en lugares in...etc...
		owner: 	a Poemas
		textoDePoema: 	'es posible que el tiempo
eche raíces en lugares insólitos
mientr...etc...
		autor: 	'Nadia Sol'


Verso>>versoAleatorio
	Receiver: eche raíces en lugares insólitos
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'eche raíces en lugares insólitos'
		palabras: 	an OrderedCollection( eche raíces en lugares insólitos)
		poema: 	es posible que el tiempo


Poema>>agregarVerso:
	Receiver: murmullos, palabras que se formaban a medias
	Arguments and temporary variables: 
		verso: 	eche raíces en lugares insólitos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(murmullos, palabras que se formaban a medias tendr...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


ConstruccionDePoemas>>agregarVerso:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unVerso: 	eche raíces en lugares insólitos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	murmullos, palabras que se formaban a medias
		imagenes: 	an Imagenes


WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(eche raíces en lugares insólitos->'position: fixed...etc...


[ self agregarVersoConPalabra: unaPalabraReal ] in WAVersosAleatorios>>renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(eche raíces en lugares insólitos->'position: fixed...etc...


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	25


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	25


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_deb...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=avKcQxffN1UYkaI3&_k=-...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?13&_debugAction=_debug&...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=avKcQxffN1UYkaI3&_k=-...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?13&_debugAction=_debug&...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poemas>>versoAleatorioDeMuestra
31 March 2020 8:45:47.796714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poemas(Object)>>doesNotUnderstand: #versoAleatorioDeMuestra
	Receiver: a Poemas
	Arguments and temporary variables: 
		aMessage: 	versoAleatorioDeMuestra
		exception: 	MessageNotUnderstood: Poemas>>versoAleatorioDeMuestra
		resumeValue: 	nil
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(elogio la ausencia tomo un café seremos frágiles es posible qu...etc...
		muestraDePoemas: 	a MuestraDePoemas


Poema>>versoAleatorioDeMuestra
	Receiver: es posible que el tiempo
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(es posible que el tiempo eche raíces en lugares in...etc...
		owner: 	a Poemas
		textoDePoema: 	'es posible que el tiempo
eche raíces en lugares insólitos
mientr...etc...
		autor: 	'Nadia Sol'


Verso>>versoAleatorio
	Receiver: eche raíces en lugares insólitos
	Arguments and temporary variables: 

	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		texto: 	'eche raíces en lugares insólitos'
		palabras: 	an OrderedCollection( eche raíces en lugares insólitos)
		poema: 	es posible que el tiempo


Poema>>agregarVerso:
	Receiver: murmullos, palabras que se formaban a medias
	Arguments and temporary variables: 
		verso: 	eche raíces en lugares insólitos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection(murmullos, palabras que se formaban a medias tendr...etc...
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


ConstruccionDePoemas>>agregarVerso:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		unVerso: 	eche raíces en lugares insólitos
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	a MuestraDePoemas
		poemaConstruido: 	murmullos, palabras que se formaban a medias
		imagenes: 	an Imagenes


WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(eche raíces en lugares insólitos->'position: fixed...etc...


[ self agregarVersoConPalabra: unaPalabraReal ] in WAVersosAleatorios>>renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(eche raíces en lugares insólitos->'position: fixed...etc...


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	25


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	25


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_deb...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=avKcQxffN1UYkaI3&_k=-...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?13&_debugAction=_debug&...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?13&_debugAction=_debug&_s=avKcQxffN1UYkaI3&_k=-...etc...
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?13&_debugAction=_debug&...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_debugAction=_de...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
Break
31 March 2020 8:46:50.317714 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAVersosAleatorios>>agregarVersoConPalabra:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
		RFReifyValueVar: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(como en medio del aire.->'position: fixed;
  botto...etc...


[ self agregarVersoConPalabra: unaPalabraReal ] in WAVersosAleatorios>>renderPalabra:withRenderer:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		unaPalabraReal: 	raíces
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	a ConstruccionDePoemas
		stylesDeVersos: 	a Dictionary(como en medio del aire.->'position: fixed;
  botto...etc...


BlockClosure>>valueWithPossibleArguments:
	Receiver: [ self agregarVersoConPalabra: unaPalabraReal ]
	Arguments and temporary variables: 
		anArray: 	#(nil)
		args: 	#()
	Receiver's instance variables: 
		outerContext: 	WAVersosAleatorios>>renderPalabra:withRenderer:
		startpc: 	50
		numArgs: 	0


WAActionCallback>>evaluateWithArgument:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anObject: 	nil
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


WAActionCallback(WACallback)>>evaluateWithFieldValues:
	Receiver: a WAActionCallback
	Arguments and temporary variables: 
		anOrderedCollection: 	#(nil)
	Receiver's instance variables: 
		key: 	'13'
		block: 	[ self agregarVersoConPalabra: unaPalabraReal ]


[ :callback | callback evaluateWithFieldValues: (fields allAt: callback key) ] in WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYk...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
		callback: 	a WAActionCallback
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	37


Array(SequenceableCollection)>>do:
	Receiver: an Array(a WAActionCallback)
	Arguments and temporary variables: 
		aBlock: 	[ :callback | callback evaluateWithFieldValues: (fields allAt: callback...etc...
		index: 	1
	Receiver's instance variables: 
an Array(a WAActionCallback)

WACallbackRegistry>>handle:
	Receiver: a WACallbackRegistry
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYk...etc...
		set: 	a Set(a WAActionCallback)
		fields: 	a WAMergedRequestFields
	Receiver's instance variables: 
		callbacks: 	a Dictionary('10'->a WAActionCallback '11'->a WAActionCallback '12'-...etc...
		nextKey: 	37


WACallbackProcessingActionContinuation>>basicPerformAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self basicPerformAction ] in WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WAActionPhaseContinuation)...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYka...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation(WARenderLoopContinuation)>...etc...
		startpc: 	61
		numArgs: 	0


WACallbackProcessingActionContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super performAction ] in WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


BlockClosure>>ensure:
	Receiver: [ super performAction ]
	Arguments and temporary variables: 
		aBlock: 	[ self request isXmlHttpRequest
	ifTrue: [ self captureState ] ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACallbackProcessingActionContinuation>>performAction
		startpc: 	41
		numArgs: 	0


WACallbackProcessingActionContinuation>>performAction
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


WACallbackProcessingActionContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYk...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ self filter handleFiltered: aRequestContext ] in WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYk...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYkaI3&_k=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYkaI3&_k=...etc...
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYkaI3&_k=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in nil
		oldValue: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYkaI3&_k=...etc...
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYkaI3&_k=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYkaI3&_k=...etc...
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYkaI3&_k=TwWYC27TpFbGT_Bm'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?13&_s=avKcQxffN1UYkaI3&...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYkaI3&_k=TwWYC27TpFbGT_Bm'
	Arguments and temporary variables: 
		aRequestHandler: 	a WACallbackProcessingActionContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WACallbackProcessingActionContinuation a WASes...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?13&_s=avKcQxffN1UYkaI3&...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	nil


WACallbackProcessingActionContinuation(WARequestHandler)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYk...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WACallbackProcessingActionContinuation
		parent: 	a WASession
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	a WARenderContext
		jumpTo: 	nil


[ super handle: aRequestContext ] in WACallbackProcessingActionContinuation(WASessionContinuation)>>handle:
	Receiver: a WACallbackProcessingActionContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?13&_s=avKcQxffN1UYk...etc...
	Receiver's instance variableTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "default" is nil
8 April 2020 9:08:17.998361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #default
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	default
		exception: 	MessageNotUnderstood: receiver of "default" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

WAVersosAleatorios>>initialize
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		stylesDeVersos: 	nil


WAVersosAleatorios class(GRObject class)>>new
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoConPalabra:->WAVersosAleatorios>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		paTHERE_BE_DRAGONS_HERE
Instance of ConstruccionDePoemas class did not understand #default
8 April 2020 9:08:51.393361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

ConstruccionDePoemas class(Object)>>doesNotUnderstand: #default
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	default
		exception: 	MessageNotUnderstood: ConstruccionDePoemas class>>default
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAVersosAleatorios>>DoItIn:
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 
		ThisContext: 	WAVersosAleatorios>>initialize
	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		stylesDeVersos: 	nil


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ ConstruccionDePoemas default
		source: 	a ReadStream
		context: 	WAVersosAleatorios>>initialize
		receiver: 	a WAVersosAleatorios
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	a WAVersosAleatorios
		ctxt: 	WAVersosAleatorios>>initialize
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(638708736)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(638708736)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(761367552)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(638708736)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@107)
		owner: 	a TransformWithLayoutMorph(582593792)
		submorphs: 	an Array(a RubCursor(847691520) a RubPrimarySelectionMorph(488593152...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (746738176) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(202437888)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(847691520)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(534353920))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(761367552)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(40197120))(a DropListM...etc...
		lastStepTime: 	49474
		lastStepMessage: 	nil
		lastCycleTime: 	49536
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(847691520)))
		lastAlarmTime: 	49474
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(40197120))(a DropListM...etc...
		lastStepTime: 	49474
		lastStepMessage: 	nil
		lastCycleTime: 	49536
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(847691520)))
		lastAlarmTime: 	49474
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(40197120))(a DropListM...etc...
		lastStepTime: 	49474
		lastStepMessage: 	nil
		lastCycleTime: 	49536
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(847691520)))
		lastAlarmTime: 	49474
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	Transcript


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
ConstruccionDePoemas class(Object)>>doesNotUnderstand: #default
WAVersosAleatorios>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "default" is nil
8 April 2020 9:08:55.656361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #default
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	default
		exception: 	MessageNotUnderstood: receiver of "default" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

WAVersosAleatorios>>initialize
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		stylesDeVersos: 	nil


WAVersosAleatorios class(GRObject class)>>new
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoConPalabra:->WAVersosAleatorios>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "default" is nil
8 April 2020 9:08:58.261361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #default
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	default
		exception: 	MessageNotUnderstood: receiver of "default" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

WAVersosAleatorios>>initialize
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		stylesDeVersos: 	nil


WAVersosAleatorios class(GRObject class)>>new
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoConPalabra:->WAVersosAleatorios>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	ReTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "default" is nil
8 April 2020 9:09:07.686361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #default
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	default
		exception: 	MessageNotUnderstood: receiver of "default" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

WAVersosAleatorios>>initialize
	Receiver: a WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil
		stylesDeVersos: 	nil


WAVersosAleatorios class(GRObject class)>>new
	Receiver: WAVersosAleatorios
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVersoConPalabra:->WAVersosAleatorios>>#a...etc...
		format: 	65539
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#WAVersosAleatorios
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'...etc...


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/versosAleatorios?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /versosAleatorios?_debugAction=_debug ver...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'Zcpl4oz-QcN_KwSr'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/versosAleatorios?_debugAction=_debug...etc...
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'Zcpl4oz-QcN_KwSr'


WAMergedRequestFields>>at:ifAbsent:
	Receiver: a WAMergedRequestFields
	Arguments and temporary variables: 
		aKey: 	'_k'
		aBlock: 	[ ^ self start ]
	Receiver's instance variables: 
		delegates: 	an Array(a WARequestFields('_debugAction'->'_debug') a WARequestFiel...etc...


WASession>>handleFiltered:
	Receiver: a WASessTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poemas class>>desdeArchivo:
8 April 2020 9:19:19.982361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poemas class(Object)>>doesNotUnderstand: #desdeArchivo:
	Receiver: Poemas
	Arguments and temporary variables: 
		aMessage: 	desdeArchivo: Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo...etc...
		exception: 	MessageNotUnderstood: Poemas class>>desdeArchivo:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#autor->Poemas>>#autor #initializeCon:autor:->Po...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


[ :pathOfFile | self conPoemas: (Poemas desdeArchivo: pathOfFile) ] in ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | self conPoemas: (Poemas desdeArchivo: pathOfFile) ]
		newCollection: 	#(nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstanTHERE_BE_DRAGONS_HERE
Instance of Poemas class did not understand #desdeArchivo:
8 April 2020 9:20:58.403361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poemas class(Object)>>doesNotUnderstand: #desdeArchivo:
	Receiver: Poemas
	Arguments and temporary variables: 
		aMessage: 	desdeArchivo: 'C:/Users/lgomez/Documents/Pharo/images/Pharo/p/Nadia S...etc...
		exception: 	MessageNotUnderstood: Poemas class>>desdeArchivo:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#autor->Poemas>>#autor #initializeCon:autor:->Po...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


ConstruccionDePoemas class>>DoItIn:
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		ThisContext: 	[ :pathOfFile | self conPoemas: (Poemas desdeArchivo: pathOfFile) ...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ Poemas
		desdeArchivo:
			((ThisContext namedTempAt...etc...
		source: 	a ReadStream
		context: 	[ :pathOfFile | self conPoemas: (Poemas desdeArchivo: pathOfFile) ] in...etc...
		receiver: 	ConstruccionDePoemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	ConstruccionDePoemas
		ctxt: 	[ :pathOfFile | self conPoemas: (Poemas desdeArchivo: pathOfFile) ] in Co...etc...
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(57303808)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(57303808)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(187123200)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(57303808)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@126)
		owner: 	a TransformWithLayoutMorph(1032695552)
		submorphs: 	an Array(a RubCursor(553181696) a RubPrimarySelectionMorph(652505344...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (977977600) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(760261376)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(553181696)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(29950208))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(187123200)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(40197120))(a DropListM...etc...
		lastStepTime: 	776482
		lastStepMessage: 	nil
		lastCycleTime: 	776535
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(553181696)))
		lastAlarmTime: 	776482
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(40197120))(a DropListM...etc...
		lastStepTime: 	776482
		lastStepMessage: 	nil
		lastCycleTime: 	776535
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(553181696)))
		lastAlarmTime: 	776482
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(40197120))(a DropListM...etc...
		lastStepTime: 	776482
		lastStepMessage: 	nil
		lastCycleTime: 	776535
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(553181696)))
		lastAlarmTime: 	776482
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Poemas class(Object)>>doesNotUnderstand: #desdeArchivo:
ConstruccionDePoemas class>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poemas class>>desdeArchivo:
8 April 2020 9:23:50.452361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poemas class(Object)>>doesNotUnderstand: #desdeArchivo:
	Receiver: Poemas
	Arguments and temporary variables: 
		aMessage: 	desdeArchivo: File @ C:\Users\lgomez\Documents\Pharo\images\Pharo\p\N...etc...
		exception: 	MessageNotUnderstood: Poemas class>>desdeArchivo:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#autor->Poemas>>#autor #initializeCon:autor:->Po...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


[ :pathOfFile | 
self
	conPoemas:
		(Poemas
			desdeArchivo:
				(pathOfFile pathString trimLeft: [ :char | char = $/ ])
					asFileReference)
	autor: pathOfFile basenameWithoutExtension ] in ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
self
	conPoemas:
		(Poemas
			desdeArchivo:
				(pathO...etc...
		newCollection: 	#(nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
	THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Poemas class>>desdeArchivo:autor:
8 April 2020 9:24:09.611361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Poemas class(Object)>>doesNotUnderstand: #desdeArchivo:autor:
	Receiver: Poemas
	Arguments and temporary variables: 
		aMessage: 	desdeArchivo: File @ C:\Users\lgomez\Documents\Pharo\images\Pharo\p\N...etc...
		exception: 	MessageNotUnderstood: Poemas class>>desdeArchivo:autor:
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#autor->Poemas>>#autor #initializeCon:autor:->Po...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


[ :pathOfFile | 
self
	conPoemas:
		(Poemas
			desdeArchivo:
				(pathOfFile pathString trimLeft: [ :char | char = $/ ])
					asFileReference
			autor: pathOfFile basenameWithoutExtension) ] in ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
self
	conPoemas:
		(Poemas
			desdeArchivo:
				(pathO...etc...
		newCollection: 	#(nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WASession>>start
	Receiver: a WASession
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'Ya8QptmU2zReNvZa'


[ ^ self start ] in WASession>>handleFiltered:
	Receiver: a WASession
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		continationKey: 	nil
		continuation: 	nil
		fields: 	a WAMergedRequestFields
		documentHandlerKey: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAMutualExclusionFilter
		parent: 	a WAApplication
		configuration: 	a WAUserConfiguration
		continuations: 	a WAHashCache
		properties: 	nil
		documentHandlers: 	nil
		key: 	'Ya8QptmU2zReNvZa'


WAMergTHERE_BE_DRAGONS_HERE
Instance of Character did not understand #includes:
8 April 2020 9:26:06.644361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Character(Object)>>doesNotUnderstand: #includes:
	Receiver: Character cr
	Arguments and temporary variables: 
		aMessage: 	includes: $c
		exception: 	MessageNotUnderstood: Character>>includes:
		resumeValue: 	nil
	Receiver's instance variables: 
Character cr

WideString(String)>>substrings:
	Receiver: 'caminar destapada todo un invierno
nada quiero de estas colchas
más que fingirme una mo...etc...
	Arguments and temporary variables: 
		separators: 	Character cr
		substrings: 	a WriteStream
		substringStart: 	nil
		i: 	1
		nextChar: 	$c
	Receiver's instance variables: 
'caminar destapada todo un invierno
nada quiero de estas colchas
más que fingirme una mo...etc...

Poemas class>>DoItIn:
	Receiver: Poemas
	Arguments and temporary variables: 
		ThisContext: 	Poemas class>>desdeArchivo:autor:
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#autor->Poemas>>#autor #initializeCon:autor:->Po...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) contents substrings: C...etc...
		source: 	a ReadStream
		context: 	Poemas class>>desdeArchivo:autor:
		receiver: 	Poemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	Poemas
		ctxt: 	Poemas class>>desdeArchivo:autor:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(702190848)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(702190848)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(610507520)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(702190848)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@69)
		owner: 	a TransformWithLayoutMorph(225463552)
		submorphs: 	an Array(a RubPrimarySelectionMorph(941442560) a RubCursor(854206464...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (892134400) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(977948160)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(854206464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(373912832))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(610507520)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(816082176))(a DropList...etc...
		lastStepTime: 	1084755
		lastStepMessage: 	nil
		lastCycleTime: 	1084783
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(854206464)))
		lastAlarmTime: 	1084755
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(816082176))(a DropList...etc...
		lastStepTime: 	1084755
		lastStepMessage: 	nil
		lastCycleTime: 	1084783
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(854206464)))
		lastAlarmTime: 	1084755
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(816082176))(a DropList...etc...
		lastStepTime: 	1084755
		lastStepMessage: 	nil
		lastCycleTime: 	1084783
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(854206464)))
		lastAlarmTime: 	1084755
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Character(Object)>>doesNotUnderstand: #includes:
WideString(String)>>substrings:
Poemas class>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
Instance of Character class did not understand #crlf
8 April 2020 9:28:01.913361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Character class(Object)>>doesNotUnderstand: #crlf
	Receiver: Character
	Arguments and temporary variables: 
		aMessage: 	crlf
		exception: 	MessageNotUnderstood: Character class>>crlf
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Magnitude
		methodDict: 	a MethodDictionary(size 102)
		format: 	458752
		layout: 	an ImmediateLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Character
		classPool: 	a Dictionary(#CharSet->Unicode #CharacterTable->nil #DigitValues->#(...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-BasicObjects'


Poemas class>>DoItIn:
	Receiver: Poemas
	Arguments and temporary variables: 
		ThisContext: 	Poemas class>>desdeArchivo:autor:
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#autor->Poemas>>#autor #initializeCon:autor:->Po...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


OpalCompiler>>evaluate
	Receiver: an OpalCompiler
	Arguments and temporary variables: 
		value: 	nil
	Receiver's instance variables: 
		ast: 	DoItIn: ThisContext
	^ (ThisContext namedTempAt: 1) contents
		substrings:...etc...
		source: 	a ReadStream
		context: 	Poemas class>>desdeArchivo:autor:
		receiver: 	Poemas
		compilationContext: 	a CompilationContext
		compilationContextClass: 	nil


RubSmalltalkEditor>>evaluate:andDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aStream: 	a ReadStream
		aBlock: 	[ :result | aBlock value: result ]
		result: 	nil
		rcvr: 	Poemas
		ctxt: 	Poemas class>>desdeArchivo:autor:
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(702190848)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


RubSmalltalkEditor>>highlightEvaluateAndDo:
	Receiver: a RubSmalltalkEditor
	Arguments and temporary variables: 
		aBlock: 	[ :result | result inspect ]
	Receiver's instance variables: 
		defaultKeymappingIndex: 	an IdentityDictionary(#command->#(#noop: #cursorHome: #...etc...
		textArea: 	a RubEditingArea(702190848)
		selectorChooser: 	nil
		notificationStrategy: 	a RubTextInsertionStrategy


[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(610507520)
		textModel: 	a GLMRubricSmalltalkTextModel


RubEditingArea(RubAbstractTextArea)>>handleEdit:
	Receiver: a RubEditingArea(702190848)
	Arguments and temporary variables: 
		editBlock: 	[ textMorph textArea editor highlightEvaluateAndDo: ann action.
text...etc...
	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1250@69)
		owner: 	a TransformWithLayoutMorph(225463552)
		submorphs: 	an Array(a RubPrimarySelectionMorph(77926400) a RubCursor(854206464)...etc...
		fullBounds: 	nil
		color: 	Color transparent
		extension: 	a MorphExtension (892134400) [other:  (announcer -> an Announcer) (k...etc...
		model: 	a GLMRubricSmalltalkTextModel
		paragraph: 	a RubShoutStylerDecorator
		editor: 	a RubSmalltalkEditor
		scrollPane: 	a RubTextScrollPane(977948160)
		editingState: 	a RubEditingState
		textStyle: 	a TextStyle Source Code Pro
		textColor: 	Color black
		margins: 	a Margin top: 6 left: 6 bottom: 6 right: 6
		readOnly: 	false
		menuAllowed: 	nil
		editingMode: 	a RubSmalltalkCodeMode
		cursor: 	a RubCursor(854206464)
		segments: 	an OrderedCollection(a RubHighlightSegmentMorph(863534592))
		getMenuPolicy: 	nil
		mouseDownPoint: 	nil
		wrapped: 	true
		editorClass: 	RubSmalltalkEditor


[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
	Receiver: a GLMMorphicPharoMethodRenderer
	Arguments and temporary variables: 
		ann: 	a GLMHighlightAndEvaluate
	Receiver's instance variables: 
		renderer: 	a GLMMorphicRenderer
		textMorph: 	a RubScrolledTextMorph(610507520)
		textModel: 	a GLMRubricSmalltalkTextModel


WorldState>>runStepMethodsIn:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
		queue: 	WaitfreeQueue with 0 items
		nextInQueue: 	[ textMorph textArea
	handleEdit: [ textMorph textArea editor high...etc...
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(816082176))(a DropList...etc...
		lastStepTime: 	1199984
		lastStepMessage: 	nil
		lastCycleTime: 	1200049
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(854206464)))
		lastAlarmTime: 	1199984
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>runStepMethods
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldState>>doOneCycleNowFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(816082176))(a DropList...etc...
		lastStepTime: 	1199984
		lastStepMessage: 	nil
		lastCycleTime: 	1200049
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(854206464)))
		lastAlarmTime: 	1199984
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldState>>doOneCycleFor:
	Receiver: a WorldState
	Arguments and temporary variables: 
		aWorld: 	a WorldMorph(479349760) [world]
	Receiver's instance variables: 
		hands: 	an Array(a HandMorph(930346240))
		viewBox: 	(0@0) corner: (1904@1001)
		canvas: 	a FormCanvas on: DisplayScreen(1904x1001x32)
		damageRecorder: 	a DamageRecorder
		stepList: 	a Heap(StepMessage(#stepAt: -> a DropListMorph(816082176))(a DropList...etc...
		lastStepTime: 	1199984
		lastStepMessage: 	nil
		lastCycleTime: 	1200049
		alarms: 	a Heap(MorphicAlarm(#hideShow -> a RubCursor(854206464)))
		lastAlarmTime: 	1199984
		menuBuilder: 	a PragmaMenuBuilder ( nil ) 
		activeHand: 	a HandMorph(930346240)
		currentCursor: 	((CursorWithMask
	extent: (16@16)
	depth: 1
	fromArray: #(
		2r0...etc...


WorldMorph>>doOneCycle
	Receiver: a WorldMorph(479349760) [world]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		bounds: 	(0@0) corner: (1904@1001)
		owner: 	nil
		submorphs: 	an Array(a MenubarMorph(882974464) a TaskbarMorph(983412480) a GLMSy...etc...
		fullBounds: 	(0@0) corner: (1904@1001)
		color: 	(Color r: 0.9400000000000001 g: 0.9400000000000001 b: 0.9400000000000001...etc...
		extension: 	a MorphExtension (563912448) [other:  (dragEnabled -> true) (dropEna...etc...
		borderWidth: 	0
		borderColor: 	(Color r: 0.06 g: 0.06 b: 0.06 alpha: 1.0)
		backgroundMorph: 	nil
		worldState: 	a WorldState
		griddingOn: 	nil
		osWindow: 	nil
		osWindowMutex: 	nil
		session: 	nil


WorldMorph class>>doOneCycle
	Receiver: WorldMorph
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	PasteUpMorph
		methodDict: 	a MethodDictionary(#acceptDroppingMorph:event:->WorldMorph>>#accept...etc...
		format: 	65550
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	{AthensWorldMorph. OSWindowWorldMorph}
		name: 	#WorldMorph
		classPool: 	a Dictionary(#AllowDropFiles->true #CursorOwnerWorld->a WorldMorph(4...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Morphic-Core-Worlds'
		announcer: 	nil
		displayScaleFactor: 	1


[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
	Receiver: a MorphicUIManager
	Arguments and temporary variables: 

	Receiver's instance variables: 
		activeTranscript: 	nil


[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
	Receiver: [ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ]
	Arguments and temporary variables: 

	Receiver's instance variables: 
		outerContext: 	MorphicUIManager>>spawnNewProcess
		startpc: 	65
		numArgs: 	0



--- The full stack ---
Character class(Object)>>doesNotUnderstand: #crlf
Poemas class>>DoItIn:
OpalCompiler>>evaluate
RubSmalltalkEditor>>evaluate:andDo:
RubSmalltalkEditor>>highlightEvaluateAndDo:
[ textMorph textArea editor highlightEvaluateAndDo: ann action.
textMorph shoutStyler style: textMorph text ] in [ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
RubEditingArea(RubAbstractTextArea)>>handleEdit:
[ textMorph textArea
	handleEdit: [ textMorph textArea editor highlightEvaluateAndDo: ann action.
		textMorph shoutStyler style: textMorph text ] ] in GLMMorphicPharoMethodRenderer(GLMMorphicPharoCodeRenderer)>>actOnHighlightAndEvaluate:
WorldState>>runStepMethodsIn:
WorldMorph>>runStepMethods
WorldState>>doOneCycleNowFor:
WorldState>>doOneCycleFor:
WorldMorph>>doOneCycle
WorldMorph class>>doOneCycle
[ [ WorldMorph doOneCycle.
Processor yield.
false ] whileFalse: [  ] ] in MorphicUIManager>>spawnNewProcess
[ self value.
Processor terminateActive ] in BlockClosure>>newProcess
-------------------------------------------------------------------------------

THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Character class>>crlf
8 April 2020 9:30:43.505361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Character class(Object)>>doesNotUnderstand: #crlf
	Receiver: Character
	Arguments and temporary variables: 
		aMessage: 	crlf
		exception: 	MessageNotUnderstood: Character class>>crlf
		resumeValue: 	nil
	Receiver's instance variables: 
		superclass: 	Magnitude
		methodDict: 	a MethodDictionary(size 102)
		format: 	458752
		layout: 	an ImmediateLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Character
		classPool: 	a Dictionary(#CharSet->Unicode #CharacterTable->nil #DigitValues->#(...etc...
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Kernel-BasicObjects'


Poemas class>>desdeArchivo:autor:
	Receiver: Poemas
	Arguments and temporary variables: 
		aFileReference: 	File @ C:\Users\lgomez\Documents\Pharo\images\Pharo\p\Nadia Sol...etc...
		nombreDeAutore: 	'Nadia Sol'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#autor->Poemas>>#autor #initializeCon:autor:->Po...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


[ :pathOfFile | 
self
	conPoemas:
		(Poemas
			desdeArchivo:
				(pathOfFile pathString trimLeft: [ :char | char = $/ ])
					asFileReference
			autor: pathOfFile basenameWithoutExtension) ] in ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
self
	conPoemas:
		(Poemas
			desdeArchivo:
				(pathO...etc...
		newCollection: 	#(nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
		startpc: 	39
		numArgs: 	0


WAInitialRenderLoopContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ super handle: aRequestContext ]
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "con:" is nil
8 April 2020 9:31:49.184361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #con:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	con: a Poemas
		exception: 	MessageNotUnderstood: receiver of "con:" is nil
		resumeValue: 	nil
	Receiver's instance variables: 
nil

Poemas>>initializeCon:autor:
	Receiver: a Poemas
	Arguments and temporary variables: 
		coleccionDeTextos: 	#('caminar destapada todo un invierno
nada quiero de estas ...etc...
		autorDePoemas: 	'Nadia Sol'
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		poemas: 	an Array(caminar destapada todo un invierno     )
		muestraDePoemas: 	nil


Poemas class>>con:autor:
	Receiver: Poemas
	Arguments and temporary variables: 
		coleccionDeTextosAMostrar: 	#('caminar destapada todo un invierno
nada quiero d...etc...
		autorDePoemas: 	'Nadia Sol'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#autor->Poemas>>#autor #initializeCon:autor:->Po...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


Poemas class>>desdeArchivo:autor:
	Receiver: Poemas
	Arguments and temporary variables: 
		aFileReference: 	File @ C:\Users\lgomez\Documents\Pharo\images\Pharo\p\Nadia Sol...etc...
		nombreDeAutore: 	'Nadia Sol'
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#autor->Poemas>>#autor #initializeCon:autor:->Po...etc...
		format: 	65540
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#Poemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


[ :pathOfFile | 
self
	conPoemas:
		(Poemas
			desdeArchivo:
				(pathOfFile pathString trimLeft: [ :char | char = $/ ])
					asFileReference
			autor: pathOfFile basenameWithoutExtension) ] in ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
		pathOfFile: 	Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images'...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


Array(SequenceableCollection)>>collect:
	Receiver: an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...
	Arguments and temporary variables: 
		aBlock: 	[ :pathOfFile | 
self
	conPoemas:
		(Poemas
			desdeArchivo:
				(pathO...etc...
		newCollection: 	#(nil)
		index: 	1
	Receiver's instance variables: 
an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'images' / 'Pharo' / '...etc...

ConstruccionDePoemas class>>desdeArchivos
	Receiver: ConstruccionDePoemas
	Arguments and temporary variables: 
		paths: 	an Array(Path / 'C:' / 'Users' / 'lgomez' / 'Documents' / 'Pharo' / 'ima...etc...
	Receiver's instance variables: 
		superclass: 	Model
		methodDict: 	a MethodDictionary(#agregarVerso:->ConstruccionDePoemas>>#agregarVe...etc...
		format: 	65542
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	#()
		name: 	#ConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Core'


WAConstruccionDePoemas>>initialize
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		decoration: 	nil
		model: 	nil


WAConstruccionDePoemas class(GRObject class)>>new
	Receiver: WAConstruccionDePoemas
	Arguments and temporary variables: 

	Receiver's instance variables: 
		superclass: 	WAComponent
		methodDict: 	a MethodDictionary(#agregarVerso:->WAConstruccionDePoemas>>#agregar...etc...
		format: 	65538
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WAConstruccionDePoemas
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Poemas-Gui'


[ self rootClass new ] in WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


GRSmallDictionary2>>at:ifAbsent:
	Receiver: a GRSmallDictionary2()
	Arguments and temporary variables: 
		aKey: 	#rootComponent
		aBlock: 	[ self rootClass new ]
		index: 	0
	Receiver's instance variables: 
		size: 	0
		table: 	#(nil nil nil nil nil nil)


WARequestContext>>rootComponentIfAbsent:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aNiladicBlock: 	[ self rootClass new ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation>>createRoot
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation>>basicPerformAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		root: 	nil
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self basicPerformAction ] in WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ self basicPerformAction ]
	Arguments and temporary variables: 
		exception: 	a WAWalkbackErrorHandler
		handlerAction: 	[ :exception | 
[ "If there's an error while handling the except...etc...
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>perfo...etc...
		startpc: 	30
		numArgs: 	0


WAWalkbackErrorHandler(WAExceptionHandler)>>handleExceptionsDuring:
	Receiver: a WAWalkbackErrorHandler
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
	Receiver's instance variables: 
		requestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'


[ currentHandler handleExceptionsDuring: aBlock ] in WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ currentHandler handleExceptionsDuring: aBlock ]
	Arguments and temporary variables: 
		exception: 	WARenderNotification
		handlerAction: 	[ :n |  ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNo...etc...
		startpc: 	61
		numArgs: 	0


WAInitialRenderLoopContinuation(WARenderLoopContinuation)>>withNotificationHandlerDo:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aBlock: 	[ self basicPerformAction ]
		currentHandler: 	a WAWalkbackErrorHandler
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>performAction
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 

	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


BlockClosure>>ensure:
	Receiver: [ activeProcess psValueAt: index put: anObject.
aBlock value ]
	Arguments and temporary variables: 
		aBlock: 	[ activeProcess psValueAt: index put: oldValue ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WACurrentRequestContext(DynamicVariable)>>value:during:
		startpc: 	47
		numArgs: 	0


WACurrentRequestContext(DynamicVariable)>>value:during:
	Receiver: a WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
		activeProcess: 	a Process in GRPharoPlatform>>openDebuggerOn:
		oldValue: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		index: 	13


WACurrentRequestContext class(DynamicVariable class)>>value:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
	Receiver: WACurrentRequestContext
	Arguments and temporary variables: 
		anObject: 	a WARequestContext url: '/poemas?_debugAction=_debug'
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		superclass: 	WADynamicVariable
		methodDict: 	a MethodDictionary()
		format: 	65537
		layout: 	a FixedLayout
		organization: 	a ClassOrganization
		subclasses: 	nil
		name: 	#WACurrentRequestContext
		classPool: 	a Dictionary()
		sharedPools: 	an OrderedCollection()
		environment: 	a SystemDictionary(lots of globals)
		category: 	#'Seaside-Core-RequestHandling'
		soleInstance: 	a WACurrentRequestContext


[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


BlockClosure>>ensure:
	Receiver: [ WACurrentRequestContext use: self during: aBlock ]
	Arguments and temporary variables: 
		aBlock: 	[ handlers removeFirst ]
		complete: 	nil
		returnValue: 	nil
	Receiver's instance variables: 
		outerContext: 	WARequestContext>>push:during:
		startpc: 	42
		numArgs: 	0


WARequestContext>>push:during:
	Receiver: a WARequestContext url: '/poemas?_debugAction=_debug'
	Arguments and temporary variables: 
		aRequestHandler: 	a WAInitialRenderLoopContinuation
		aBlock: 	[ self filter handleFiltered: aRequestContext ]
	Receiver's instance variables: 
		handlers: 	an OrderedCollection(a WAInitialRenderLoopContinuation a WASession a ...etc...
		request: 	a WARequest method: GET uri: /poemas?_debugAction=_debug version: HTTP...etc...
		response: 	a WABufferedResponse status: 200 message: 'OK'
		codec: 	a GRPharoUtf8Codec name: 'utf-8'
		consumer: 	a WAPathConsumer
		properties: 	a GRSmallDictionary2()


WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContinuation)>>handle:
	Receiver: a WAInitialRenderLoopContinuation
	Arguments and temporary variables: 
		aRequestContext: 	a WARequestContext url: '/poemas?_debugAction=_debug'
	Receiver's instance variables: 
		filter: 	a WAValueHolder contents: a WAInitialRenderLoopContinuation
		parent: 	nil
		configuration: 	a WAUserConfiguration
		states: 	a WASnapshot
		renderContext: 	nil


BlockClosure>>on:do:
	Receiver: [ super handle: aRequestContext ]
	Arguments and temporary variables: 
		exception: 	WAUnregisteredHandlerError
		handlerAction: 	[ :err | self requestContext redirectTo: self application url ]
	Receiver's instance variables: 
		outerContext: 	WAInitialRenderLoopContinuation(WASessionContinTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: Array>>renderOnComponent:withRenderer:
8 April 2020 9:32:19.803361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Array(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
	Receiver: an Array(a ConstruccionDePoemas)
	Arguments and temporary variables: 
		aMessage: 	renderOnComponent: a WAConstruccionDePoemas withRenderer: a WAHtmlCan...etc...
		exception: 	MessageNotUnderstood: Array>>renderOnComponent:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
an Array(a ConstruccionDePoemas)

[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)



--- The full stack ---
Array(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Array>>renderOnComponent:withRenderer:
8 April 2020 9:32:25.755361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Array(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
	Receiver: an Array(a ConstruccionDePoemas)
	Arguments and temporary variables: 
		aMessage: 	renderOnComponent: a WAConstruccionDePoemas withRenderer: a WAHtmlCan...etc...
		exception: 	MessageNotUnderstood: Array>>renderOnComponent:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
an Array(a ConstruccionDePoemas)

[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)



--- The full stack ---
Array(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderPhaseContinuation>>processRendering:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: Array>>renderOnComponent:withRenderer:
8 April 2020 9:33:17.315361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

Array(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
	Receiver: an Array(a ConstruccionDePoemas)
	Arguments and temporary variables: 
		aMessage: 	renderOnComponent: a WAConstruccionDePoemas withRenderer: a WAHtmlCan...etc...
		exception: 	MessageNotUnderstood: Array>>renderOnComponent:withRenderer:
		resumeValue: 	nil
	Receiver's instance variables: 
an Array(a ConstruccionDePoemas)

[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


BlockClosure>>renderOn:
	Receiver: [ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	56
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model renderOnComponent: self withRenderer: html.
html div class: '...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAToolDecoration
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitDecoration:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aDecoration: 	a WAToolDecoration
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAToolDecoration(WADecoration)>>accept:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderingGuide(WAPresenterGuide)>>visit:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAPainter)>>renderWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)



--- The full stack ---
Array(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
[ model renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderPhaseContinuation>>processRendering:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: receiver of "renderOnComponent:withRenderer:" is nil
8 April 2020 9:33:51.159361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

UndefinedObject(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
	Receiver: nil
	Arguments and temporary variables: 
		aMessage: 	renderOnComponent: a WAImagenes withRenderer: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: receiver of "renderOnComponent:withRenderer:" ...etc...
		resumeValue: 	nil
	Receiver's instance variables: 
nil

[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	nil
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


BlockClosure>>renderOn:
	Receiver: [ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	w...etc...
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderImagenes:withRenderer:
		startpc: 	61
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model:...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'imagenes' 'id'->'imagenes')
		tag: 	'div'


WAConstruccionDePoemas>>renderImagenes:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		imagenesAMostrar: 	nil
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	nil
		poemaConstruido: 	
		imagenes: 	nil
		poemas: 	a Poemas


[ model first renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


BlockClosure>>renderOn:
	Receiver: [ model first renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	60
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderContentOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()



--- The full stack ---
UndefinedObject(Object)>>doesNotUnderstand: #renderOnComponent:withRenderer:
[ imagenesAMostrar
	renderOnComponent: (WAImagenes owner: self model: imagenesAMostrar)
	withRenderer: html ] in WAConstruccionDePoemas>>renderImagenes:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderImagenes:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model first renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
WAToolDecoration>>renderContentOn:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
THERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAConstruccionDePoemas>>renderName:in:
8 April 2020 9:34:34.564361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderName:in:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	renderName: '' in: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAConstruccionDePoemas>>renderName:in:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


Poema>>renderOnComponent:withRenderer:
	Receiver: 
	Arguments and temporary variables: 
		waComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


[ unPoema renderOnComponent: self withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unPoema: 	
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


BlockClosure>>renderOn:
	Receiver: [ unPoema renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
		startpc: 	53
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'sidebar' 'id'->'sidebar')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'sidebar' 'id'->'sidebar')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'sidebar' 'id'->'sidebar')
		tag: 	'div'


WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unPoema: 	
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	nil
		poemaConstruido: 	
		imagenes: 	nil
		poemas: 	a Poemas


[ model first renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


BlockClosure>>renderOn:
	Receiver: [ model first renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	60
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()



--- The full stack ---
WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderName:in:
Poema>>renderOnComponent:withRenderer:
[ unPoema renderOnComponent: self withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model first renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContexTHERE_BE_DRAGONS_HERE
MessageNotUnderstood: WAConstruccionDePoemas>>renderName:in:
8 April 2020 9:35:30.721361 pm

VM: Win32 - IX86 - 10.0 - CoInterpreter VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
StackToRegisterMappingCogit VMMaker.oscog-eem.2504 uuid: a00b0fad-c04c-47a6-8a11-5dbff110ac11 Jan  5 2019
VM: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git Date: Sat Jan 5 20:00:11 2019 CommitHash: 7a3c6b6 Plugins: 201901051900 https://github.com/OpenSmalltalk/opensmalltalk-vm.git

Image: Pharo7.0.4 [Build information: Pharo-7.0.4+build.168.sha.ccd1f6489120f58ddeacb2cac77cd3a0f0dcfbe6 (32 Bit)]

WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderName:in:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aMessage: 	renderName: '' in: a WAHtmlCanvas
		exception: 	MessageNotUnderstood: WAConstruccionDePoemas>>renderName:in:
		resumeValue: 	nil
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


Poema>>renderOnComponent:withRenderer:
	Receiver: 
	Arguments and temporary variables: 
		waComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		versos: 	an OrderedCollection()
		owner: 	a PoemasNulo
		textoDePoema: 	''
		autor: 	''


[ unPoema renderOnComponent: self withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unPoema: 	
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


BlockClosure>>renderOn:
	Receiver: [ unPoema renderOnComponent: self withRenderer: html ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
		startpc: 	53
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'sidebar' 'id'->'sidebar')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'sidebar' 'id'->'sidebar')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ unPoema renderOnComponent: self withRenderer: html ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	a WAGenericTag
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'sidebar' 'id'->'sidebar')
		tag: 	'div'


WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		unPoema: 	
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


ConstruccionDePoemas>>renderOnComponent:withRenderer:
	Receiver: a ConstruccionDePoemas
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		dependents: 	nil
		announcer: 	nil
		muestraDePoemas: 	nil
		poemaConstruido: 	
		imagenes: 	nil
		poemas: 	a Poemas


[ model first renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


BlockClosure>>renderOn:
	Receiver: [ model first renderOnComponent: self withRenderer: html.
html div class: 'clear' ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAConstruccionDePoemas>>renderContentOn:
		startpc: 	60
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


BlockClosure>>renderOn:
	Receiver: [ self before.
canvas render: anObject.
self after ]
	Arguments and temporary variables: 
		aRenderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		outerContext: 	WAGenericTag(WATagBrush)>>with:
		startpc: 	54
		numArgs: 	0


WAHtmlCanvas(WARenderer)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>render:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		anObject: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAHtmlCanvas(WACanvas)>>nest:
	Receiver: a WAHtmlCanvas
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		context: 	a WARenderContext
		lastId: 	nil
		currentBrush: 	nil
		parentBrush: 	a WAGenericTag


WAGenericTag(WABrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		aBlock: 	[ self before.
canvas render: anObject.
self after ]
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAGenericTag(WATagBrush)>>with:
	Receiver: a WAGenericTag
	Arguments and temporary variables: 
		anObject: 	[ model first renderOnComponent: self withRenderer: html.
html div cl...etc...
	Receiver's instance variables: 
		canvas: 	a WAHtmlCanvas
		parent: 	nil
		closed: 	false
		attributes: 	a WAHtmlAttributes('class'->'container' 'id'->'container')
		tag: 	'div'


WAConstruccionDePoemas>>renderContentOn:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor>>visitPainter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
		renderer: 	a WAHtmlCanvas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderVisitor(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderVisitor
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WARenderVisitor(WAVisitor)>>visit:
	Receiver: a WARenderVisitor
	Arguments and temporary variables: 
		anObject: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		renderContext: 	a WARenderContext


WARenderingGuide(WAPresenterGuide)>>visitPainter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPainter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitPresenter:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aPresenter: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WARenderingGuide(WAPainterVisitor)>>visitComponent:
	Receiver: a WARenderingGuide
	Arguments and temporary variables: 
		aComponent: 	a WAConstruccionDePoemas
	Receiver's instance variables: 
		client: 	a WARenderVisitor


WAConstruccionDePoemas(WAComponent)>>accept:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aVisitor: 	a WARenderingGuide
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
	Receiver: a WAConstruccionDePoemas
	Arguments and temporary variables: 
		aRenderContext: 	a WARenderContext
	Receiver's instance variables: 
		decoration: 	a WAValueHolder contents: a WAToolDecoration
		model: 	an Array(a ConstruccionDePoemas)


WAToolDecoration(WADecoration)>>renderNextOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()


WAToolDecoration>>renderChildOn:
	Receiver: a WAToolDecoration
	Arguments and temporary variables: 
		html: 	a WAHtmlCanvas
	Receiver's instance variables: 
		next: 	a WAValueHolder contents: a WAConstruccionDePoemas
		plugins: 	an OrderedCollection(a WANewSessionToolPlugin a WAConfigureToolPlugin ...etc...
		showHalos: 	a WAValueHolder contents: false
		halos: 	an IdentityDictionary()



--- The full stack ---
WAConstruccionDePoemas(Object)>>doesNotUnderstand: #renderName:in:
Poema>>renderOnComponent:withRenderer:
[ unPoema renderOnComponent: self withRenderer: html ] in WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderPoemaConstruido:withRenderer:
ConstruccionDePoemas>>renderOnComponent:withRenderer:
[ model first renderOnComponent: self withRenderer: html.
html div class: 'clear' ] in WAConstruccionDePoemas>>renderContentOn:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
[ self before.
canvas render: anObject.
self after ] in WAGenericTag(WATagBrush)>>with:
BlockClosure>>renderOn:
WAHtmlCanvas(WARenderer)>>render:
WAHtmlCanvas(WACanvas)>>render:
WAHtmlCanvas(WACanvas)>>nest:
WAGenericTag(WABrush)>>with:
WAGenericTag(WATagBrush)>>with:
WAConstruccionDePoemas>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitComponent:
WAConstruccionDePoemas(WAComponent)>>accept:
WAConstruccionDePoemas(WAPresenter)>>renderUndecoratedWithContext:
WAToolDecoration(WADecoration)>>renderNextOn:
WAToolDecoration>>renderChildOn:
 - - - - - - - - - - - - - - -  
			- - - - - - - - - - - - - - - - - -
WAToolDecoration>>renderContentOn:
WARenderVisitor>>visitPainter:
WARenderVisitor(WAPainterVisitor)>>visitPresenter:
WARenderVisitor(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderVisitor(WAVisitor)>>visit:
WARenderingGuide(WAPresenterGuide)>>visitPainter:
WARenderingGuide(WAPainterVisitor)>>visitPresenter:
WARenderingGuide(WAPainterVisitor)>>visitDecoration:
WAToolDecoration(WADecoration)>>accept:
WARenderingGuide(WAPainterVisitor)>>visitDecorationsOfComponent:
WAConstruccionDePoemas(WAComponent)>>acceptDecorated:
WARenderingGuide(WAPresenterGuide)>>visit:
WAConstruccionDePoemas(WAPainter)>>renderWithContext:
WARenderPhaseContinuation>>processRendering:
[ :response | self processRendering: response ] in WARenderPhaseContinuation>>handleFiltered:
WARequestContext>>respond:
WARenderPhaseContinuation(WASessionContinuation)>>respond:
WARenderPhaseContinuation>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WARenderPhaseContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WARenderPhaseContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WARenderPhaseContinuation(WASessionContinuation)>>handle:
BlockClosure>>on:do:
WARenderPhaseContinuation(WASessionContinuation)>>withUnregisteredHandlerDo:
WARenderPhaseContinuation(WASessionContinuation)>>handle:
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>continue
WAInitialRenderLoopContinuation(WAActionPhaseContinuation)>>handleFiltered:
[ self filter handleFiltered: aRequestContext ] in WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ activeProcess psValueAt: index put: anObject.
aBlock value ] in WACurrentRequestContext(DynamicVariable)>>value:during:
BlockClosure>>ensure:
WACurrentRequestContext(DynamicVariable)>>value:during:
WACurrentRequestContext class(DynamicVariable class)>>value:during:
WACurrentRequestContext class(GRDynamicVariable class)>>use:during:
[ WACurrentRequestContext use: self during: aBlock ] in WARequestContext>>push:during:
BlockClosure>>ensure:
WARequestContext>>push:during:
WAInitialRenderLoopContinuation(WARequestHandler)>>handle:
[ super handle: aRequestContext ] in WAInitialRenderLoopContinuation(WASessionContin